{"version":3,"file":"bybitapi.js","mappings":"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","sources":["webpack://bybitapi/webpack/universalModuleDefinition","webpack://bybitapi/./src/account-asset-client-v3.ts","webpack://bybitapi/./src/account-asset-client.ts","webpack://bybitapi/./src/constants/enum.ts","webpack://bybitapi/./src/contract-client.ts","webpack://bybitapi/./src/copy-trading-client.ts","webpack://bybitapi/./src/index.ts","webpack://bybitapi/./src/inverse-client.ts","webpack://bybitapi/./src/inverse-futures-client.ts","webpack://bybitapi/./src/linear-client.ts","webpack://bybitapi/./src/rest-client-v5.ts","webpack://bybitapi/./src/spot-client-v3.ts","webpack://bybitapi/./src/spot-client.ts","webpack://bybitapi/./src/types/index.ts","webpack://bybitapi/./src/types/request/index.ts","webpack://bybitapi/./src/types/response/index.ts","webpack://bybitapi/./src/unified-margin-client.ts","webpack://bybitapi/./src/usdc-option-client.ts","webpack://bybitapi/./src/usdc-perpetual-client.ts","webpack://bybitapi/./src/util/BaseRestClient.ts","webpack://bybitapi/./src/util/WsStore.ts","webpack://bybitapi/./src/util/browser-support.ts","webpack://bybitapi/./src/util/index.ts","webpack://bybitapi/./src/util/logger.ts","webpack://bybitapi/./src/util/requestUtils.ts","webpack://bybitapi/./src/util/typeGuards.ts","webpack://bybitapi/./src/util/websocket-util.ts","webpack://bybitapi/./src/websocket-client.ts","webpack://bybitapi/./node_modules/events/events.js","webpack://bybitapi/./node_modules/isomorphic-ws/browser.js","webpack://bybitapi/./node_modules/axios/dist/browser/axios.cjs","webpack://bybitapi/webpack/bootstrap","webpack://bybitapi/webpack/runtime/global","webpack://bybitapi/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bybitapi\"] = factory();\n\telse\n\t\troot[\"bybitapi\"] = factory();\n})(self, () => {\nreturn ","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIKeyInfoV3,\n  APIResponseV3WithTime,\n  APIResponseWithTime,\n  AccountCoinBalanceResponseV3,\n  AccountCoinBalancesRequestV3,\n  AccountCoinBalancesResponseV3,\n  AssetInfoRequestV3,\n  AssetInfoResponseV3,\n  CoinInfoQueryResponseV3,\n  CreateSubAPIKeyRequestV3,\n  CreateSubAPIKeyResponseV3,\n  CreateSubMemberRequestV3,\n  CreateSubMemberResponseV3,\n  DepositAddressResponseV3,\n  DepositRecordQueryRequestV3,\n  DepositRecordQueryResponseV3,\n  InternalTransferRequestV3,\n  ModifyAPIKeyRequestV3,\n  QueryDepositAddressRequestV3,\n  QueryInternalTransferSResponseV3,\n  QueryInternalTransfersRequestV3,\n  QuerySubAccountDepositAddressRequestV3,\n  SingleAccountCoinBalanceRequestV3,\n  SubAccountTransferRequestV3,\n  SubAccountTransferResponseV3,\n  SubDepositRecordQueryRequestV3,\n  SubMemberResponseV3,\n  SupportedDepositListRequestV3,\n  SupportedDepositListResponseV3,\n  TransferCoinListRequestV3,\n  UniversalTransferCreateResponse,\n  UniversalTransferListRequestV3,\n  UniversalTransferListResponseV3,\n  UniversalTransferRequestV3,\n  WithdrawCreateRequestV3,\n  WithdrawRecordQueryRequestV3,\n  WithdrawRecordsQueryResponseV3,\n} from './types';\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for Account Asset V3 APIs\n */\nexport class AccountAssetClientV3 extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.v3;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time);\n  }\n\n  getServerTime(): Promise<\n    APIResponseV3WithTime<{ timeSecond: string; timeNano: string }>\n  > {\n    return this.get('/v3/public/time');\n  }\n\n  /**\n   *\n   * Transfer Data Endpoints\n   *\n   */\n\n  createInternalTransfer(\n    params: InternalTransferRequestV3\n  ): Promise<APIResponseWithTime<{ transferId: string }>> {\n    return this.postPrivate(\n      '/asset/v3/private/transfer/inter-transfer',\n      params\n    );\n  }\n\n  getInternalTransfers(\n    params: QueryInternalTransfersRequestV3\n  ): Promise<APIResponseWithTime<QueryInternalTransferSResponseV3>> {\n    return this.getPrivate(\n      '/asset/v3/private/transfer/inter-transfer/list/query',\n      params\n    );\n  }\n\n  createSubAccountTransfer(params: {\n    transferId: string;\n    coin: string;\n    amount: string;\n    subMemberId: number;\n    type: 'IN' | 'OUT';\n  }): Promise<APIResponseWithTime<{ transferId: string }>> {\n    return this.postPrivate(\n      '/asset/v3/private/transfer/sub-member-transfer',\n      params\n    );\n  }\n\n  getSubAccountTransfers(\n    params?: SubAccountTransferRequestV3\n  ): Promise<APIResponseWithTime<SubAccountTransferResponseV3>> {\n    return this.getPrivate(\n      '/asset/v3/private/transfer/sub-member-transfer/list/query',\n      params\n    );\n  }\n\n  getSubAccounts(): Promise<\n    APIResponseWithTime<{\n      subMemberIds: string[];\n      transferableSubMemberIds: string[];\n    }>\n  > {\n    return this.getPrivate('/asset/v3/private/transfer/sub-member/list/query');\n  }\n\n  enableUniversalTransfer(params?: {\n    subMemberIds?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate(\n      '/asset/v3/private/transfer/transfer-sub-member-save',\n      params\n    );\n  }\n\n  createUniversalTransfer(\n    params: UniversalTransferRequestV3\n  ): Promise<APIResponseWithTime<UniversalTransferCreateResponse>> {\n    return this.postPrivate(\n      '/asset/v3/private/transfer/universal-transfer',\n      params\n    );\n  }\n\n  getUniversalTransfers(\n    params: UniversalTransferListRequestV3\n  ): Promise<APIResponseWithTime<UniversalTransferListResponseV3>> {\n    return this.getPrivate(\n      '/asset/v3/private/transfer/universal-transfer/list/query',\n      params\n    );\n  }\n\n  getTransferableCoinList(\n    params: TransferCoinListRequestV3\n  ): Promise<APIResponseWithTime<{ list: string[] }>> {\n    return this.getPrivate(\n      '/asset/v3/private/transfer/transfer-coin/list/query',\n      params\n    );\n  }\n\n  getAccountCoinBalance(\n    params: SingleAccountCoinBalanceRequestV3\n  ): Promise<APIResponseWithTime<AccountCoinBalanceResponseV3>> {\n    return this.getPrivate(\n      '/asset/v3/private/transfer/account-coin/balance/query',\n      params\n    );\n  }\n\n  getAccountCoinBalances(\n    params: AccountCoinBalancesRequestV3\n  ): Promise<APIResponseWithTime<AccountCoinBalancesResponseV3>> {\n    return this.getPrivate(\n      '/asset/v3/private/transfer/account-coins/balance/query',\n      params\n    );\n  }\n\n  getAssetInfo(\n    params?: AssetInfoRequestV3\n  ): Promise<APIResponseWithTime<AssetInfoResponseV3>> {\n    return this.getPrivate(\n      '/asset/v3/private/transfer/asset-info/query',\n      params\n    );\n  }\n\n  /**\n   *\n   * Wallet & Deposit Endpoints\n   *\n   */\n\n  /** Get Deposit Spec */\n  getSupportedDepositList(\n    params?: SupportedDepositListRequestV3\n  ): Promise<APIResponseWithTime<SupportedDepositListResponseV3>> {\n    return this.get(\n      '/asset/v3/public/deposit/allowed-deposit-list/query',\n      params\n    );\n  }\n\n  getDepositRecords(\n    params?: DepositRecordQueryRequestV3\n  ): Promise<APIResponseWithTime<DepositRecordQueryResponseV3>> {\n    return this.getPrivate('/asset/v3/private/deposit/record/query', params);\n  }\n\n  getSubDepositRecords(\n    params: SubDepositRecordQueryRequestV3\n  ): Promise<APIResponseWithTime<DepositRecordQueryResponseV3>> {\n    return this.getPrivate(\n      '/asset/v3/private/deposit/sub-member-record/query',\n      params\n    );\n  }\n\n  getWithdrawRecords(\n    params?: WithdrawRecordQueryRequestV3\n  ): Promise<APIResponseWithTime<WithdrawRecordsQueryResponseV3>> {\n    return this.getPrivate('/asset/v3/private/withdraw/record/query', params);\n  }\n\n  getCoinInformation(\n    coin?: string\n  ): Promise<APIResponseWithTime<CoinInfoQueryResponseV3>> {\n    return this.getPrivate('/asset/v3/private/coin-info/query', { coin });\n  }\n\n  submitWithdrawal(\n    params: WithdrawCreateRequestV3\n  ): Promise<APIResponseWithTime<{ id: string }>> {\n    return this.postPrivate('/asset/v3/private/withdraw/create', params);\n  }\n\n  cancelWithdrawal(\n    withdrawalId: number\n  ): Promise<APIResponseWithTime<{ status: 1 | 0 }>> {\n    return this.postPrivate('/asset/v3/private/withdraw/create', {\n      withdrawalId,\n    });\n  }\n\n  getMasterAccountDepositAddress(\n    params?: QueryDepositAddressRequestV3\n  ): Promise<APIResponseWithTime<DepositAddressResponseV3>> {\n    return this.getPrivate('/asset/v3/private/deposit/address/query', params);\n  }\n\n  getSubAccountDepositAddress(\n    params: QuerySubAccountDepositAddressRequestV3\n  ): Promise<APIResponseWithTime<DepositAddressResponseV3>> {\n    return this.getPrivate(\n      '/asset/v3/private/deposit/sub-member-address/query',\n      params\n    );\n  }\n\n  createSubMember(\n    params: CreateSubMemberRequestV3\n  ): Promise<APIResponseWithTime<CreateSubMemberResponseV3>> {\n    return this.postPrivate('/user/v3/private/create-sub-member', params);\n  }\n\n  createSubAPIKey(\n    params: CreateSubAPIKeyRequestV3\n  ): Promise<APIResponseWithTime<CreateSubAPIKeyResponseV3>> {\n    return this.postPrivate('/user/v3/private/create-sub-api', params);\n  }\n\n  /**\n   * Get Sub UID List\n   */\n  getSubMembers(): Promise<APIResponseWithTime<SubMemberResponseV3>> {\n    return this.getPrivate('/user/v3/private/query-sub-members');\n  }\n\n  /**\n   * Froze Sub UID\n   */\n  freezeSubMember(\n    subuid: number,\n    frozenStatus: 0 | 1\n  ): Promise<APIResponseWithTime<{}>> {\n    return this.postPrivate('/user/v3/private/frozen-sub-member', {\n      subuid,\n      frozen: frozenStatus,\n    });\n  }\n\n  getAPIKeyInformation(): Promise<APIResponseWithTime<APIKeyInfoV3>> {\n    return this.getPrivate('/user/v3/private/query-api');\n  }\n\n  modifyMasterAPIKey(\n    params: ModifyAPIKeyRequestV3\n  ): Promise<APIResponseWithTime<APIKeyInfoV3>> {\n    return this.postPrivate('/user/v3/private/update-api', params);\n  }\n\n  modifySubAPIKey(\n    params: ModifyAPIKeyRequestV3\n  ): Promise<APIResponseWithTime<APIKeyInfoV3>> {\n    return this.postPrivate('/user/v3/private/update-sub-api', params);\n  }\n\n  /** WARNING: BE CAREFUL! The API key used to call this interface will be invalid immediately. */\n  deleteMasterAPIKey(): Promise<APIResponseWithTime<{}>> {\n    return this.postPrivate('/user/v3/private/delete-api');\n  }\n\n  /** WARNING: BE CAREFUL! The API key used to call this interface will be invalid immediately. */\n  deleteSubAPIKey(): Promise<APIResponseWithTime<{}>> {\n    return this.postPrivate('/user/v3/private/delete-sub-api');\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponseWithTime,\n  AccountAssetInformationRequest,\n  DepositRecordsRequest,\n  EnableUniversalTransferRequest,\n  InternalTransferRequest,\n  SubAccountTransferRequest,\n  SupportedDepositListRequest,\n  TransferQueryRequest,\n  UniversalTransferRequest,\n  WithdrawalRecordsRequest,\n  WithdrawalRequest,\n} from './types';\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for Account Asset APIs\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nexport class AccountAssetClient extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.accountAsset;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Transfer Data Endpoints\n   *\n   */\n\n  createInternalTransfer(\n    params: InternalTransferRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('/asset/v1/private/transfer', params);\n  }\n\n  createSubAccountTransfer(\n    params: SubAccountTransferRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('/asset/v1/private/sub-member/transfer', params);\n  }\n\n  getInternalTransfers(\n    params?: TransferQueryRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('/asset/v1/private/transfer/list', params);\n  }\n\n  getSubAccountTransfers(\n    params?: TransferQueryRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate(\n      '/asset/v1/private/sub-member/transfer/list',\n      params,\n    );\n  }\n\n  getSubAccounts(): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('/asset/v1/private/sub-member/member-ids');\n  }\n\n  enableUniversalTransfer(\n    params?: EnableUniversalTransferRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('/asset/v1/private/transferable-subs/save', params);\n  }\n\n  createUniversalTransfer(\n    params: UniversalTransferRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('/asset/v1/private/universal/transfer', params);\n  }\n\n  getUniversalTransfers(\n    params?: TransferQueryRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('/asset/v1/private/universal/transfer/list', params);\n  }\n\n  /**\n   *\n   * Wallet & Deposit Endpoints\n   *\n   */\n\n  getSupportedDepositList(\n    params?: SupportedDepositListRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.get('/asset/v1/public/deposit/allowed-deposit-list', params);\n  }\n\n  getDepositRecords(\n    params?: DepositRecordsRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('/asset/v1/private/deposit/record/query', params);\n  }\n\n  getWithdrawRecords(\n    params?: WithdrawalRecordsRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('/asset/v1/private/withdraw/record/query', params);\n  }\n\n  getCoinInformation(coin?: string): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('/asset/v1/private/coin-info/query', { coin });\n  }\n\n  getAssetInformation(\n    params?: AccountAssetInformationRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('/asset/v1/private/asset-info/query', params);\n  }\n\n  submitWithdrawal(\n    params: WithdrawalRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('/asset/v1/private/withdraw', params);\n  }\n\n  cancelWithdrawal(withdrawalId: number): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('/asset/v1/private/withdraw/cancel', {\n      id: withdrawalId,\n    });\n  }\n\n  getDepositAddress(coin: string): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('/asset/v1/private/deposit/address', { coin });\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime> {\n    return this.get('/v2/public/time');\n  }\n\n  getApiAnnouncements(): Promise<APIResponseWithTime<any[]>> {\n    return this.get('/v2/public/announcement');\n  }\n}\n","export const linearPositionModeEnum = {\n  OneWayMode: 'MergedSingle',\n  HedgeMode: 'BothSide',\n} as const;\n\nexport const positionTpSlModeEnum = {\n  /** Full take profit/stop loss mode (a single TP order and a single SL order can be placed, covering the entire position) */\n  Full: 'Full',\n  /** Partial take profit/stop loss mode (multiple TP and SL orders can be placed, covering portions of the position) */\n  Partial: 'Partial',\n} as const;\n\nexport const API_ERROR_CODE = {\n  BALANCE_INSUFFICIENT_SPOT: -1131,\n  ORDER_NOT_FOUND_OR_TOO_LATE_SPOT: -2013,\n  SUCCESS: 0,\n  /** This could mean bad request, incorrect value types or even incorrect/missing values */\n  PARAMS_MISSING_OR_WRONG: 10001,\n  INVALID_API_KEY_OR_PERMISSIONS: 10003,\n  SIGNATURE_NOT_VALID: 10004,\n  INCORRECT_API_KEY_PERMISSIONS: 10005,\n  /** API key requires specific whitelisted IPs, and this IP was not in the list */\n  INCORRECT_API_REQUEST_IP: 10010,\n  DB_ERROR_WRONG_CURSOR: 10016,\n  /** Account not unified margin, update required */\n  ACCOUNT_NOT_UNIFIED: 10020,\n  UNKNOWN_ERROR: 12000,\n  BALANCE_INSUFFICIENT_SPOT_V3: 12131,\n  ORDER_NOT_FOUND_SPOT_V3: 12213,\n  ORDER_NOT_FOUND_LEVERAGED_TOKEN: 12407,\n  EXCEEDED_UPPER_LIMIT_LEVERAGED_TOKEN: 12409,\n  QUERY_ACCOUNT_INFO_ERROR: 12602,\n  CROSS_MARGIN_USER_NOT_FOUND: 12607,\n  CROSS_MARGIN_REPAYMENT_NOT_REQUIRED: 12616,\n  CROSS_MARGIN_NOT_ENABLED: 12640,\n  ORDER_NOT_FOUND_OR_TOO_LATE: 20001,\n  POSITION_STATUS_NOT_NORMAL: 30013,\n  CANNOT_SET_TRADING_STOP_FOR_ZERO_POS: 30024,\n  /** Seen when placing an order */\n  INSUFFICIENT_BALANCE_FOR_ORDER_COST: 30031,\n  POSITION_IDX_NOT_MATCH_POSITION_MODE: 30041,\n  /** Seen if a conditional order is too large */\n  INSUFFICIENT_BALANCE: 30042,\n  /** E.g. trying to change position margin while on cross */\n  POSITION_IS_CROSS_MARGIN: 30056,\n  POSITION_MODE_NOT_MODIFIED: 30083,\n  ISOLATED_NOT_MODIFIED: 30084,\n  RISK_LIMIT_NOT_EXISTS: 30090,\n  SUB_USER_ALREADY_EXISTS: 31005,\n  LEVERAGE_NOT_MODIFIED: 34036,\n  SAME_SLTP_MODE: 37002,\n  COPY_TRADE_NOT_OPEN_ORDER: 39426,\n  V5_ORDER_NOT_FOUND: 110001,\n  V5_INSUFFICIENT_BALANCE: 110007,\n  V5_API_KEY_PERMISSION_DENIED: 10005,\n  V5_CROSS_ISOLATED_MARGIN_NOT_CHANGED: 110026,\n  V5_LEVERAGE_NOT_CHANGED: 110043,\n  V5_MARGIN_MODE_NOT_CHANGED: 110073,\n  V5_TPSL_NOT_CHANGED: 10001,\n  V5_RISK_ID_NOT_CHANGED: 10001,\n  V5_AUTO_ADD_MARGIN_NOT_CHANGED: 10001,\n  V5_TPSL_ERROR_NO_POSITION: 10001,\n  V5_RISK_ID_NOT_MODIFIED: 110075,\n  QTY_EXCEEDS_MAX_LIMIT: 130006,\n  ORDER_NOT_FOUND_OR_TOO_LATE_LINEAR: 130010,\n  ORDER_COST_NOT_AVAILABLE: 130021,\n  CANNOT_SET_LINEAR_TRADING_STOP_FOR_ZERO_POS: 130024,\n  ISOLATED_NOT_MODIFIED_LINEAR: 130056,\n  POSITION_SIZE_IS_ZERO: 130057,\n  AUTO_ADD_MARGIN_NOT_MODIFIED: 130060,\n  INSUFFICIENT_BALANCE_FOR_ORDER_COST_LINEAR: 130080,\n  SAME_SLTP_MODE_LINEAR: 130150,\n  NOT_SUPPORTED_FOR_SUBACCOUNTS: 131003,\n  TRANSFER_ID_EXISTS: 131214,\n  RISK_ID_NOT_MODIFIED: 134026,\n  CONTRACT_ORDER_NOT_EXISTS: 140001,\n  CONTRACT_INSUFFICIENT_BALANCE: 140007,\n  CONTRACT_POSITION_MODE_NOT_MODIFIED: 140025,\n  CONTRACT_MARGIN_MODE_NOT_MODIFIED: 140026,\n  CONTRACT_RISK_LIMIT_INFO_NOT_EXISTS: 140031,\n  CONTRACT_SET_LEVERAGE_NOT_MODIFIED: 140043,\n  SUB_USER_NOT_FOUND: 141009,\n  SPOT_LEVERAGE_TOKEN_INSUFFICIENT_BALANCE: 175006,\n  SPOT_LEVERAGE_TOKEN_ORDER_NOT_FOUND: 175007,\n  SPOT_LEVERAGE_QUIZ_REQUIRED: 175010,\n  SPOT_MARGIN_NOT_ENABLED: 176008,\n  SPOT_MARGIN_QUESTIONNAIRE_NOT_SUBMIT: 176037,\n  /** E.g. USDC Options trading, trying to access a symbol that is no longer active */\n  CONTRACT_NAME_NOT_EXIST: 3100111,\n  ORDER_NOT_EXIST: 3100136,\n  NO_ACTIVE_ORDER: 3100205,\n  /** E.g. USDC Options trading when the account hasn't been opened for USDC Options yet */\n  ACCOUNT_NOT_EXIST: 3200200,\n  INCORRECT_PRIVATE_OPERATIONS: 3303001,\n  SET_MARGIN_MODE_FAILED_USDC: 3400045,\n  INCORRECT_MMP_PARAMETERS: 3500712,\n  INSTITION_MMP_PROFILE_NOT_FOUND: 3500713,\n} as const;\n\n/**\n * Position idx, used to identify positions in different position modes.\n * Required if you are under One-Way Mode:\n */\nexport enum LinearPositionIdx {\n  OneWayMode = 0,\n  BuySide = 1,\n  SellSide = 2,\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponseV3,\n  APIResponseWithTime,\n  ContractActiveOrdersRequest,\n  ContractCancelOrderRequest,\n  ContractClosedPNLRequest,\n  ContractHistoricOrder,\n  ContractHistoricOrdersRequest,\n  ContractListResult,\n  ContractModifyOrderRequest,\n  ContractOrderRequest,\n  ContractPositionsRequest,\n  ContractSetAutoAddMarginRequest,\n  ContractSetMarginSwitchRequest,\n  ContractSetPositionModeRequest,\n  ContractSetTPSLRequest,\n  ContractSymbolTicker,\n  ContractUserExecutionHistoryRequest,\n  ContractWalletFundRecordRequest,\n  PaginatedResult,\n  UMCandlesRequest,\n  UMCategory,\n  UMFundingRateHistoryRequest,\n  UMInstrumentInfoRequest,\n  UMOpenInterestRequest,\n  UMOptionDeliveryPriceRequest,\n  UMPublicTradesRequest,\n} from './types';\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for Derivatives V3 Contract APIs\n */\nexport class ContractClient extends BaseRestClient {\n  getClientType() {\n    // Follows the same authentication mechanism as other v3 APIs (e.g. USDC)\n    return REST_CLIENT_TYPE_ENUM.v3;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints : these seem exactly the same as the unified margin market data endpoints\n   *\n   */\n\n  /** Query order book info. Each side has a depth of 25 orders. */\n  getOrderBook(\n    symbol: string,\n    category?: string,\n    limit?: number,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/order-book/L2', {\n      category,\n      symbol,\n      limit,\n    });\n  }\n\n  /** Get candles/klines */\n  getCandles(params: UMCandlesRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/kline', params);\n  }\n\n  /** Get a symbol price/statistics ticker */\n  getSymbolTicker(\n    category: UMCategory | '',\n    symbol?: string,\n  ): Promise<APIResponseV3<ContractListResult<ContractSymbolTicker>>> {\n    return this.get('/derivatives/v3/public/tickers', { category, symbol });\n  }\n\n  /** Get trading rules per symbol/contract, incl price/amount/value/leverage filters */\n  getInstrumentInfo(\n    params: UMInstrumentInfoRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/instruments-info', params);\n  }\n\n  /** Query mark price kline (like getCandles() but for mark price). */\n  getMarkPriceCandles(params: UMCandlesRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/mark-price-kline', params);\n  }\n\n  /** Query Index Price Kline */\n  getIndexPriceCandles(params: UMCandlesRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/index-price-kline', params);\n  }\n\n  /**\n   * The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC.\n   * For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent.\n   */\n  getFundingRateHistory(\n    params: UMFundingRateHistoryRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get(\n      '/derivatives/v3/public/funding/history-funding-rate',\n      params,\n    );\n  }\n\n  /** Get Risk Limit */\n  getRiskLimit(\n    category: UMCategory,\n    symbol: string,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/risk-limit/list', {\n      category,\n      symbol,\n    });\n  }\n\n  /** Get option delivery price */\n  getOptionDeliveryPrice(\n    params: UMOptionDeliveryPriceRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/delivery-price', params);\n  }\n\n  /** Get public trading history */\n  getTrades(params: UMPublicTradesRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/recent-trade', params);\n  }\n\n  /**\n   * Gets the total amount of unsettled contracts.\n   * In other words, the total number of contracts held in open positions.\n   */\n  getOpenInterest(params: UMOpenInterestRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/open-interest', params);\n  }\n\n  /**\n   *\n   * Contract Account Endpoints\n   *\n   */\n\n  /** -> Order API */\n\n  /** Place an order */\n  submitOrder(params: ContractOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/contract/v3/private/order/create', params);\n  }\n\n  /**\n   * Query order history.\n   *\n   * As order creation/cancellation is asynchronous, the data returned from the interface may be delayed.\n   * To access order information in real-time, call getActiveOrders().\n   */\n  getHistoricOrders(\n    params: ContractHistoricOrdersRequest,\n  ): Promise<APIResponseV3<PaginatedResult<ContractHistoricOrder>>> {\n    return this.getPrivate('/contract/v3/private/order/list', params);\n  }\n\n  /** Cancel order */\n  cancelOrder(params: ContractCancelOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/contract/v3/private/order/cancel', params);\n  }\n\n  /** Cancel all orders */\n  cancelAllOrders(symbol: string): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/contract/v3/private/order/cancel-all', {\n      symbol,\n    });\n  }\n\n  /**\n   * Replace order\n   *\n   * Active order parameters (such as quantity, price) and stop order parameters\n   * cannot be modified in one request at the same time.\n   *\n   * Please request modification separately.\n   */\n  modifyOrder(params: ContractModifyOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/contract/v3/private/order/replace', params);\n  }\n\n  /** Query Open Order(s) (real-time) */\n  getActiveOrders(\n    params: ContractActiveOrdersRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/contract/v3/private/order/unfilled-orders',\n      params,\n    );\n  }\n\n  /** -> Positions API */\n\n  /**\n   * Query my positions real-time. Accessing personal list of positions.\n   * Either symbol or settleCoin is required.\n   * Users can access their position holding information through this interface, such as the number of position holdings and wallet balance.\n   */\n  getPositions(params?: ContractPositionsRequest): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/contract/v3/private/position/list', params);\n  }\n\n  /** Set auto add margin, or Auto-Margin Replenishment. */\n  setAutoAddMargin(\n    params: ContractSetAutoAddMarginRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/position/set-auto-add-margin',\n      params,\n    );\n  }\n\n  /** Switch cross margin mode/isolated margin mode */\n  setMarginSwitch(\n    params: ContractSetMarginSwitchRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/position/switch-isolated',\n      params,\n    );\n  }\n\n  /** Supports switching between One-Way Mode and Hedge Mode at the coin level. */\n  setPositionMode(\n    params: ContractSetPositionModeRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/position/switch-mode',\n      params,\n    );\n  }\n\n  /**\n   * Switch mode between Full or Partial\n   */\n  setTPSLMode(\n    symbol: string,\n    tpSlMode: 'Full' | 'Partial',\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/contract/v3/private/position/switch-tpsl-mode', {\n      symbol,\n      tpSlMode,\n    });\n  }\n\n  /** Leverage setting. */\n  setLeverage(\n    symbol: string,\n    buyLeverage: string,\n    sellLeverage: string,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/contract/v3/private/position/set-leverage', {\n      symbol,\n      buyLeverage,\n      sellLeverage,\n    });\n  }\n\n  /**\n   * Set take profit, stop loss, and trailing stop for your open position.\n   * If using partial mode, TP/SL/TS orders will not close your entire position.\n   */\n  setTPSL(params: ContractSetTPSLRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/position/trading-stop',\n      params,\n    );\n  }\n\n  /** Set risk limit */\n  setRiskLimit(\n    symbol: string,\n    riskId: number,\n    /** 0-one-way, 1-buy side, 2-sell side */\n    positionIdx: 0 | 1 | 2,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/contract/v3/private/position/set-risk-limit', {\n      symbol,\n      riskId,\n      positionIdx,\n    });\n  }\n\n  /**\n   * Get user's trading records.\n   * The results are ordered in descending order (the first item is the latest). Returns records up to 2 years old.\n   */\n  getUserExecutionHistory(\n    params: ContractUserExecutionHistoryRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/contract/v3/private/execution/list', params);\n  }\n\n  /**\n   * Get user's closed profit and loss records.\n   * The results are ordered in descending order (the first item is the latest).\n   */\n  getClosedProfitAndLoss(\n    params: ContractClosedPNLRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/contract/v3/private/position/closed-pnl', params);\n  }\n\n  /** Get the information of open interest limit. */\n  getOpenInterestLimitInfo(symbol: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/contract/v3/private/position/limit-info', {\n      symbol,\n    });\n  }\n\n  /** -> Account API */\n\n  /** Query wallet balance */\n  getBalances(coin?: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/contract/v3/private/account/wallet/balance', {\n      coin,\n    });\n  }\n\n  /** Get user trading fee rate */\n  getTradingFeeRate(symbol?: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/contract/v3/private/account/fee-rate', {\n      symbol,\n    });\n  }\n\n  /**\n   * Get wallet fund records.\n   * This endpoint also shows exchanges from the Asset Exchange,\n   * where the types for the exchange are ExchangeOrderWithdraw and ExchangeOrderDeposit.\n   *\n   * This endpoint returns incomplete information for transfers involving the derivatives wallet.\n   * Use the account asset API for creating and querying internal transfers.\n   */\n  getWalletFundRecords(\n    params?: ContractWalletFundRecordRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/contract/v3/private/account/wallet/fund-records',\n      params,\n    );\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime> {\n    return this.get('/v2/public/time');\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponseV3,\n  APIResponseWithTime,\n  CopyTradingCancelOrderRequest,\n  CopyTradingCloseOrderRequest,\n  CopyTradingOrderListRequest,\n  CopyTradingOrderRequest,\n  CopyTradingTradingStopRequest,\n  CopyTradingTransferRequest,\n} from './types';\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for USDC Perpetual APIs\n */\nexport class CopyTradingClient extends BaseRestClient {\n  getClientType() {\n    // Follows the same authentication mechanism as USDC APIs\n    return REST_CLIENT_TYPE_ENUM.v3;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   */\n\n  getSymbols(): Promise<APIResponseV3<any>> {\n    return this.get('/contract/v3/public/copytrading/symbol/list');\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  /** -> Order API */\n\n  /** Create order */\n  submitOrder(params: CopyTradingOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/copytrading/order/create',\n      params\n    );\n  }\n\n  /** Set Trading Stop */\n  setTradingStop(\n    params: CopyTradingTradingStopRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/copytrading/order/trading-stop',\n      params\n    );\n  }\n\n  /** Query Order List */\n  getActiveOrders(\n    params?: CopyTradingOrderListRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/contract/v3/private/copytrading/order/list',\n      params\n    );\n  }\n\n  /** Cancel order */\n  cancelOrder(\n    params: CopyTradingCancelOrderRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/copytrading/order/cancel',\n      params\n    );\n  }\n\n  /** Close Order.  This endpoint's rate_limit will decrease by 10 per request; ie, one request to this endpoint consumes 10 from the limit allowed per minute. */\n  closeOrder(\n    params: CopyTradingCloseOrderRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/copytrading/order/close',\n      params\n    );\n  }\n\n  /** -> Positions API */\n\n  /** Position List */\n  getPositions(symbol?: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/contract/v3/private/copytrading/position/list', {\n      symbol,\n    });\n  }\n\n  /** Close Position */\n  closePosition(\n    symbol: string,\n    positionIdx: string\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/contract/v3/private/copytrading/position/close', {\n      symbol,\n      positionIdx,\n    });\n  }\n\n  /** Only integers can be set to set the leverage */\n  setLeverage(\n    symbol: string,\n    buyLeverage: string,\n    sellLeverage: string\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/copytrading/position/set-leverage',\n      { symbol, buyLeverage, sellLeverage }\n    );\n  }\n\n  /**\n   *\n   * Wallet Data Endpoints\n   *\n   */\n\n  /** Get Wallet Balance */\n  getBalances(): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/contract/v3/private/copytrading/wallet/balance');\n  }\n\n  /** Transfer */\n  transfer(params: CopyTradingTransferRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/contract/v3/private/copytrading/wallet/transfer',\n      params\n    );\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime> {\n    return this.get('/v2/public/time');\n  }\n\n  getAnnouncements(): Promise<APIResponseWithTime<any[]>> {\n    return this.get('/v2/public/announcement');\n  }\n}\n","export * from './account-asset-client';\nexport * from './account-asset-client-v3';\nexport * from './copy-trading-client';\nexport * from './inverse-client';\nexport * from './inverse-futures-client';\nexport * from './linear-client';\nexport * from './rest-client-v5';\nexport * from './spot-client';\nexport * from './spot-client-v3';\nexport * from './usdc-option-client';\nexport * from './usdc-perpetual-client';\nexport * from './unified-margin-client';\nexport * from './contract-client';\nexport * from './websocket-client';\nexport * from './util/logger';\nexport * from './util';\nexport * from './types';\nexport * from './constants/enum';\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport {\n  APIResponseWithTime,\n  AssetExchangeRecordsReq,\n  CoinParam,\n  InverseActiveConditionalOrderRequest,\n  InverseActiveOrdersRequest,\n  InverseCancelConditionalOrderRequest,\n  InverseCancelOrderRequest,\n  InverseChangePositionMarginRequest,\n  InverseConditionalOrderRequest,\n  InverseGetClosedPnlRequest,\n  InverseGetOrderRequest,\n  InverseGetTradeRecordsRequest,\n  InverseOrderRequest,\n  InverseReplaceConditionalOrderRequest,\n  InverseReplaceOrderRequest,\n  InverseSetLeverageRequest,\n  InverseSetMarginTypeRequest,\n  InverseSetSlTpPositionModeRequest,\n  InverseSetTradingStopRequest,\n  SymbolInfo,\n  SymbolIntervalFromLimitParam,\n  SymbolLimitParam,\n  SymbolParam,\n  SymbolPeriodLimitParam,\n  WalletFundRecordsReq,\n  WithdrawRecordsReq,\n} from './types';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for Inverse Perpetual Futures APIs (v2)\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nexport class InverseClient extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.inverse;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   */\n\n  getOrderBook(params: SymbolParam): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/orderBook/L2', params);\n  }\n\n  getKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/kline/list', params);\n  }\n\n  /**\n   * Get latest information for symbol\n   */\n  getTickers(\n    params?: Partial<SymbolParam>,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/tickers', params);\n  }\n\n  getTrades(params: SymbolLimitParam): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/trading-records', params);\n  }\n\n  getSymbols(): Promise<APIResponseWithTime<SymbolInfo[]>> {\n    return this.get('v2/public/symbols');\n  }\n\n  getMarkPriceKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/mark-price-kline', params);\n  }\n\n  getIndexPriceKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/index-price-kline', params);\n  }\n\n  getPremiumIndexKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/premium-index-kline', params);\n  }\n\n  /**\n   *\n   * Market Data : Advanced\n   *\n   */\n\n  getOpenInterest(\n    params: SymbolPeriodLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/open-interest', params);\n  }\n\n  getLatestBigDeal(\n    params: SymbolLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/big-deal', params);\n  }\n\n  getLongShortRatio(\n    params: SymbolPeriodLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/account-ratio', params);\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  getApiKeyInfo(): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/account/api-key');\n  }\n\n  /**\n   *\n   * Wallet Data Endpoints\n   *\n   */\n\n  getWalletBalance(\n    params?: Partial<CoinParam>,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/wallet/balance', params);\n  }\n\n  getWalletFundRecords(\n    params?: WalletFundRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/wallet/fund/records', params);\n  }\n\n  getWithdrawRecords(\n    params?: WithdrawRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/wallet/withdraw/list', params);\n  }\n\n  getAssetExchangeRecords(\n    params?: AssetExchangeRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/exchange-order/list', params);\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime<{}>> {\n    return this.get('v2/public/time');\n  }\n\n  getApiAnnouncements(): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/announcement');\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  /**\n   * Active orders\n   */\n\n  placeActiveOrder(\n    orderRequest: InverseOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/order/create', orderRequest);\n  }\n\n  getActiveOrderList(\n    params: InverseActiveOrdersRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/order/list', params);\n  }\n\n  cancelActiveOrder(\n    params: InverseCancelOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/order/cancel', params);\n  }\n\n  cancelAllActiveOrders(\n    params: SymbolParam,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/order/cancelAll', params);\n  }\n\n  replaceActiveOrder(\n    params: InverseReplaceOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/order/replace', params);\n  }\n\n  queryActiveOrder(\n    params: InverseGetOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/order', params);\n  }\n\n  /**\n   * Conditional orders\n   */\n\n  placeConditionalOrder(\n    params: InverseConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/stop-order/create', params);\n  }\n\n  /** get conditional order list. This may see delays, use queryConditionalOrder() for real-time queries */\n  getConditionalOrder(\n    params: InverseActiveConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/stop-order/list', params);\n  }\n\n  cancelConditionalOrder(\n    params: InverseCancelConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/stop-order/cancel', params);\n  }\n\n  cancelAllConditionalOrders(\n    params: SymbolParam,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/stop-order/cancelAll', params);\n  }\n\n  replaceConditionalOrder(\n    params: InverseReplaceConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/stop-order/replace', params);\n  }\n\n  queryConditionalOrder(\n    params: InverseGetOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/stop-order', params);\n  }\n\n  /**\n   * Position\n   */\n\n  getPosition(\n    params?: Partial<SymbolParam>,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/position/list', params);\n  }\n\n  changePositionMargin(\n    params: InverseChangePositionMarginRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('position/change-position-margin', params);\n  }\n\n  setTradingStop(\n    params: InverseSetTradingStopRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/position/trading-stop', params);\n  }\n\n  setUserLeverage(\n    params: InverseSetLeverageRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/position/leverage/save', params);\n  }\n\n  getTradeRecords(\n    params: InverseGetTradeRecordsRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/execution/list', params);\n  }\n\n  getClosedPnl(\n    params: InverseGetClosedPnlRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/trade/closed-pnl/list', params);\n  }\n\n  setSlTpPositionMode(\n    params: InverseSetSlTpPositionModeRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/tpsl/switch-mode', params);\n  }\n\n  setMarginType(\n    params: InverseSetMarginTypeRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('v2/private/position/switch-isolated', params);\n  }\n\n  /**\n   * Funding\n   */\n\n  getLastFundingRate(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.get('v2/public/funding/prev-funding-rate', params);\n  }\n\n  getMyLastFundingFee(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/funding/prev-funding', params);\n  }\n\n  getPredictedFunding(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/funding/predicted-funding', params);\n  }\n\n  /**\n   * LCP Info\n   */\n\n  getLcpInfo(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/account/lcp', params);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { REST_CLIENT_TYPE_ENUM } from './util/requestUtils';\nimport {\n  APIResponseWithTime,\n  AssetExchangeRecordsReq,\n  CoinParam,\n  SymbolInfo,\n  SymbolIntervalFromLimitParam,\n  SymbolLimitParam,\n  SymbolParam,\n  SymbolPeriodLimitParam,\n  WalletFundRecordsReq,\n  WithdrawRecordsReq,\n} from './types/shared';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for Inverse Futures APIs (e.g. quarterly futures) (v2)\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nexport class InverseFuturesClient extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.inverseFutures;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   */\n\n  getOrderBook(params: SymbolParam): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/orderBook/L2', params);\n  }\n\n  getKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/kline/list', params);\n  }\n\n  /**\n   * Get latest information for symbol\n   */\n  getTickers(\n    params?: Partial<SymbolParam>,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/tickers', params);\n  }\n\n  /**\n   * Public trading records\n   */\n  getTrades(params: SymbolLimitParam): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/trading-records', params);\n  }\n\n  getSymbols(): Promise<APIResponseWithTime<SymbolInfo[]>> {\n    return this.get('v2/public/symbols');\n  }\n\n  getMarkPriceKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/mark-price-kline', params);\n  }\n\n  getIndexPriceKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/index-price-kline', params);\n  }\n\n  getPremiumIndexKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/premium-index-kline', params);\n  }\n\n  /**\n   *\n   * Market Data : Advanced\n   *\n   */\n\n  getOpenInterest(\n    params: SymbolPeriodLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/open-interest', params);\n  }\n\n  getLatestBigDeal(\n    params: SymbolLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/big-deal', params);\n  }\n\n  getLongShortRatio(\n    params: SymbolPeriodLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/account-ratio', params);\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  getApiKeyInfo(): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/account/api-key');\n  }\n\n  /**\n   *\n   * Wallet Data Endpoints\n   *\n   */\n\n  getWalletBalance(\n    params?: Partial<CoinParam>,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/wallet/balance', params);\n  }\n\n  getWalletFundRecords(\n    params?: WalletFundRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/wallet/fund/records', params);\n  }\n\n  getWithdrawRecords(\n    params?: WithdrawRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/wallet/withdraw/list', params);\n  }\n\n  getAssetExchangeRecords(\n    params?: AssetExchangeRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/exchange-order/list', params);\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime<{}>> {\n    return this.get('v2/public/time');\n  }\n\n  getApiAnnouncements(): Promise<APIResponseWithTime<any>> {\n    return this.get('v2/public/announcement');\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  /**\n   * Active orders\n   */\n\n  placeActiveOrder(orderRequest: {\n    side: string;\n    symbol: string;\n    order_type: string;\n    qty: number;\n    price?: number;\n    time_in_force: string;\n    take_profit?: number;\n    stop_loss?: number;\n    reduce_only?: boolean;\n    close_on_trigger?: boolean;\n    order_link_id?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/order/create', orderRequest);\n  }\n\n  getActiveOrderList(params: {\n    symbol: string;\n    order_status?: string;\n    direction?: string;\n    limit?: number;\n    cursor?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('futures/private/order/list', params);\n  }\n\n  cancelActiveOrder(params: {\n    symbol: string;\n    order_id?: string;\n    order_link_id?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/order/cancel', params);\n  }\n\n  cancelAllActiveOrders(\n    params: SymbolParam,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/order/cancelAll', params);\n  }\n\n  replaceActiveOrder(params: {\n    order_id?: string;\n    order_link_id?: string;\n    symbol: string;\n    p_r_qty?: string;\n    p_r_price?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/order/replace', params);\n  }\n\n  queryActiveOrder(params: {\n    order_id?: string;\n    order_link_id?: string;\n    symbol: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('futures/private/order', params);\n  }\n\n  /**\n   * Conditional orders\n   */\n\n  placeConditionalOrder(params: {\n    side: string;\n    symbol: string;\n    order_type: string;\n    qty: string;\n    price?: string;\n    base_price: string;\n    stop_px: string;\n    time_in_force: string;\n    trigger_by?: string;\n    close_on_trigger?: boolean;\n    order_link_id?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/stop-order/create', params);\n  }\n\n  getConditionalOrder(params: {\n    symbol: string;\n    stop_order_status?: string;\n    direction?: string;\n    limit?: number;\n    cursor?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('futures/private/stop-order/list', params);\n  }\n\n  cancelConditionalOrder(params: {\n    symbol: string;\n    stop_order_id?: string;\n    order_link_id?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/stop-order/cancel', params);\n  }\n\n  cancelAllConditionalOrders(\n    params: SymbolParam,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/stop-order/cancelAll', params);\n  }\n\n  replaceConditionalOrder(params: {\n    stop_order_id?: string;\n    order_link_id?: string;\n    symbol: string;\n    p_r_qty?: number;\n    p_r_price?: string;\n    p_r_trigger_price?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/stop-order/replace', params);\n  }\n\n  queryConditionalOrder(params: {\n    symbol: string;\n    stop_order_id?: string;\n    order_link_id?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('futures/private/stop-order', params);\n  }\n\n  /**\n   * Position\n   */\n\n  /**\n   * Get position list\n   */\n  getPosition(\n    params?: Partial<SymbolParam>,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('futures/private/position/list', params);\n  }\n\n  changePositionMargin(params: {\n    symbol: string;\n    margin: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate(\n      'futures/private/position/change-position-margin',\n      params,\n    );\n  }\n\n  setTradingStop(params: {\n    symbol: string;\n    take_profit?: number;\n    stop_loss?: number;\n    trailing_stop?: number;\n    tp_trigger_by?: string;\n    sl_trigger_by?: string;\n    new_trailing_active?: number;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/position/trading-stop', params);\n  }\n\n  setUserLeverage(params: {\n    symbol: string;\n    buy_leverage: number;\n    sell_leverage: number;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/position/leverage/save', params);\n  }\n\n  /**\n   * Position mode switch\n   */\n  setPositionMode(params: {\n    symbol: string;\n    mode: number;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/position/switch-mode', params);\n  }\n\n  /**\n   * Cross/Isolated margin switch. Must set leverage value when switching.\n   */\n  setMarginType(params: {\n    symbol: string;\n    is_isolated: boolean;\n    buy_leverage: number;\n    sell_leverage: number;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('futures/private/position/switch-isolated', params);\n  }\n\n  getTradeRecords(params: {\n    order_id?: string;\n    symbol: string;\n    start_time?: number;\n    page?: number;\n    limit?: number;\n    order?: string;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('futures/private/execution/list', params);\n  }\n\n  getClosedPnl(params: {\n    symbol: string;\n    start_time?: number;\n    end_time?: number;\n    exec_type?: string;\n    page?: number;\n    limit?: number;\n  }): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('futures/private/trade/closed-pnl/list', params);\n  }\n\n  /**\n   * Funding\n   */\n\n  getLastFundingRate(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.get('v2/public/funding/prev-funding-rate', params);\n  }\n\n  getMyLastFundingFee(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/funding/prev-funding', params);\n  }\n\n  getPredictedFunding(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/funding/predicted-funding', params);\n  }\n\n  /**\n   * LCP Info\n   */\n\n  getLcpInfo(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/account/lcp', params);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { REST_CLIENT_TYPE_ENUM } from './util/requestUtils';\nimport {\n  APIResponse,\n  APIResponseWithTime,\n  AssetExchangeRecordsReq,\n  CoinParam,\n  LinearCancelConditionalOrderRequest,\n  LinearCancelOrderRequest,\n  LinearConditionalOrderRequest,\n  LinearGetClosedPnlRequest,\n  LinearGetConditionalOrderRequest,\n  LinearGetHistoryTradeRecordsRequest,\n  LinearGetOrderRequest,\n  LinearGetOrdersRequest,\n  LinearGetTradeRecordsRequest,\n  LinearOrder,\n  LinearQueryConditionalOrderRequest,\n  LinearReplaceConditionalOrderRequest,\n  LinearReplaceOrderRequest,\n  LinearSetAddReduceMarginRequest,\n  LinearSetAutoAddMarginRequest,\n  LinearSetMarginSwitchRequest,\n  LinearSetPositionModeRequest,\n  LinearSetPositionTpSlModeRequest,\n  LinearSetRiskLimitRequest,\n  LinearSetTradingStopRequest,\n  LinearSetUserLeverageRequest,\n  NewLinearOrder,\n  PerpPosition,\n  PerpPositionRoot,\n  SymbolInfo,\n  SymbolIntervalFromLimitParam,\n  SymbolLimitParam,\n  SymbolParam,\n  SymbolPeriodLimitParam,\n  WalletBalances,\n  WalletFundRecordsReq,\n  WithdrawRecordsReq,\n} from './types';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for linear/USD perpetual futures APIs (v2)\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nexport class LinearClient extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.linear;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const timeRes = await this.getServerTime();\n    return Number(timeRes.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   */\n\n  getOrderBook(params: SymbolParam): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/orderBook/L2', params);\n  }\n\n  getKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('public/linear/kline', params);\n  }\n\n  /**\n   * Get latest information for symbol\n   */\n  getTickers(\n    params?: Partial<SymbolParam>,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/tickers', params);\n  }\n\n  getTrades(params: SymbolLimitParam): Promise<APIResponseWithTime<any[]>> {\n    return this.get('public/linear/recent-trading-records', params);\n  }\n\n  getSymbols(): Promise<APIResponse<SymbolInfo[]>> {\n    return this.get('v2/public/symbols');\n  }\n\n  getLastFundingRate(params: SymbolParam): Promise<APIResponseWithTime<any[]>> {\n    return this.get('public/linear/funding/prev-funding-rate', params);\n  }\n\n  getMarkPriceKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('public/linear/mark-price-kline', params);\n  }\n\n  getIndexPriceKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('public/linear/index-price-kline', params);\n  }\n\n  getPremiumIndexKline(\n    params: SymbolIntervalFromLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('public/linear/premium-index-kline', params);\n  }\n\n  /**\n   *\n   * Market Data : Advanced\n   *\n   */\n\n  getOpenInterest(\n    params: SymbolPeriodLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/open-interest', params);\n  }\n\n  getLatestBigDeal(\n    params: SymbolLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/big-deal', params);\n  }\n\n  getLongShortRatio(\n    params: SymbolPeriodLimitParam,\n  ): Promise<APIResponseWithTime<any[]>> {\n    return this.get('v2/public/account-ratio', params);\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  getApiKeyInfo(): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/account/api-key');\n  }\n\n  /**\n   *\n   * Wallet Data Endpoints\n   *\n   */\n\n  getWalletBalance(\n    params?: Partial<CoinParam>,\n  ): Promise<APIResponseWithTime<WalletBalances>> {\n    return this.getPrivate('v2/private/wallet/balance', params);\n  }\n\n  getWalletFundRecords(\n    params?: WalletFundRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/wallet/fund/records', params);\n  }\n\n  getWithdrawRecords(\n    params?: WithdrawRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/wallet/withdraw/list', params);\n  }\n\n  getAssetExchangeRecords(\n    params?: AssetExchangeRecordsReq,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('v2/private/exchange-order/list', params);\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime<{}>> {\n    return this.get('v2/public/time');\n  }\n\n  getApiAnnouncements(): Promise<APIResponseWithTime<any>> {\n    return this.get('v2/public/announcement');\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  placeActiveOrder(\n    params: NewLinearOrder,\n  ): Promise<APIResponseWithTime<LinearOrder | null>> {\n    return this.postPrivate('private/linear/order/create', params);\n  }\n\n  getActiveOrderList(\n    params: LinearGetOrdersRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('private/linear/order/list', params);\n  }\n\n  cancelActiveOrder(\n    params: LinearCancelOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/order/cancel', params);\n  }\n\n  cancelAllActiveOrders(\n    params: SymbolParam,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/order/cancel-all', params);\n  }\n\n  replaceActiveOrder(\n    params: LinearReplaceOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/order/replace', params);\n  }\n\n  queryActiveOrder(\n    params: LinearGetOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('private/linear/order/search', params);\n  }\n\n  /**\n   * Conditional orders\n   */\n\n  placeConditionalOrder(\n    params: LinearConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/stop-order/create', params);\n  }\n\n  getConditionalOrder(\n    params: LinearGetConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('private/linear/stop-order/list', params);\n  }\n\n  cancelConditionalOrder(\n    params: LinearCancelConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/stop-order/cancel', params);\n  }\n\n  cancelAllConditionalOrders(\n    params: SymbolParam,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/stop-order/cancel-all', params);\n  }\n\n  replaceConditionalOrder(\n    params: LinearReplaceConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/stop-order/replace', params);\n  }\n\n  queryConditionalOrder(\n    params: LinearQueryConditionalOrderRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('private/linear/stop-order/search', params);\n  }\n\n  /**\n   * Position\n   */\n\n  getPosition(): Promise<APIResponseWithTime<PerpPositionRoot[]>>;\n\n  getPosition(\n    params: Partial<SymbolParam>,\n  ): Promise<APIResponseWithTime<PerpPosition[]>>;\n\n  getPosition(\n    params?: Partial<SymbolParam>,\n  ): Promise<APIResponseWithTime<PerpPosition[] | PerpPositionRoot[]>> {\n    return this.getPrivate('private/linear/position/list', params);\n  }\n\n  setAutoAddMargin(\n    params?: LinearSetAutoAddMarginRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate(\n      'private/linear/position/set-auto-add-margin',\n      params,\n    );\n  }\n\n  setMarginSwitch(\n    params?: LinearSetMarginSwitchRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/position/switch-isolated', params);\n  }\n\n  /**\n   * Switch between one-way vs hedge mode. Use `linearPositionModeEnum` for the mode parameter.\n   */\n  setPositionMode(\n    params: LinearSetPositionModeRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/position/switch-mode', params);\n  }\n\n  /**\n   * Switch TP/SL mode between full or partial. When set to Partial, TP/SL orders may have a quantity less than the position size.\n   * This is set with the setTradingStop() method. Use `positionTpSlModeEnum` for the tp_sl_mode parameter.\n   */\n  setPositionTpSlMode(\n    params: LinearSetPositionTpSlModeRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/tpsl/switch-mode', params);\n  }\n\n  setAddReduceMargin(\n    params?: LinearSetAddReduceMarginRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/position/add-margin', params);\n  }\n\n  setUserLeverage(\n    params: LinearSetUserLeverageRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/position/set-leverage', params);\n  }\n\n  setTradingStop(\n    params: LinearSetTradingStopRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/position/trading-stop', params);\n  }\n\n  getTradeRecords(\n    params: LinearGetTradeRecordsRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('private/linear/trade/execution/list', params);\n  }\n\n  getHistoryTradeRecords(\n    params: LinearGetHistoryTradeRecordsRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate(\n      '/private/linear/trade/execution/history-list',\n      params,\n    );\n  }\n\n  getClosedPnl(\n    params: LinearGetClosedPnlRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('private/linear/trade/closed-pnl/list', params);\n  }\n\n  /**\n   * Risk Limit\n   */\n\n  getRiskLimitList(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('public/linear/risk-limit', params);\n  }\n\n  setRiskLimit(\n    params: LinearSetRiskLimitRequest,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.postPrivate('private/linear/position/set-risk', params);\n  }\n\n  /**\n   * Funding\n   */\n\n  getPredictedFundingFee(\n    params: SymbolParam,\n  ): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('private/linear/funding/predicted-funding', params);\n  }\n\n  getLastFundingFee(params: SymbolParam): Promise<APIResponseWithTime<any>> {\n    return this.getPrivate('private/linear/funding/prev-funding', params);\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponseV3,\n  APIResponseV3WithTime,\n  AccountCoinBalanceV5,\n  AccountInfoV5,\n  AccountMarginModeV5,\n  AccountOrderV5,\n  AccountTypeV5,\n  AddOrReduceMarginParamsV5,\n  AddOrReduceMarginResultV5,\n  AllCoinsBalanceV5,\n  AllowedDepositCoinInfoV5,\n  AmendOrderParamsV5,\n  ApiKeyInfoV5,\n  AssetInfoV5,\n  BatchAmendOrderParamsV5,\n  BatchAmendOrderResultV5,\n  BatchCancelOrderParamsV5,\n  BatchCancelOrderResultV5,\n  BatchCreateOrderResultV5,\n  BatchOrderParamsV5,\n  BatchOrdersResponseV5,\n  BorrowHistoryRecordV5,\n  CancelAllOrdersParamsV5,\n  CancelOrderParamsV5,\n  CategoryCursorListV5,\n  CategoryListV5,\n  CategorySymbolListV5,\n  CategoryV5,\n  ClosedPnLV5,\n  CoinExchangeRecordV5,\n  CoinGreeksV5,\n  CoinInfoV5,\n  CollateralInfoV5,\n  CreateSubApiKeyParamsV5,\n  CreateSubApiKeyResultV5,\n  CreateSubMemberParamsV5,\n  CreateSubMemberResultV5,\n  CursorListV5,\n  CursorRowsV5,\n  DeleteSubMemberParamsV5,\n  DeliveryPriceV5,\n  DeliveryRecordV5,\n  DepositAddressResultV5,\n  DepositRecordV5,\n  ExecutionV5,\n  FeeRateV5,\n  FundingRateHistoryResponseV5,\n  GetAccountCoinBalanceParamsV5,\n  GetAccountHistoricOrdersParamsV5,\n  GetAccountOrdersParamsV5,\n  GetAllCoinsBalanceParamsV5,\n  GetAllowedDepositCoinInfoParamsV5,\n  GetAssetInfoParamsV5,\n  GetBorrowHistoryParamsV5,\n  GetClosedPnLParamsV5,\n  GetCoinExchangeRecordParamsV5,\n  GetDeliveryPriceParamsV5,\n  GetDeliveryRecordParamsV5,\n  GetDepositRecordParamsV5,\n  GetExecutionListParamsV5,\n  GetFeeRateParamsV5,\n  GetFundingRateHistoryParamsV5,\n  GetHistoricalVolatilityParamsV5,\n  GetIndexPriceKlineParamsV5,\n  GetInstrumentsInfoParamsV5,\n  GetInsuranceParamsV5,\n  GetInternalDepositRecordParamsV5,\n  GetInternalTransferParamsV5,\n  GetKlineParamsV5,\n  GetMarkPriceKlineParamsV5,\n  GetOpenInterestParamsV5,\n  GetOptionDeliveryPriceParamsV5,\n  GetOrderbookParamsV5,\n  GetPreUpgradeClosedPnlParamsV5,\n  GetPreUpgradeOrderHistoryParamsV5,\n  GetPreUpgradeTradeHistoryParamsV5,\n  GetPremiumIndexPriceKlineParamsV5,\n  GetPublicTradingHistoryParamsV5,\n  GetRiskLimitParamsV5,\n  GetSettlementRecordParamsV5,\n  GetSpotLeveragedTokenOrderHistoryParamsV5,\n  GetSubAccountDepositRecordParamsV5,\n  GetTickersParamsV5,\n  GetTransactionLogParamsV5,\n  GetUniversalTransferRecordsParamsV5,\n  GetWalletBalanceParamsV5,\n  GetWithdrawalRecordsParamsV5,\n  HistoricalVolatilityV5,\n  InstrumentInfoResponseV5,\n  InsuranceResponseV5,\n  InternalDepositRecordV5,\n  InternalTransferRecordV5,\n  LeverageTokenInfoV5,\n  LeveragedTokenMarketResultV5,\n  MMPModifyParamsV5,\n  MMPStateV5,\n  OHLCKlineV5,\n  OHLCVKlineV5,\n  OpenInterestResponseV5,\n  OptionDeliveryPriceV5,\n  OrderParamsV5,\n  OrderResultV5,\n  OrderSideV5,\n  OrderbookResponseV5,\n  PositionInfoParamsV5,\n  PositionV5,\n  PublicTradeV5,\n  PurchaseSpotLeveragedTokenParamsV5,\n  PurchaseSpotLeveragedTokenResultV5,\n  RedeemSpotLeveragedTokenParamsV5,\n  RedeemSpotLeveragedTokenResultV5,\n  RepayLiabilityParamsV5,\n  RepayLiabilityResultV5,\n  RiskLimitV5,\n  SetAutoAddMarginParamsV5,\n  SetCollateralCoinParamsV5,\n  SetLeverageParamsV5,\n  SetRiskLimitParamsV5,\n  SetRiskLimitResultV5,\n  SetTPSLModeParamsV5,\n  SetTradingStopParamsV5,\n  SettlementRecordV5,\n  SpotBorrowCheckResultV5,\n  SpotLeveragedTokenOrderHistoryV5,\n  SubMemberV5,\n  SwitchIsolatedMarginParamsV5,\n  SwitchPositionModeParamsV5,\n  TPSLModeV5,\n  TickerLinearInverseV5,\n  TickerOptionV5,\n  TickerSpotV5,\n  TransactionLogV5,\n  UnifiedAccountUpgradeResultV5,\n  UniversalTransferParamsV5,\n  UniversalTransferRecordV5,\n  UpdateApiKeyParamsV5,\n  UpdateApiKeyResultV5,\n  WalletBalanceV5,\n  WithdrawParamsV5,\n  WithdrawalRecordV5,\n} from './types';\n\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for V5 REST APIs\n *\n * https://bybit-exchange.github.io/docs/v5/intro\n */\nexport class RestClientV5 extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.v3;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time) / 1000;\n  }\n\n  getServerTime(): Promise<\n    APIResponseV3WithTime<{ timeSecond: string; timeNano: string }>\n  > {\n    return this.get('/v3/public/time');\n  }\n\n  /**\n   *\n   ****** Market APIs\n   *\n   */\n\n  /**\n   * Query the kline data. Charts are returned in groups based on the requested interval.\n   *\n   * Covers: Spot / Linear contract / Inverse contract\n   */\n  getKline(\n    params: GetKlineParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<\n      CategorySymbolListV5<OHLCVKlineV5[], 'spot' | 'linear' | 'inverse'>\n    >\n  > {\n    return this.get('/v5/market/kline', params);\n  }\n\n  /**\n   * Query the mark price kline data. Charts are returned in groups based on the requested interval.\n   *\n   * Covers: Linear contract / Inverse contract\n   */\n  getMarkPriceKline(\n    params: GetMarkPriceKlineParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<\n      CategorySymbolListV5<OHLCKlineV5[], 'linear' | 'inverse'>\n    >\n  > {\n    return this.get('/v5/market/mark-price-kline', params);\n  }\n\n  /**\n   * Query the index price kline data. Charts are returned in groups based on the requested interval.\n   *\n   * Covers: Linear contract / Inverse contract\n   */\n  getIndexPriceKline(\n    params: GetIndexPriceKlineParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<\n      CategorySymbolListV5<OHLCKlineV5[], 'linear' | 'inverse'>\n    >\n  > {\n    return this.get('/v5/market/index-price-kline', params);\n  }\n\n  /**\n   * Retrieve the premium index price kline data. Charts are returned in groups based on the requested interval.\n   *\n   * Covers: Linear contract\n   */\n  getPremiumIndexPriceKline(\n    params: GetPremiumIndexPriceKlineParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<CategorySymbolListV5<OHLCKlineV5[], 'linear'>>\n  > {\n    return this.get('/v5/market/premium-index-price-kline', params);\n  }\n\n  /**\n   * Query a list of instruments of online trading pair.\n   *\n   * Covers: Spot / Linear contract / Inverse contract / Option\n   *\n   * Note: Spot does not support pagination, so limit & cursor are invalid.\n   */\n  getInstrumentsInfo<C extends CategoryV5>(\n    params: GetInstrumentsInfoParamsV5 & { category: C },\n  ): Promise<APIResponseV3WithTime<InstrumentInfoResponseV5<C>>> {\n    return this.get('/v5/market/instruments-info', params);\n  }\n\n  /**\n   * Query orderbook data\n   *\n   * Covers: Spot / Linear contract / Inverse contract / Option\n   */\n  getOrderbook(\n    params: GetOrderbookParamsV5,\n  ): Promise<APIResponseV3WithTime<OrderbookResponseV5>> {\n    return this.get('/v5/market/orderbook', params);\n  }\n\n  getTickers(\n    params: GetTickersParamsV5<'linear' | 'inverse'>,\n  ): Promise<\n    APIResponseV3WithTime<\n      CategoryListV5<TickerLinearInverseV5[], 'linear' | 'inverse'>\n    >\n  >;\n\n  getTickers(\n    params: GetTickersParamsV5<'option'>,\n  ): Promise<APIResponseV3WithTime<CategoryListV5<TickerOptionV5[], 'option'>>>;\n\n  getTickers(\n    params: GetTickersParamsV5<'spot'>,\n  ): Promise<APIResponseV3WithTime<CategoryListV5<TickerSpotV5[], 'spot'>>>;\n\n  /**\n   * Query the latest price snapshot, best bid/ask price, and trading volume in the last 24 hours.\n   *\n   * Covers: Spot / Linear contract / Inverse contract / Option\n   */\n  getTickers(\n    params: GetTickersParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<\n      | CategoryListV5<TickerLinearInverseV5[], 'linear' | 'inverse'>\n      | CategoryListV5<TickerOptionV5[], 'option'>\n      | CategoryListV5<TickerSpotV5[], 'spot'>\n    >\n  > {\n    return this.get('/v5/market/tickers', params);\n  }\n\n  /**\n   * Query historical funding rate. Each symbol has a different funding interval.\n   *\n   * Covers: Linear contract / Inverse perpetual\n   */\n  getFundingRateHistory(\n    params: GetFundingRateHistoryParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<\n      CategoryListV5<FundingRateHistoryResponseV5[], 'linear' | 'inverse'>\n    >\n  > {\n    return this.get('/v5/market/funding/history', params);\n  }\n\n  /**\n   * Query recent public trading data in Bybit.\n   *\n   * Covers: Spot / Linear contract / Inverse contract / Option\n   */\n  getPublicTradingHistory(\n    params: GetPublicTradingHistoryParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<CategoryListV5<PublicTradeV5[], CategoryV5>>\n  > {\n    return this.get('/v5/market/recent-trade', params);\n  }\n\n  /**\n   * Get open interest of each symbol.\n   *\n   * Covers: Linear contract / Inverse contract\n   */\n  getOpenInterest(\n    params: GetOpenInterestParamsV5,\n  ): Promise<APIResponseV3WithTime<OpenInterestResponseV5>> {\n    return this.get('/v5/market/open-interest', params);\n  }\n\n  /**\n   * Query option historical volatility\n   * Covers: Option\n   */\n  getHistoricalVolatility(\n    params: GetHistoricalVolatilityParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<CategoryListV5<HistoricalVolatilityV5[], 'option'>>\n  > {\n    return this.get('/v5/market/historical-volatility', params);\n  }\n\n  /**\n   * Query Bybit insurance pool data (BTC/USDT/USDC etc). The data is updated every 24 hours.\n   */\n  getInsurance(\n    params?: GetInsuranceParamsV5,\n  ): Promise<APIResponseV3WithTime<InsuranceResponseV5>> {\n    return this.get('/v5/market/insurance', params);\n  }\n\n  /**\n   * Query risk limit of futures\n   *\n   * Covers: Linear contract / Inverse contract\n   */\n  getRiskLimit(\n    params?: GetRiskLimitParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<CategoryListV5<RiskLimitV5[], 'inverse' | 'linear'>>\n  > {\n    return this.get('/v5/market/risk-limit', params);\n  }\n\n  /**\n   * Get the delivery price for option\n   *\n   * Covers: Option\n   *\n   * @deprecated use getDeliveryPrice() instead\n   */\n  getOptionDeliveryPrice(\n    params: GetOptionDeliveryPriceParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<CategoryCursorListV5<OptionDeliveryPriceV5[]>>\n  > {\n    return this.get('/v5/market/delivery-price', params);\n  }\n\n  /**\n   * Get the delivery price of Inverse futures, USDC futures and Options\n   *\n   * Covers: USDC futures / Inverse futures / Option\n   */\n  getDeliveryPrice(\n    params: GetDeliveryPriceParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<DeliveryPriceV5[]>>> {\n    return this.get('/v5/market/delivery-price', params);\n  }\n\n  /**\n   *\n   ****** Trade APIs\n   *\n   */\n\n  submitOrder(\n    params: OrderParamsV5,\n  ): Promise<APIResponseV3WithTime<OrderResultV5>> {\n    return this.postPrivate('/v5/order/create', params);\n  }\n\n  amendOrder(\n    params: AmendOrderParamsV5,\n  ): Promise<APIResponseV3WithTime<OrderResultV5>> {\n    return this.postPrivate('/v5/order/amend', params);\n  }\n\n  cancelOrder(\n    params: CancelOrderParamsV5,\n  ): Promise<APIResponseV3WithTime<OrderResultV5>> {\n    return this.postPrivate('/v5/order/cancel', params);\n  }\n\n  /**\n   * Query unfilled or partially filled orders in real-time. To query older order records, please use the order history interface.\n   */\n  getActiveOrders(\n    params: GetAccountOrdersParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<AccountOrderV5[]>>> {\n    return this.getPrivate('/v5/order/realtime', params);\n  }\n\n  cancelAllOrders(\n    params: CancelAllOrdersParamsV5,\n  ): Promise<APIResponseV3WithTime<{ list: OrderResultV5[] }>> {\n    return this.postPrivate('/v5/order/cancel-all', params);\n  }\n\n  /**\n   * Query order history. As order creation/cancellation is asynchronous, the data returned from this endpoint may delay.\n   *\n   * If you want to get real-time order information, you could query this endpoint or rely on the websocket stream (recommended).\n   */\n  getHistoricOrders(\n    params: GetAccountHistoricOrdersParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<AccountOrderV5[]>>> {\n    return this.getPrivate('/v5/order/history', params);\n  }\n\n  /**\n   * This endpoint allows you to place more than one order in a single request.\n   * Covers: Option (UTA, UTA Pro) / USDT Perpetual, UDSC Perpetual, USDC Futures (UTA Pro)\n   *\n   * Make sure you have sufficient funds in your account when placing an order.\n   * Once an order is placed, according to the funds required by the order,\n   * the funds in your account will be frozen by the corresponding amount during the life cycle of the order.\n   *\n   * A maximum of 20 orders can be placed per request. The returned data list is divided into two lists.\n   * The first list indicates whether or not the order creation was successful and the second list details the created order information.\n   * The structure of the two lists are completely consistent.\n   */\n  batchSubmitOrders(\n    category: 'option' | 'linear',\n    orders: BatchOrderParamsV5[],\n  ): Promise<\n    APIResponseV3WithTime<BatchOrdersResponseV5<BatchCreateOrderResultV5[]>>\n  > {\n    return this.postPrivate('/v5/order/create-batch', {\n      category,\n      request: orders,\n    });\n  }\n\n  /**\n   * This endpoint allows you to amend more than one open order in a single request.\n   * Covers: Option (UTA, UTA Pro) / USDT Perpetual, UDSC Perpetual, USDC Futures (UTA Pro)\n   *\n   * You can modify unfilled or partially filled orders. Conditional orders are not supported.\n   *\n   * A maximum of 20 orders can be amended per request.\n   */\n  batchAmendOrders(\n    category: 'option' | 'linear',\n    orders: BatchAmendOrderParamsV5[],\n  ): Promise<\n    APIResponseV3WithTime<BatchOrdersResponseV5<BatchAmendOrderResultV5[]>>\n  > {\n    return this.postPrivate('/v5/order/amend-batch', {\n      category,\n      request: orders,\n    });\n  }\n\n  /**\n   * This endpoint allows you to cancel more than one open order in a single request.\n   * Covers: Option (UTA, UTA Pro) / USDT Perpetual, UDSC Perpetual, USDC Futures (UTA Pro)\n   *\n   * You must specify orderId or orderLinkId. If orderId and orderLinkId is not matched, the system will process orderId first.\n   *\n   * You can cancel unfilled or partially filled orders. A maximum of 20 orders can be cancelled per request.\n   */\n  batchCancelOrders(\n    category: 'option' | 'linear',\n    orders: BatchCancelOrderParamsV5[],\n  ): Promise<\n    APIResponseV3WithTime<BatchOrdersResponseV5<BatchCancelOrderResultV5[]>>\n  > {\n    return this.postPrivate('/v5/order/cancel-batch', {\n      category,\n      request: orders,\n    });\n  }\n\n  /**\n   * Query the qty and amount of borrowable coins in spot account.\n   *\n   * Covers: Spot (Unified Account)\n   */\n  getSpotBorrowCheck(\n    symbol: string,\n    side: OrderSideV5,\n  ): Promise<APIResponseV3WithTime<SpotBorrowCheckResultV5>> {\n    return this.getPrivate('/v5/order/spot-borrow-check', {\n      category: 'spot',\n      symbol,\n      side,\n    });\n  }\n\n  /**\n   * This endpoint allows you to set the disconnection protect time window. Covers: option (unified account).\n   *\n   * If you need to turn it on/off, you can contact your client manager for consultation and application.\n   * The default time window is 10 seconds.\n   */\n  setDisconnectCancelAllWindow(\n    category: 'option',\n    timeWindow: number,\n  ): Promise<APIResponseV3<undefined>> {\n    return this.postPrivate('/v5/order/disconnected-cancel-all', {\n      category,\n      timeWindow,\n    });\n  }\n\n  /**\n   *\n   ****** Position APIs\n   *\n   */\n\n  /**\n   * Query real-time position data, such as position size, cumulative realizedPNL.\n   *\n   * 0: cross margin. 1: isolated margin\n   *\n   * Unified account covers: Linear contract / Options\n   *\n   * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures\n   *\n   * Note: this will give a 404 error if you query the `option` category if your account is not unified\n   */\n  getPositionInfo(\n    params: PositionInfoParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<PositionV5[]>>> {\n    return this.getPrivate('/v5/position/list', params);\n  }\n\n  /**\n   * Set the leverage\n   *\n   * Unified account covers: Linear contract\n   *\n   * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures\n   *\n   * Note: Under one-way mode, buyLeverage must be the same as sellLeverage\n   */\n  setLeverage(params: SetLeverageParamsV5): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/position/set-leverage', params);\n  }\n\n  /**\n   * Select cross margin mode or isolated margin mode.\n   * 0: cross margin. 1: isolated margin\n   *\n   * Covers: USDT perpetual (Normal account) / Inverse contract (Normal account).\n   *\n   * Switching margin modes will cause orders in progress to be cancelled.\n   * Please make sure that there are no open orders before you switch margin modes.\n   */\n  switchIsolatedMargin(\n    params: SwitchIsolatedMarginParamsV5,\n  ): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/position/switch-isolated', params);\n  }\n\n  /**\n   * This endpoint sets the take profit/stop loss (TP/SL) mode to full or partial.\n   *\n   * Unified account covers: Linear contract; normal account covers: USDT perpetual, inverse perpetual, inverse futures.\n   *\n   * For partial TP/SL mode, you can set the TP/SL size smaller than position size.\n   */\n  setTPSLMode(\n    params: SetTPSLModeParamsV5,\n  ): Promise<APIResponseV3WithTime<{ tpSlMode: TPSLModeV5 }>> {\n    return this.postPrivate('/v5/position/set-tpsl-mode', params);\n  }\n\n  /**\n   * Switches the position mode for USDT perpetual and Inverse futures.\n   *\n   * If you are in one-way Mode, you can only open one position on Buy or Sell side.\n   *\n   * If you are in hedge mode, you can open both Buy and Sell side positions simultaneously.\n   *\n   * Position mode. 0: Merged Single. 3: Both Sides.\n   */\n  switchPositionMode(\n    params: SwitchPositionModeParamsV5,\n  ): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/position/switch-mode', params);\n  }\n\n  /**\n   * The risk limit will limit the maximum position value you can hold under different margin requirements.\n   * If you want to hold a bigger position size, you need more margin.\n   *\n   * This interface can set the risk limit of a single position.\n   * If the order exceeds the current risk limit when placing an order, it will be rejected.\n   */\n  setRiskLimit(\n    params: SetRiskLimitParamsV5,\n  ): Promise<APIResponseV3WithTime<SetRiskLimitResultV5>> {\n    return this.postPrivate('/v5/position/set-risk-limit', params);\n  }\n\n  /**\n   * This endpoint allows you to set the take profit, stop loss or trailing stop for a position.\n   * Passing these parameters will create conditional orders by the system internally.\n   *\n   * The system will cancel these orders if the position is closed, and adjust the qty according to the size of the open position.\n   *\n   * Unified account covers: Linear contract.\n   * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures.\n   */\n  setTradingStop(\n    params: SetTradingStopParamsV5,\n  ): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/position/trading-stop', params);\n  }\n\n  /**\n   * This endpoint allows you to turn on/off auto-add-margin for an isolated margin position.\n   *\n   * Covers: USDT perpetual (Normal Account).\n   */\n  setAutoAddMargin(\n    params: SetAutoAddMarginParamsV5,\n  ): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/position/set-auto-add-margin', params);\n  }\n\n  /**\n   * Manually add or reduce margin for isolated margin position\n   *\n   * Unified account covers: USDT perpetual / USDC perpetual / USDC futures / Inverse contract\n   * Normal account covers: USDT perpetual / Inverse contract\n   */\n  addOrReduceMargin(\n    params: AddOrReduceMarginParamsV5,\n  ): Promise<APIResponseV3WithTime<AddOrReduceMarginResultV5>> {\n    return this.postPrivate('/v5/position/add-margin', params);\n  }\n\n  /**\n   * Query users' execution records, sorted by execTime in descending order\n   *\n   * Unified account covers: Spot / Linear contract / Options\n   * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures\n   */\n  getExecutionList(\n    params: GetExecutionListParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<ExecutionV5[]>>> {\n    return this.getPrivate('/v5/execution/list', params);\n  }\n\n  /**\n   * Query user's closed profit and loss records. The results are sorted by createdTime in descending order.\n   *\n   * Unified account covers: Linear contract\n   * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures\n   */\n  getClosedPnL(\n    params: GetClosedPnLParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<ClosedPnLV5[]>>> {\n    return this.getPrivate('/v5/position/closed-pnl', params);\n  }\n\n  /**\n   *\n   ****** Pre-upgrade APIs\n   *\n   */\n\n  /**\n   * Get those orders which occurred before you upgrade the account to Unified account.\n   *\n   * For now, it only supports to query USDT perpetual, USDC perpetual, Inverse perpetual and futures.\n   *\n   *   - can get all status in 7 days\n   *   - can only get filled orders beyond 7 days\n   */\n  getPreUpgradeOrderHistory(\n    params: GetPreUpgradeOrderHistoryParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<AccountOrderV5[]>>> {\n    return this.getPrivate('/v5/pre-upgrade/order/history', params);\n  }\n\n  /**\n   * Get users' execution records which occurred before you upgrade the account to Unified account, sorted by execTime in descending order\n   *\n   * For now, it only supports to query USDT perpetual, Inverse perpetual and futures.\n   *\n   *   - You may have multiple executions in a single order.\n   *   - You can query by symbol, baseCoin, orderId and orderLinkId, and if you pass multiple params,\n   *      the system will process them according to this priority: orderId > orderLinkId > symbol > baseCoin.\n   */\n  getPreUpgradeTradeHistory(\n    params: GetPreUpgradeTradeHistoryParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<ExecutionV5[]>>> {\n    return this.getPrivate('/v5/pre-upgrade/execution/list', params);\n  }\n\n  /**\n   * Query user's closed profit and loss records. The results are sorted by createdTime in descending order.\n   *\n   * For now, it only supports to query USDT perpetual, Inverse perpetual and futures.\n   */\n  getPreUpgradeClosedPnl(\n    params: GetPreUpgradeClosedPnlParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<ClosedPnLV5[]>>> {\n    return this.getPrivate('/v5/pre-upgrade/position/closed-pnl', params);\n  }\n\n  /**\n   *\n   ****** Account APIs\n   *\n   */\n\n  /**\n   * Obtain wallet balance, query asset information of each currency, and account risk rate information under unified margin mode.\n   *\n   * By default, currency information with assets or liabilities of 0 is not returned.\n   */\n  getWalletBalance(\n    params: GetWalletBalanceParamsV5,\n  ): Promise<APIResponseV3WithTime<{ list: WalletBalanceV5[] }>> {\n    return this.getPrivate('/v5/account/wallet-balance', params);\n  }\n\n  /**\n   * Upgrade to unified account.\n   *\n   * Banned/OTC loan/Net asset unsatisfying/Express path users cannot upgrade the account to Unified Account for now.\n   */\n  upgradeToUnifiedAccount(): Promise<\n    APIResponseV3WithTime<UnifiedAccountUpgradeResultV5>\n  > {\n    return this.postPrivate('/v5/account/upgrade-to-uta');\n  }\n\n  /**\n   * Get interest records, sorted in reverse order of creation time.\n   *\n   * Unified account\n   */\n  getBorrowHistory(\n    params?: GetBorrowHistoryParamsV5,\n  ): Promise<APIResponseV3WithTime<CursorListV5<BorrowHistoryRecordV5[]>>> {\n    return this.getPrivate('/v5/account/borrow-history', params);\n  }\n\n  /**\n   * You can manually repay the liabilities of Unified account\n   * Applicable: Unified Account\n   * Permission: USDC Contracts\n   *\n   * - Input the specific coin: repay the liability of this coin in particular\n   * - No coin specified: repay the liability of all coins\n   */\n  repayLiability(\n    params?: RepayLiabilityParamsV5,\n  ): Promise<APIResponseV3WithTime<CursorListV5<RepayLiabilityResultV5[]>>> {\n    return this.postPrivate('/v5/account/quick-repayment', params);\n  }\n\n  /**\n   * You can decide whether the assets in the Unified account needs to be collateral coins.\n   */\n  setCollateralCoin(\n    params: SetCollateralCoinParamsV5,\n  ): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/account/set-collateral-switch', params);\n  }\n\n  batchSetCollateralCoin(params: {\n    request: SetCollateralCoinParamsV5[];\n  }): Promise<APIResponseV3WithTime<{ list: SetCollateralCoinParamsV5[] }>> {\n    return this.postPrivate('/v5/account/set-collateral-switch-batch', params);\n  }\n\n  /**\n   * Get the collateral information of the current unified margin account, including loan interest rate,\n   * loanable amount, collateral conversion rate, whether it can be mortgaged as margin, etc.\n   */\n  getCollateralInfo(\n    currency?: string,\n  ): Promise<APIResponseV3WithTime<{ list: CollateralInfoV5[] }>> {\n    return this.getPrivate('/v5/account/collateral-info', { currency });\n  }\n\n  /**\n   * Get current account Greeks information\n   */\n  getCoinGreeks(\n    baseCoin?: string,\n  ): Promise<APIResponseV3WithTime<{ list: CoinGreeksV5[] }>> {\n    return this.getPrivate(\n      '/v5/asset/coin-greeks',\n      baseCoin ? { baseCoin } : undefined,\n    );\n  }\n\n  /**\n   * Get the trading fee rate.\n   * Covers: Spot / USDT perpetual / Inverse perpetual / Inverse futures / Options\n   */\n  getFeeRate(\n    params: GetFeeRateParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<FeeRateV5[]>>> {\n    return this.getPrivate('/v5/account/fee-rate', params);\n  }\n\n  /**\n   * Query the margin mode and the upgraded status of account\n   */\n  getAccountInfo(): Promise<APIResponseV3<AccountInfoV5>> {\n    return this.getPrivate('/v5/account/info');\n  }\n\n  /**\n   * Query transaction logs in Unified account.\n   */\n  getTransactionLog(\n    params?: GetTransactionLogParamsV5,\n  ): Promise<APIResponseV3WithTime<CursorListV5<TransactionLogV5[]>>> {\n    return this.getPrivate('/v5/account/transaction-log', params);\n  }\n\n  /**\n   * Default is regular margin mode.\n   *\n   * This mode is valid for USDT Perp, USDC Perp and USDC Option.\n   */\n  setMarginMode(\n    marginMode: AccountMarginModeV5,\n  ): Promise<\n    APIResponseV3<{ reasons: { reasonCode: string; reasonMsg: string }[] }>\n  > {\n    return this.postPrivate('/v5/account/set-margin-mode', {\n      setMarginMode: marginMode,\n    });\n  }\n\n  /**\n   * Configure Market Maker Protection (MMP)\n   */\n  setMMP(params: MMPModifyParamsV5): Promise<APIResponseV3<undefined>> {\n    return this.postPrivate('/v5/account/mmp-modify', params);\n  }\n\n  /**\n   * Once the mmp triggered, you can unfreeze the account via this endpoint\n   */\n  resetMMP(baseCoin: string): Promise<APIResponseV3<undefined>> {\n    return this.postPrivate('/v5/account/mmp-reset', { baseCoin });\n  }\n\n  /**\n   * Get MMP State\n   */\n  getMMPState(\n    baseCoin: string,\n  ): Promise<APIResponseV3WithTime<{ result: MMPStateV5[] }>> {\n    return this.getPrivate('/v5/account/mmp-state', { baseCoin });\n  }\n\n  /**\n   *\n   ****** Asset APIs\n   *\n   */\n\n  /**\n   * Query the coin exchange records.\n   *\n   * CAUTION: You may experience long delays with this endpoint.\n   */\n  getCoinExchangeRecords(params?: GetCoinExchangeRecordParamsV5): Promise<\n    APIResponseV3WithTime<{\n      orderBody: CoinExchangeRecordV5[];\n      nextPageCursor?: string;\n    }>\n  > {\n    return this.getPrivate('/v5/asset/exchange/order-record', params);\n  }\n\n  /**\n   * Query option delivery records, sorted by deliveryTime in descending order.\n   *\n   * Covers: Option\n   */\n  getDeliveryRecord(\n    params: GetDeliveryRecordParamsV5,\n  ): Promise<APIResponseV3WithTime<CategoryCursorListV5<DeliveryRecordV5[]>>> {\n    return this.getPrivate('/v5/asset/delivery-record', params);\n  }\n\n  /**\n   * Query session settlement records of USDC perpetual\n   *\n   * Covers: Linear contract (USDC Perpetual only, Unified Account)\n   */\n  getSettlementRecords(\n    params: GetSettlementRecordParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<CategoryCursorListV5<SettlementRecordV5[]>>\n  > {\n    return this.getPrivate('/v5/asset/settlement-record', params);\n  }\n\n  /**\n   * Query asset information.\n   *\n   * INFO\n   * For now, it can query SPOT only.\n   */\n  getAssetInfo(\n    params: GetAssetInfoParamsV5,\n  ): Promise<APIResponseV3WithTime<{ spot: AssetInfoV5 }>> {\n    return this.getPrivate('/v5/asset/transfer/query-asset-info', params);\n  }\n\n  /**\n   * Query all coin balances of all account types under the master account and sub accounts.\n   *\n   * It is not allowed to get the master account coin balance via sub account API key.\n   */\n  getAllCoinsBalance(\n    params: GetAllCoinsBalanceParamsV5,\n  ): Promise<APIResponseV3WithTime<AllCoinsBalanceV5>> {\n    return this.getPrivate(\n      '/v5/asset/transfer/query-account-coins-balance',\n      params,\n    );\n  }\n\n  /**\n   * Query the balance of a specific coin in a specific account type. Supports querying sub UID's balance.\n   *\n   * CAUTION: Can query by the master UID's api key only.\n   */\n  getCoinBalance(\n    params: GetAccountCoinBalanceParamsV5,\n  ): Promise<APIResponseV3<AccountCoinBalanceV5>> {\n    return this.getPrivate(\n      '/v5/asset/transfer/query-account-coin-balance',\n      params,\n    );\n  }\n\n  /**\n   * Query the transferable coin list between each account type.\n   */\n  getTransferableCoinList(\n    fromAccountType: AccountTypeV5,\n    toAccountType: AccountTypeV5,\n  ): Promise<APIResponseV3WithTime<{ list: string[] }>> {\n    return this.getPrivate('/v5/asset/transfer/query-transfer-coin-list', {\n      fromAccountType,\n      toAccountType,\n    });\n  }\n\n  /**\n   * Create the internal transfer between different account types under the same UID.\n   * Each account type has its own acceptable coins, e.g, you cannot transfer USDC from SPOT to CONTRACT.\n   *\n   * Please refer to the getTransferableCoinList() API to find out more.\n   */\n  createInternalTransfer(\n    transferId: string,\n    coin: string,\n    amount: string,\n    fromAccountType: AccountTypeV5,\n    toAccountType: AccountTypeV5,\n  ): Promise<APIResponseV3WithTime<{ transferId: string }>> {\n    return this.postPrivate('/v5/asset/transfer/inter-transfer', {\n      transferId,\n      coin,\n      amount,\n      fromAccountType,\n      toAccountType,\n    });\n  }\n\n  /**\n   * Query the internal transfer records between different account types under the same UID.\n   */\n  getInternalTransferRecords(\n    params?: GetInternalTransferParamsV5,\n  ): Promise<APIResponseV3WithTime<CursorListV5<InternalTransferRecordV5[]>>> {\n    return this.getPrivate(\n      '/v5/asset/transfer/query-inter-transfer-list',\n      params,\n    );\n  }\n\n  /**\n   * Query the sub UIDs under a main UID\n   *\n   * CAUTION: Can query by the master UID's api key only\n   */\n  getSubUID(): Promise<\n    APIResponseV3WithTime<{\n      subMemberIds: string[];\n      transferableSubMemberIds: string[];\n    }>\n  > {\n    return this.getPrivate('/v5/asset/transfer/query-sub-member-list');\n  }\n\n  /**\n   * Enable Universal Transfer for Sub UID\n   *\n   * Use this endpoint to enable a subaccount to take part in a universal transfer.\n   * It is a one-time switch which, once thrown, enables a subaccount permanently.\n   * If not set, your subaccount cannot use universal transfers.\n   */\n  enableUniversalTransferForSubUIDs(\n    subMemberIds: string[],\n  ): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/asset/transfer/save-transfer-sub-member', {\n      subMemberIds,\n    });\n  }\n\n  /**\n   * Transfer between sub-sub or main-sub. Please make sure you have enabled universal transfer on your sub UID in advance.\n   */\n  createUniversalTransfer(\n    params: UniversalTransferParamsV5,\n  ): Promise<APIResponseV3WithTime<{ transferId: string }>> {\n    return this.postPrivate('/v5/asset/transfer/universal-transfer', params);\n  }\n\n  /**\n   * Query universal transfer records\n   *\n   * CAUTION\n   * Can query by the master UID's API key only\n   */\n  getUniversalTransferRecords(\n    params?: GetUniversalTransferRecordsParamsV5,\n  ): Promise<APIResponseV3WithTime<CursorListV5<UniversalTransferRecordV5[]>>> {\n    return this.getPrivate(\n      '/v5/asset/transfer/query-universal-transfer-list',\n      params,\n    );\n  }\n\n  /**\n   * Query allowed deposit coin information.\n   * To find out paired chain of coin, please refer to the coin info api.\n   */\n  getAllowedDepositCoinInfo(\n    params?: GetAllowedDepositCoinInfoParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<{\n      configList: AllowedDepositCoinInfoV5[];\n      nextPageCursor: string;\n    }>\n  > {\n    return this.get('/v5/asset/deposit/query-allowed-list', params);\n  }\n\n  /**\n   * Set auto transfer account after deposit. The same function as the setting for Deposit on web GUI\n   */\n  setDepositAccount(params: { accountType: AccountTypeV5 }): Promise<\n    APIResponseV3WithTime<{\n      status: 0 | 1;\n    }>\n  > {\n    return this.postPrivate('/v5/asset/deposit/deposit-to-account', params);\n  }\n\n  /**\n   * Query deposit records.\n   *\n   * TIP\n   * endTime - startTime should be less than 30 days. Query last 30 days records by default.\n   *\n   * Can use main or sub UID api key to query deposit records respectively.\n   */\n  getDepositRecords(\n    params?: GetDepositRecordParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<{ rows: DepositRecordV5[]; nextPageCursor: string }>\n  > {\n    return this.getPrivate('/v5/asset/deposit/query-record', params);\n  }\n\n  /**\n   * Query subaccount's deposit records by MAIN UID's API key.\n   *\n   * TIP: Query deposit records of SPOT only\n   *      endTime - startTime should be less than 30 days.\n   *      Queries for the last 30 days worth of records by default.\n   */\n  getSubAccountDepositRecords(\n    params: GetSubAccountDepositRecordParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<{ rows: DepositRecordV5[]; nextPageCursor: string }>\n  > {\n    return this.getPrivate('/v5/asset/deposit/query-sub-member-record', params);\n  }\n\n  /**\n   * Get Internal Deposit Records (across Bybit)\n   * Query deposit records through Bybit platform\n   *\n   * RULES\n   * The maximum difference between the start time and the end time is 30 days.\n   * Support to get deposit records by Master or Sub Member Api Key\n   */\n  getInternalDepositRecords(params?: GetInternalDepositRecordParamsV5): Promise<\n    APIResponseV3WithTime<{\n      rows: InternalDepositRecordV5[];\n      nextPageCursor: string;\n    }>\n  > {\n    return this.getPrivate('/v5/asset/deposit/query-internal-record', params);\n  }\n\n  /**\n   * Query the deposit address information of MASTER account.\n   */\n  getMasterDepositAddress(\n    coin: string,\n    chainType?: string,\n  ): Promise<APIResponseV3WithTime<DepositAddressResultV5>> {\n    return this.getPrivate('/v5/asset/deposit/query-address', {\n      coin,\n      chainType,\n    });\n  }\n\n  /**\n   * Query the deposit address information of SUB account.\n   */\n  getSubDepositAddress(\n    coin: string,\n    chainType: string,\n    subMemberId: string,\n  ): Promise<APIResponseV3WithTime<DepositAddressResultV5>> {\n    return this.getPrivate('/v5/asset/deposit/query-sub-member-address', {\n      coin,\n      chainType,\n      subMemberId,\n    });\n  }\n\n  /**\n   * Query the deposit address information of SUB account.\n   *\n   * CAUTION\n   * Can use master UID's api key only\n   */\n  querySubMemberAddress(\n    coin: string,\n    chainType: string,\n    subMemberId: string,\n  ): Promise<APIResponseV3<DepositAddressResultV5>> {\n    return this.getPrivate('/v5/asset/deposit/query-sub-member-address', {\n      coin,\n      chainType,\n      subMemberId,\n    });\n  }\n\n  /**\n   * Query coin information, including chain information, withdraw and deposit status.\n   */\n  getCoinInfo(\n    coin?: string,\n  ): Promise<APIResponseV3WithTime<{ rows: CoinInfoV5[] }>> {\n    return this.getPrivate(\n      '/v5/asset/coin/query-info',\n      coin ? { coin } : undefined,\n    );\n  }\n\n  /**\n   * Query withdrawal records.\n   */\n  getWithdrawalRecords(\n    params?: GetWithdrawalRecordsParamsV5,\n  ): Promise<APIResponseV3<CursorRowsV5<WithdrawalRecordV5[]>>> {\n    return this.getPrivate('/v5/asset/withdraw/query-record', params);\n  }\n\n  /**\n   * Query withdrawable amount.\n   */\n  getWithdrawableAmount(params: {\n    coin: string;\n  }): Promise<APIResponseV3<{ rows: WithdrawalRecordV5[] }>> {\n    return this.getPrivate('/v5/asset/withdraw/withdrawable-amount', params);\n  }\n\n  /**\n   * Withdraw assets from the SPOT account.\n   *\n   * CAUTION: Make sure you have whitelisted your wallet address before calling this endpoint.\n   *\n   * You can make an off-chain transfer if the target wallet address is from Bybit. This means that no blockchain fee will be charged.\n   */\n  submitWithdrawal(\n    params: WithdrawParamsV5,\n  ): Promise<APIResponseV3WithTime<{ id: string }>> {\n    return this.postPrivate('/v5/asset/withdraw/create', params);\n  }\n\n  /**\n   * Cancel the withdrawal\n   *\n   * CAUTION: Can query by the master UID's api key only\n   */\n  cancelWithdrawal(\n    id: string,\n  ): Promise<APIResponseV3WithTime<{ status: 0 | 1 }>> {\n    return this.postPrivate('/v5/asset/withdraw/cancel', { id });\n  }\n\n  /**\n   *\n   ****** User APIs\n   *\n   */\n\n  /**\n   * Create a new sub user id. Use master user's api key only.\n   *\n   * The API key must have one of the permissions to be allowed to call the following API endpoint.\n   * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n   */\n  createSubMember(\n    params: CreateSubMemberParamsV5,\n  ): Promise<APIResponseV3WithTime<CreateSubMemberResultV5>> {\n    return this.postPrivate('/v5/user/create-sub-member', params);\n  }\n\n  /**\n   * To create new API key for those newly created sub UID. Use master user's api key only.\n   *\n   * TIP: The API key must have one of the permissions to be allowed to call the following API endpoint.\n   * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n   */\n  createSubUIDAPIKey(\n    params: CreateSubApiKeyParamsV5,\n  ): Promise<APIResponseV3WithTime<CreateSubApiKeyResultV5>> {\n    return this.postPrivate('/v5/user/create-sub-api', params);\n  }\n\n  /**\n   * This endpoint allows you to get a list of all sub UID of master account.\n   */\n  getSubUIDList(): Promise<\n    APIResponseV3WithTime<{ subMembers: SubMemberV5[] }>\n  > {\n    return this.getPrivate('/v5/user/query-sub-members');\n  }\n\n  /**\n   * Froze sub uid. Use master user's api key only.\n   *\n   * TIP: The API key must have one of the permissions to be allowed to call the following API endpoint.\n   * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n   */\n  setSubUIDFrozenState(\n    subuid: number,\n    frozen: 0 | 1,\n  ): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/user/frozen-sub-member', { subuid, frozen });\n  }\n\n  /**\n   * Get the information of the api key. Use the api key pending to be checked to call the endpoint.\n   * Both master and sub user's api key are applicable.\n   *\n   * TIP: Any permission can access this endpoint.\n   */\n  getQueryApiKey(): Promise<APIResponseV3WithTime<ApiKeyInfoV5>> {\n    return this.getPrivate('/v5/user/query-api');\n  }\n\n  /**\n   * Modify the settings of a master API key. Use the API key pending to be modified to call the endpoint. Use master user's API key only.\n   *\n   * TIP: The API key must have one of the permissions to be allowed to call the following API endpoint.\n   * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n   */\n  updateMasterApiKey(\n    params: UpdateApiKeyParamsV5,\n  ): Promise<APIResponseV3WithTime<UpdateApiKeyResultV5>> {\n    return this.postPrivate('/v5/user/update-api', params);\n  }\n\n  /**\n   * This endpoint modifies the settings of a sub API key.\n   * Use the API key pending to be modified to call the endpoint.\n   * Only the API key that calls this interface can be modified.\n   *\n   * The API key must own \"Account Transfer\" permission to be allowed to call this API endpoint.\n   */\n  updateSubApiKey(\n    params: UpdateApiKeyParamsV5,\n  ): Promise<APIResponseV3<UpdateApiKeyResultV5>> {\n    return this.postPrivate('/v5/user/update-sub-api', params);\n  }\n\n  /**\n   * Delete the api key of master account. Use the api key pending to be delete to call the endpoint. Use master user's api key only.\n   *\n   * TIP:\n   * The API key must have one of the permissions to be allowed to call the following API endpoint.\n   * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n   *\n   * DANGER: BE CAREFUL! The API key used to call this interface will be invalid immediately.\n   */\n  deleteMasterApiKey(): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/user/delete-api');\n  }\n\n  /**\n   * Delete the api key of sub account. Use the api key pending to be delete to call the endpoint. Use sub user's api key only.\n   *\n   * TIP:\n   * The API key must have one of the permissions to be allowed to call the following API endpoint.\n   * - sub API key: \"Account Transfer\"\n   *\n   * DANGER: BE CAREFUL! The API key used to call this interface will be invalid immediately.\n   */\n  deleteSubApiKey(): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/user/delete-sub-api');\n  }\n\n  /**\n   * Delete a sub UID. Before deleting the UID, please make sure there are no assets.\n   *\n   * TIP:\n   * The API key must have one of the permissions to be allowed to call the following API endpoint.\n   * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n   */\n  deleteSubMember(\n    params: DeleteSubMemberParamsV5,\n  ): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/user/del-submember', params);\n  }\n\n  /**\n   *\n   ****** Spot Leverage Token APIs\n   *\n   */\n\n  /**\n   * Query leverage token information\n   */\n  getLeveragedTokenInfo(\n    ltCoin?: string,\n  ): Promise<APIResponseV3WithTime<{ list: LeverageTokenInfoV5[] }>> {\n    return this.get('/v5/spot-lever-token/info', { ltCoin });\n  }\n\n  /**\n   * Get leverage token market information.\n   */\n  getLeveragedTokenMarket(\n    ltCoin: string,\n  ): Promise<APIResponseV3WithTime<LeveragedTokenMarketResultV5>> {\n    return this.get('/v5/spot-lever-token/reference', { ltCoin });\n  }\n\n  /**\n   * This endpoint allows you to purchase a leveraged token with a specified amount.\n   */\n  purchaseSpotLeveragedToken(\n    params: PurchaseSpotLeveragedTokenParamsV5,\n  ): Promise<APIResponseV3WithTime<PurchaseSpotLeveragedTokenResultV5>> {\n    return this.postPrivate('/v5/spot-lever-token/purchase', params);\n  }\n\n  /**\n   * Redeem leveraged token.\n   */\n  redeemSpotLeveragedToken(\n    params: RedeemSpotLeveragedTokenParamsV5,\n  ): Promise<APIResponseV3WithTime<RedeemSpotLeveragedTokenResultV5>> {\n    return this.postPrivate('/v5/spot-lever-token/redeem', params);\n  }\n\n  /**\n   * Get purchase or redemption history\n   */\n  getSpotLeveragedTokenOrderHistory(\n    params?: GetSpotLeveragedTokenOrderHistoryParamsV5,\n  ): Promise<\n    APIResponseV3WithTime<{ list: SpotLeveragedTokenOrderHistoryV5[] }>\n  > {\n    return this.getPrivate('/v5/spot-lever-token/order-record', params);\n  }\n\n  /**\n   *\n   ****** Spot Margin Trade APIs (UTA)\n   *\n   */\n\n  /**\n   * Turn spot margin trade on / off in your UTA account.\n   *\n   * CAUTION\n   * Your account needs to turn on spot margin first.\n   */\n  toggleSpotMarginTrade(\n    spotMarginMode: '1' | '0',\n  ): Promise<APIResponseV3WithTime<{ spotMarginMode: '1' | '0' }>> {\n    return this.postPrivate('/v5/spot-margin-trade/switch-mode', {\n      spotMarginMode,\n    });\n  }\n\n  /**\n   * Set the user's maximum leverage in spot cross margin.\n   * CAUTION: Your account needs to enable spot margin first; i.e., you must have finished the quiz on web / app.\n   */\n  setSpotMarginLeverage(leverage: string): Promise<APIResponseV3WithTime<{}>> {\n    return this.postPrivate('/v5/spot-margin-trade/set-leverage', { leverage });\n  }\n\n  /**\n   *\n   ****** Spot Margin Trade APIs (Normal)\n   *\n   */\n\n  /**\n   * Get Margin Coin Info\n   */\n  getSpotMarginCoinInfo(coin?: string): Promise<\n    APIResponseV3WithTime<{\n      list: {\n        coin: string;\n        conversionRate: string;\n        liquidationOrder: number;\n      }[];\n    }>\n  > {\n    return this.getPrivate('/v5/spot-cross-margin-trade/pledge-token', {\n      coin,\n    });\n  }\n\n  /**\n   * Get Borrowable Coin Info\n   */\n  getSpotMarginBorrowableCoinInfo(coin?: string): Promise<\n    APIResponseV3WithTime<{\n      list: {\n        coin: string;\n        borrowingPrecision: number;\n        repaymentPrecision: number;\n      }[];\n    }>\n  > {\n    return this.getPrivate('/v5/spot-cross-margin-trade/borrow-token', {\n      coin,\n    });\n  }\n\n  /**\n   * Get Interest & Quota\n   */\n  getSpotMarginInterestAndQuota(coin: string): Promise<\n    APIResponseV3WithTime<{\n      list: {\n        coin: string;\n        interestRate: string;\n        loanAbleAmount: string;\n        maxLoanAmount: string;\n      }[];\n    }>\n  > {\n    return this.getPrivate('/v5/spot-cross-margin-trade/loan-info', {\n      coin,\n    });\n  }\n\n  /**\n   * Get Loan Account Info\n   */\n  getSpotMarginLoanAccountInfo(): Promise<\n    APIResponseV3WithTime<{\n      acctBalanceSum: string;\n      debtBalanceSum: string;\n      loanAccountList: {\n        free: string;\n        interest: string;\n        loan: string;\n        remainAmount: string;\n        locked: string;\n        tokenId: string;\n        total: string;\n      }[];\n      riskRate: string;\n      status: number;\n      switchStatus: number;\n    }>\n  > {\n    return this.getPrivate('/v5/spot-cross-margin-trade/account');\n  }\n\n  /**\n   * Borrow\n   */\n  spotMarginBorrow(params: { coin: string; qty: string }): Promise<\n    APIResponseV3WithTime<{\n      transactId: string;\n    }>\n  > {\n    return this.postPrivate('/v5/spot-cross-margin-trade/loan', params);\n  }\n\n  /**\n   * Repay\n   */\n  spotMarginRepay(params: {\n    coin: string;\n    qty?: string;\n    completeRepayment: 0 | 1;\n  }): Promise<\n    APIResponseV3WithTime<{\n      repayId: string;\n    }>\n  > {\n    return this.postPrivate('/v5/spot-cross-margin-trade/repay', params);\n  }\n\n  /**\n   * Get Borrow Order Detail\n   */\n  getSpotMarginBorrowOrderDetail(params?: {\n    startTime?: number;\n    endTime?: number;\n    coin?: string;\n    status?: 0 | 1 | 2;\n    limit?: number;\n  }): Promise<\n    APIResponseV3WithTime<{\n      list: {\n        accountId: string;\n        coin: string;\n        createdTime: number;\n        id: string;\n        interestAmount: string;\n        interestBalance: string;\n        loanAmount: string;\n        loanBalance: string;\n        remainAmount: string;\n        status: string;\n        type: string;\n      }[];\n    }>\n  > {\n    return this.getPrivate('/v5/spot-cross-margin-trade/orders', params);\n  }\n\n  /**\n   * Get Repayment Order Detail\n   */\n  getSpotMarginRepaymentOrderDetail(params?: {\n    startTime?: number;\n    endTime?: number;\n    coin?: string;\n    limit?: number;\n  }): Promise<\n    APIResponseV3WithTime<{\n      list: {\n        accountId: string;\n        coin: string;\n        repaidAmount: string;\n        repayId: string;\n        repayMarginOrderId: string;\n        repayTime: string;\n        transactIds: {\n          repaidInterest: string;\n          repaidPrincipal: string;\n          repaidSerialNumber: string;\n          transactId: string;\n        }[];\n      }[];\n    }>\n  > {\n    return this.getPrivate('/v5/spot-cross-margin-trade/repay-history', params);\n  }\n\n  /**\n   * Turn spot margin trade on / off in your NORMAL account.\n   */\n  toggleSpotCrossMarginTrade(params: {\n    switch: 1 | 0;\n  }): Promise<APIResponseV3WithTime<{ switchStatus: '1' | '0' }>> {\n    return this.postPrivate('/v5/spot-cross-margin-trade/switch', params);\n  }\n\n  /**\n   *\n   ****** Institutional Lending\n   *\n   */\n\n  /**\n   * Get Product Info\n   */\n  getInstitutionalLendingProductInfo(\n    productId?: string,\n  ): Promise<APIResponseV3WithTime<{ marginProductInfo: any[] }>> {\n    return this.get('/v5/ins-loan/product-infos', { productId });\n  }\n\n  /**\n   * Get Margin Coin Info\n   */\n  getInstitutionalLendingMarginCoinInfo(\n    productId?: string,\n  ): Promise<APIResponseV3WithTime<{ marginToken: any[] }>> {\n    return this.get('/v5/ins-loan/ensure-tokens', { productId });\n  }\n\n  /**\n   * Get Margin Coin Info With Conversion Rate\n   */\n  getInstitutionalLendingMarginCoinInfoWithConversionRate(\n    productId?: string,\n  ): Promise<APIResponseV3WithTime<{ marginToken: any[] }>> {\n    return this.get('/v5/ins-loan/ensure-tokens-convert', { productId });\n  }\n\n  /**\n   * Get Loan Orders\n   */\n  getInstitutionalLendingLoanOrders(params?: {\n    orderId?: string;\n    startTime?: number;\n    endTime?: number;\n    limit?: number;\n  }): Promise<APIResponseV3WithTime<{ marginToken: any[] }>> {\n    return this.getPrivate('/v5/ins-loan/loan-order', params);\n  }\n\n  /**\n   * Get Repay Orders\n   */\n  getInstitutionalLendingRepayOrders(params?: {\n    startTime?: number;\n    endTime?: number;\n    limit?: number;\n  }): Promise<APIResponseV3WithTime<{ repayInfo: any[] }>> {\n    return this.getPrivate('/v5/ins-loan/repaid-history', params);\n  }\n\n  /**\n   * Get LTV\n   */\n  getInstitutionalLendingLTV(): Promise<\n    APIResponseV3WithTime<{ ltvInfo: any[] }>\n  > {\n    return this.getPrivate('/v5/ins-loan/ltv');\n  }\n\n  /**\n   * Get LTV with Ladder Conversion Rate\n   */\n  getInstitutionalLendingLTVWithLadderConversionRate(): Promise<\n    APIResponseV3WithTime<{ ltvInfo: any[] }>\n  > {\n    return this.getPrivate('/v5/ins-loan/ltv-convert');\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponseV3,\n  APIResponseWithTime,\n  KlineInterval,\n  NewSpotOrderV3,\n  SpotBalances,\n  SpotCancelOrderBatchRequest,\n  SpotCrossMarginBorrowingInfoRequest,\n  SpotCrossMarginRepaymentHistoryRequest,\n  SpotLeveragedTokenPRHistoryRequest,\n  SpotMyTradesRequest,\n  SpotOrderQueryById,\n} from './types';\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for newer Spot V3 APIs.\n */\nexport class SpotClientV3 extends BaseRestClient {\n  getClientType() {\n    // Follows the same authentication mechanism as other v3 APIs (e.g. USDC)\n    return REST_CLIENT_TYPE_ENUM.v3;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   */\n\n  /** Get all symbols */\n  getSymbols(): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/symbols');\n  }\n\n  /** Get orderbook for symbol */\n  getOrderBook(symbol: string, limit?: number): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/quote/depth', { symbol, limit });\n  }\n\n  /** Get merged orderbook for symbol */\n  getMergedOrderBook(\n    symbol: string,\n    scale?: number,\n    limit?: number\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/quote/depth/merged', {\n      symbol,\n      scale,\n      limit,\n    });\n  }\n\n  /** Get public trading records (raw trades) */\n  getTrades(symbol: string, limit?: number): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/quote/trades', { symbol, limit });\n  }\n\n  /** Get candles/klines */\n  getCandles(\n    symbol: string,\n    interval: KlineInterval,\n    limit?: number,\n    startTime?: number,\n    endTime?: number\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/quote/kline', {\n      symbol,\n      interval,\n      limit,\n      startTime,\n      endTime,\n    });\n  }\n\n  /** Get latest information for symbol (24hr ticker) */\n  get24hrTicker(symbol?: string): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/quote/ticker/24hr', { symbol });\n  }\n\n  /** Get last traded price */\n  getLastTradedPrice(symbol?: string): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/quote/ticker/price', { symbol });\n  }\n\n  /** Get best bid/ask price */\n  getBestBidAskPrice(symbol?: string): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/quote/ticker/bookTicker', { symbol });\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  /** -> Order API */\n\n  /** Create order */\n  submitOrder(params: NewSpotOrderV3): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/spot/v3/private/order', params);\n  }\n\n  /** Get active order state */\n  getOrder(params: SpotOrderQueryById): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/order', params);\n  }\n\n  /** Cancel order */\n  cancelOrder(params: SpotOrderQueryById): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/spot/v3/private/cancel-order', params);\n  }\n\n  /** Batch cancel orders */\n  cancelOrderBatch(\n    params: SpotCancelOrderBatchRequest\n  ): Promise<APIResponseV3<any>> {\n    const orderTypes = params.orderTypes\n      ? params.orderTypes.join(',')\n      : undefined;\n\n    return this.postPrivate('/spot/v3/private/cancel-orders', {\n      ...params,\n      orderTypes,\n    });\n  }\n\n  /** Batch cancel up to 100 orders by ID */\n  cancelOrderBatchIDs(orderIds: string[]): Promise<APIResponseV3<any>> {\n    const orderIdsCsv = orderIds.join(',');\n    return this.postPrivate('/spot/v3/private/cancel-orders-by-ids', {\n      orderIds: orderIdsCsv,\n    });\n  }\n\n  /** Get open orders */\n  getOpenOrders(\n    symbol?: string,\n    orderId?: string,\n    limit?: number,\n    orderCategory?: 0 | 1\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/open-orders', {\n      symbol,\n      orderId,\n      limit,\n      orderCategory,\n    });\n  }\n\n  /** Get order history */\n  getPastOrders(\n    symbol?: string,\n    orderId?: string,\n    limit?: number,\n    orderCategory?: 0 | 1\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/history-orders', {\n      symbol,\n      orderId,\n      limit,\n      orderCategory,\n    });\n  }\n\n  /**\n   * Get your trade history.\n   * If startTime is not specified, you can only query for records in the last 7 days.\n   * If you want to query for records older than 7 days, startTime is required.\n   */\n  getMyTrades(params?: SpotMyTradesRequest): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/my-trades', params);\n  }\n\n  /**\n   *\n   * Wallet Data Endpoints\n   *\n   */\n\n  /** Get Wallet Balance */\n  getBalances(): Promise<APIResponseV3<SpotBalances>> {\n    return this.getPrivate('/spot/v3/private/account');\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime> {\n    return this.get('/v2/public/time');\n  }\n\n  /**\n   *\n   * Leveraged Token Endpoints\n   *\n   */\n\n  /** Get all asset infos */\n  getLeveragedTokenAssetInfos(ltCode?: string): Promise<APIResponseV3<any>> {\n    return this.get('/spot/v3/public/infos', { ltCode });\n  }\n\n  /** Get leveraged token market info */\n  getLeveragedTokenMarketInfo(ltCode: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/reference', { ltCode });\n  }\n\n  /** Purchase leveraged token */\n  purchaseLeveragedToken(\n    ltCode: string,\n    ltAmount: string,\n    serialNo?: string\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/spot/v3/private/purchase', {\n      ltCode,\n      ltAmount,\n      serialNo,\n    });\n  }\n\n  /** Redeem leveraged token */\n  redeemLeveragedToken(\n    ltCode: string,\n    ltAmount: string,\n    serialNo?: string\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/spot/v3/private/redeem', {\n      ltCode,\n      ltAmount,\n      serialNo,\n    });\n  }\n\n  /** Get leveraged token purchase/redemption history */\n  getLeveragedTokenPRHistory(\n    params?: SpotLeveragedTokenPRHistoryRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/record', params);\n  }\n\n  /**\n   *\n   * Cross Margin Trading Endpoints\n   *\n   */\n\n  /** Borrow margin loan */\n  borrowCrossMarginLoan(\n    coin: string,\n    qty: string\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/spot/v3/private/cross-margin-loan', {\n      coin,\n      qty,\n    });\n  }\n\n  /** Repay margin loan */\n  repayCrossMarginLoan(coin: string, qty: string): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/spot/v3/private/cross-margin-repay', {\n      coin,\n      qty,\n    });\n  }\n\n  /** Query borrowing info */\n  getCrossMarginBorrowingInfo(\n    params?: SpotCrossMarginBorrowingInfoRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/cross-margin-orders', params);\n  }\n\n  /** Query account info */\n  getCrossMarginAccountInfo(): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/cross-margin-account');\n  }\n\n  /** Query interest & quota */\n  getCrossMarginInterestQuota(coin: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/spot/v3/private/cross-margin-loan-info', { coin });\n  }\n\n  /** Query repayment history */\n  getCrossMarginRepaymentHistory(\n    params?: SpotCrossMarginRepaymentHistoryRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/spot/v3/private/cross-margin-repay-history',\n      params\n    );\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponse,\n  KlineInterval,\n  NewSpotOrder,\n  OrderSide,\n  OrderTypeSpot,\n  SpotBalances,\n  SpotLastPrice,\n  SpotOrderQueryById,\n  SpotSymbolInfo,\n} from './types';\nimport BaseRestClient from './util/BaseRestClient';\nimport { REST_CLIENT_TYPE_ENUM } from './util/requestUtils';\n\n/**\n * REST API client for Spot APIs (v1)\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nexport class SpotClient extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.spot;\n  }\n\n  fetchServerTime(): Promise<number> {\n    return this.getServerTime();\n  }\n\n  async getServerTime(): Promise<number> {\n    const res = await this.get('/spot/v1/time');\n    return res.result.serverTime;\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   **/\n\n  getSymbols(): Promise<APIResponse<SpotSymbolInfo[]>> {\n    return this.get('/spot/v1/symbols');\n  }\n\n  getOrderBook(symbol: string, limit?: number): Promise<APIResponse<any>> {\n    return this.get('/spot/quote/v1/depth', {\n      symbol,\n      limit,\n    });\n  }\n\n  getMergedOrderBook(\n    symbol: string,\n    scale?: number,\n    limit?: number,\n  ): Promise<APIResponse<any>> {\n    return this.get('/spot/quote/v1/depth/merged', {\n      symbol,\n      scale,\n      limit,\n    });\n  }\n\n  getTrades(symbol: string, limit?: number): Promise<APIResponse<any[]>> {\n    return this.get('/spot/quote/v1/trades', {\n      symbol,\n      limit,\n    });\n  }\n\n  getCandles(\n    symbol: string,\n    interval: KlineInterval,\n    limit?: number,\n    startTime?: number,\n    endTime?: number,\n  ): Promise<APIResponse<any[]>> {\n    return this.get('/spot/quote/v1/kline', {\n      symbol,\n      interval,\n      limit,\n      startTime,\n      endTime,\n    });\n  }\n\n  get24hrTicker(symbol?: string): Promise<APIResponse<any>> {\n    return this.get('/spot/quote/v1/ticker/24hr', { symbol });\n  }\n\n  getLastTradedPrice(): Promise<APIResponse<SpotLastPrice[]>>;\n\n  getLastTradedPrice(symbol: string): Promise<APIResponse<SpotLastPrice>>;\n\n  getLastTradedPrice(\n    symbol?: string,\n  ): Promise<APIResponse<SpotLastPrice | SpotLastPrice[]>> {\n    return this.get('/spot/quote/v1/ticker/price', { symbol });\n  }\n\n  getBestBidAskPrice(symbol?: string): Promise<APIResponse<any>> {\n    return this.get('/spot/quote/v1/ticker/book_ticker', { symbol });\n  }\n\n  /**\n   * Account Data Endpoints\n   */\n\n  submitOrder(params: NewSpotOrder): Promise<APIResponse<any>> {\n    return this.postPrivate('/spot/v1/order', params);\n  }\n\n  getOrder(params: SpotOrderQueryById): Promise<APIResponse<any>> {\n    return this.getPrivate('/spot/v1/order', params);\n  }\n\n  cancelOrder(params: SpotOrderQueryById): Promise<APIResponse<any>> {\n    return this.deletePrivate('/spot/v1/order', params);\n  }\n\n  cancelOrderBatch(params: {\n    symbol: string;\n    side?: OrderSide;\n    orderTypes: OrderTypeSpot[];\n  }): Promise<APIResponse<any>> {\n    const orderTypes = params.orderTypes\n      ? params.orderTypes.join(',')\n      : undefined;\n\n    return this.deletePrivate('/spot/order/batch-cancel', {\n      ...params,\n      orderTypes,\n    });\n  }\n\n  getOpenOrders(\n    symbol?: string,\n    orderId?: string,\n    limit?: number,\n  ): Promise<APIResponse<any>> {\n    return this.getPrivate('/spot/v1/open-orders', {\n      symbol,\n      orderId,\n      limit,\n    });\n  }\n\n  getPastOrders(\n    symbol?: string,\n    orderId?: string,\n    limit?: number,\n  ): Promise<APIResponse<any>> {\n    return this.getPrivate('/spot/v1/history-orders', {\n      symbol,\n      orderId,\n      limit,\n    });\n  }\n\n  getMyTrades(\n    symbol?: string,\n    limit?: number,\n    fromId?: number,\n    toId?: number,\n  ): Promise<APIResponse<any>> {\n    return this.getPrivate('/spot/v1/myTrades', {\n      symbol,\n      limit,\n      fromId,\n      toId,\n    });\n  }\n\n  /**\n   * Wallet Data Endpoints\n   */\n\n  getBalances(): Promise<APIResponse<SpotBalances>> {\n    return this.getPrivate('/spot/v1/account');\n  }\n}\n","export * from './response';\nexport * from './request';\nexport * from './shared';\nexport * from './v5-shared';\nexport * from './websockets';\nexport * from './websocket.events';\n","export * from './account-asset';\nexport * from './copy-trading';\nexport * from './contract';\nexport * from './linear';\nexport * from './inverse';\nexport * from './spot';\nexport * from './usdc-perp';\nexport * from './usdc-options';\nexport * from './usdc-shared';\nexport * from './unified-margin';\nexport * from './v5-account';\nexport * from './v5-asset';\nexport * from './v5-market';\nexport * from './v5-position';\nexport * from './v5-pre-upgrade';\nexport * from './v5-trade';\nexport * from './v5-user';\nexport * from './v5-spot-leverage-token';\n","export * from './account-asset';\nexport * from './contract';\nexport * from './shared';\nexport * from './spot';\nexport * from './usdt-perp';\nexport * from './unified-margin';\nexport * from './v5-account';\nexport * from './v5-asset';\nexport * from './v5-market';\nexport * from './v5-position';\nexport * from './v5-trade';\nexport * from './v5-user';\nexport * from './v5-spot-leverage-token';\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponseV3,\n  APIResponseWithTime,\n  InternalTransferRequest,\n  UM7DayTradingHistoryRequest,\n  UMActiveOrdersRequest,\n  UMBatchOrder,\n  UMBatchOrderCancel,\n  UMBatchOrderReplace,\n  UMBorrowHistoryRequest,\n  UMCancelAllOrdersRequest,\n  UMCancelOrderRequest,\n  UMCandlesRequest,\n  UMCategory,\n  UMExchangeCoinsRequest,\n  UMFundingRateHistoryRequest,\n  UMHistoricOrder,\n  UMHistoricOrdersRequest,\n  UMInstrumentInfo,\n  UMInstrumentInfoRequest,\n  UMModifyOrderRequest,\n  UMOpenInterestRequest,\n  UMOptionDeliveryPriceRequest,\n  UMOptionsSettlementHistoryRequest,\n  UMOrderRequest,\n  UMPaginatedResult,\n  UMPerpSettlementHistoryRequest,\n  UMPositionsRequest,\n  UMPublicTradesRequest,\n  UMSetTPSLRequest,\n  UMTransactionLogRequest,\n} from './types';\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for Derivatives V3 unified margin APIs\n */\nexport class UnifiedMarginClient extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.v3;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   */\n\n  /** Query order book info. Each side has a depth of 25 orders. */\n  getOrderBook(\n    symbol: string,\n    category: string,\n    limit?: number\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/order-book/L2', {\n      category,\n      symbol,\n      limit,\n    });\n  }\n\n  /** Get candles/klines */\n  getCandles(params: UMCandlesRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/kline', params);\n  }\n\n  /** Get a symbol price/statistics ticker */\n  getSymbolTicker(\n    category: UMCategory,\n    symbol?: string\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/tickers', { category, symbol });\n  }\n\n  /** Get trading rules per symbol/contract, incl price/amount/value/leverage filters */\n  getInstrumentInfo(\n    params: UMInstrumentInfoRequest\n  ): Promise<APIResponseV3<UMPaginatedResult<UMInstrumentInfo>>> {\n    return this.get('/derivatives/v3/public/instruments-info', params);\n  }\n\n  /** Query mark price kline (like getCandles() but for mark price). */\n  getMarkPriceCandles(params: UMCandlesRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/mark-price-kline', params);\n  }\n\n  /** Query Index Price Kline */\n  getIndexPriceCandles(params: UMCandlesRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/index-price-kline', params);\n  }\n\n  /**\n   * The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC.\n   * For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent.\n   */\n  getFundingRateHistory(\n    params: UMFundingRateHistoryRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.get(\n      '/derivatives/v3/public/funding/history-funding-rate',\n      params\n    );\n  }\n\n  /** Get Risk Limit */\n  getRiskLimit(\n    category: UMCategory,\n    symbol: string\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/risk-limit/list', {\n      category,\n      symbol,\n    });\n  }\n\n  /** Get option delivery price */\n  getOptionDeliveryPrice(\n    params: UMOptionDeliveryPriceRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/delivery-price', params);\n  }\n\n  /** Get recent trades */\n  getTrades(params: UMPublicTradesRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/recent-trade', params);\n  }\n\n  /**\n   * Gets the total amount of unsettled contracts.\n   * In other words, the total number of contracts held in open positions.\n   */\n  getOpenInterest(params: UMOpenInterestRequest): Promise<APIResponseV3<any>> {\n    return this.get('/derivatives/v3/public/open-interest', params);\n  }\n\n  /**\n   *\n   * Unified Margin Account Endpoints\n   *\n   */\n\n  /** -> Order API */\n\n  /** Place an order */\n  submitOrder(params: UMOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/order/create', params);\n  }\n\n  /** Active order parameters (such as quantity, price) and stop order parameters cannot be modified in one request at the same time. Please request modification separately. */\n  modifyOrder(params: UMModifyOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/order/replace', params);\n  }\n\n  /** Cancel order */\n  cancelOrder(params: UMCancelOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/order/cancel', params);\n  }\n\n  /** Query Open Orders */\n  getActiveOrders(params: UMActiveOrdersRequest): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/unified/v3/private/order/unfilled-orders', params);\n  }\n\n  /** Query order history. As order creation/cancellation is asynchronous, the data returned from the interface may be delayed. To access order information in real-time, call getActiveOrders() */\n  getHistoricOrders(\n    params: UMHistoricOrdersRequest\n  ): Promise<APIResponseV3<UMPaginatedResult<UMHistoricOrder>>> {\n    return this.getPrivate('/unified/v3/private/order/list', params);\n  }\n\n  /**\n   * This API provides the batch order mode under the unified margin account.\n   * Max 10 per request\n   */\n  batchSubmitOrders(\n    category: UMCategory,\n    orders: UMBatchOrder[]\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/order/create-batch', {\n      category,\n      request: orders,\n    });\n  }\n\n  /**\n   * This interface can modify the open order information in batches.\n   * Currently, it is not supported to modify the conditional order information.\n   * Please note that only unfilled or partial filled orders can be modified.\n   * If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type\n   */\n  batchReplaceOrders(\n    category: UMCategory,\n    orders: UMBatchOrderReplace[]\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/order/replace-batch', {\n      category,\n      request: orders,\n    });\n  }\n\n  /**\n   * This API provides batch cancellation under the unified margin account.\n   * Order cancellation of futures and options cannot be canceled in one request at the same time.\n   * If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type.\n   */\n  batchCancelOrders(\n    category: UMCategory,\n    orders: UMBatchOrderCancel[]\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/order/cancel-batch', {\n      category,\n      request: orders,\n    });\n  }\n\n  /**\n   * This API provides the cancellation of all open orders under the unified margin account.\n   * Order cancellation of futures and options cannot be canceled in one request at the same time.\n   * If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type.\n   */\n  cancelAllOrders(\n    params: UMCancelAllOrdersRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/order/cancel-all', params);\n  }\n\n  /** -> Positions API */\n\n  /**\n   * Query my positions real-time. Accessing personal list of positions.\n   * Users can access their position holding information through this interface, such as the number of position holdings and wallet balance.\n   */\n  getPositions(params: UMPositionsRequest): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/unified/v3/private/position/list', params);\n  }\n\n  /** Leverage setting. */\n  setLeverage(\n    category: UMCategory,\n    symbol: string,\n    buyLeverage: number,\n    sellLeverage: number\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/position/set-leverage', {\n      category,\n      symbol,\n      buyLeverage,\n      sellLeverage,\n    });\n  }\n\n  /**\n   * Switching the TP/SL mode to the cross margin mode or selected positions.\n   * When you set the TP/SL mode on the selected positions, the quantity of take-profit or stop-loss orders can be smaller than the position size. Please use Trading-Stop endpoint.\n   */\n  setTPSLMode(\n    category: UMCategory,\n    symbol: string,\n    tpSlMode: 1 | 0\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/position/tpsl/switch-mode', {\n      category,\n      symbol,\n      tpSlMode,\n    });\n  }\n\n  /** Set risk limit */\n  setRiskLimit(\n    category: UMCategory,\n    symbol: string,\n    riskId: number,\n    positionIdx: number\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/unified/v3/private/position/set-risk-limit', {\n      category,\n      symbol,\n      riskId,\n      positionIdx,\n    });\n  }\n\n  /**\n   * Set position TP/SL and trailing stop.\n   * Pass the following parameters, then the system will create conditional orders.\n   * If the position is closed, the system will cancel these orders, and adjust the position size.\n   */\n  setTPSL(params: UMSetTPSLRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/unified/v3/private/position/trading-stop',\n      params\n    );\n  }\n\n  /**\n   * Access the user's filled history, ranked by time in descending order.\n   * There might be multiple filled histories for an order.\n   */\n  get7DayTradingHistory(\n    params: UM7DayTradingHistoryRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/unified/v3/private/execution/list', params);\n  }\n\n  /** Query the settlement history, ranked by time in descending order. */\n  getOptionsSettlementHistory(\n    params: UMOptionsSettlementHistoryRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/unified/v3/private/delivery-record', params);\n  }\n\n  /** Query session settlement records, only for USDC perpetual */\n  getUSDCPerpetualSettlementHistory(\n    params: UMPerpSettlementHistoryRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/unified/v3/private/settlement-record', params);\n  }\n\n  /** -> Account API */\n\n  /** Query wallet balance */\n  getBalances(coin?: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/unified/v3/private/account/wallet/balance', {\n      coin,\n    });\n  }\n\n  /**\n   * Upgrade to unified margin account.\n   * WARNING: This is currently not reversable!\n   */\n  upgradeToUnifiedMargin(): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/unified/v3/private/account/upgrade-unified-account'\n    );\n  }\n\n  /** Query trading history */\n  getTransactionLog(\n    params: UMTransactionLogRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/unified/v3/private/account/transaction-log',\n      params\n    );\n  }\n\n  /** Fund transfer between accounts (v2) */\n  transferFunds(params: InternalTransferRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/asset/v1/private/transfer', params);\n  }\n\n  /** Exchange Coins */\n  getCoinExchangeHistory(\n    params?: UMExchangeCoinsRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/asset/v2/private/exchange/exchange-order-all',\n      params\n    );\n  }\n\n  /** Get Borrow History */\n  getBorrowHistory(\n    params?: UMBorrowHistoryRequest\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/unified/v3/private/account/borrow-history',\n      params\n    );\n  }\n\n  /** Get Borrow Rate */\n  getBorrowRate(currency?: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate('/unified/v3/private/account/borrow-rate', {\n      currency,\n    });\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime> {\n    return this.get('/v2/public/time');\n  }\n\n  getAnnouncements(): Promise<APIResponseV3<any>> {\n    return this.get('/v2/public/announcement');\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponseV3,\n  APIResponseWithTime,\n  USDCOptionsActiveOrdersRealtimeRequest,\n  USDCOptionsActiveOrdersRequest,\n  USDCOptionsCancelAllOrdersRequest,\n  USDCOptionsCancelOrderRequest,\n  USDCOptionsContractInfoRequest,\n  USDCOptionsDeliveryHistoryRequest,\n  USDCOptionsDeliveryPriceRequest,\n  USDCOptionsHistoricOrdersRequest,\n  USDCOptionsHistoricalVolatilityRequest,\n  USDCOptionsModifyMMPRequest,\n  USDCOptionsModifyOrderRequest,\n  USDCOptionsOrderExecutionRequest,\n  USDCOptionsOrderRequest,\n  USDCOptionsPositionsInfoExpiryRequest,\n  USDCOptionsRecentTradesRequest,\n  USDCPositionsRequest,\n  USDCTransactionLogRequest,\n} from './types';\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for USDC Option APIs\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nexport class USDCOptionClient extends BaseRestClient {\n  getClientType() {\n    return REST_CLIENT_TYPE_ENUM.v3;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   */\n\n  /** Query order book info. Each side has a depth of 25 orders. */\n  getOrderBook(symbol: string): Promise<APIResponseV3<any>> {\n    return this.get('/option/usdc/openapi/public/v1/order-book', { symbol });\n  }\n\n  /** Fetch trading rules (such as min/max qty). Query for all if blank. */\n  getContractInfo(\n    params?: USDCOptionsContractInfoRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/option/usdc/openapi/public/v1/symbols', params);\n  }\n\n  /** Get a symbol price/statistics ticker */\n  getSymbolTicker(symbol: string): Promise<APIResponseV3<any>> {\n    return this.get('/option/usdc/openapi/public/v1/tick', { symbol });\n  }\n\n  /** Get delivery information */\n  getDeliveryPrice(\n    params?: USDCOptionsDeliveryPriceRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/option/usdc/openapi/public/v1/delivery-price', params);\n  }\n\n  /** Returned records are Taker Buy in default. */\n  getLast500Trades(\n    params: USDCOptionsRecentTradesRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get(\n      '/option/usdc/openapi/public/v1/query-trade-latest',\n      params,\n    );\n  }\n\n  /**\n   * The data is in hourly.\n   * If time field is not passed, it returns the recent 1 hour data by default.\n   * It could be any timeframe by inputting startTime & endTime, but it must satisfy [endTime - startTime] <= 30 days.\n   * It returns all data in 2 years when startTime & endTime are not passed.\n   * Both startTime & endTime entered together or both are left blank\n   */\n  getHistoricalVolatility(\n    params?: USDCOptionsHistoricalVolatilityRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get(\n      '/option/usdc/openapi/public/v1/query-historical-volatility',\n      params,\n    );\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  /** -> Order API */\n\n  /**\n   * Place an order using the USDC Derivatives Account.\n   * The request status can be queried in real-time.\n   * The response parameters must be queried through a query or a WebSocket response.\n   */\n  submitOrder(params: USDCOptionsOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/place-order',\n      params,\n    );\n  }\n\n  /**\n   * Each request supports a max. of four orders. The reduceOnly parameter should be separate and unique for each order in the request.\n   */\n  batchSubmitOrders(\n    orderRequest: USDCOptionsOrderRequest[],\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/batch-place-orders',\n      { orderRequest },\n    );\n  }\n\n  /** For Options, at least one of the three parameters — price, quantity or implied volatility — must be input. */\n  modifyOrder(\n    params: USDCOptionsModifyOrderRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/replace-order',\n      params,\n    );\n  }\n\n  /** Each request supports a max. of four orders. The reduceOnly parameter should be separate and unique for each order in the request. */\n  batchModifyOrders(\n    replaceOrderRequest: USDCOptionsModifyOrderRequest[],\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/batch-replace-orders',\n      { replaceOrderRequest },\n    );\n  }\n\n  /** Cancel order */\n  cancelOrder(\n    params: USDCOptionsCancelOrderRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/cancel-order',\n      params,\n    );\n  }\n\n  /** Batch cancel orders */\n  batchCancelOrders(\n    cancelRequest: USDCOptionsCancelOrderRequest[],\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/batch-cancel-orders',\n      { cancelRequest },\n    );\n  }\n\n  /** This is used to cancel all active orders. The real-time response indicates whether the request is successful, depending on retCode. */\n  cancelActiveOrders(\n    params?: USDCOptionsCancelAllOrdersRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/cancel-all',\n      params,\n    );\n  }\n\n  /** Query Unfilled/Partially Filled Orders(real-time), up to last 7 days of partially filled/unfilled orders */\n  getActiveRealtimeOrders(\n    params?: USDCOptionsActiveOrdersRealtimeRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/option/usdc/openapi/private/v1/trade/query-active-orders',\n      params,\n    );\n  }\n\n  /** Query Unfilled/Partially Filled Orders */\n  getActiveOrders(\n    params: USDCOptionsActiveOrdersRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-active-orders',\n      params,\n    );\n  }\n\n  /** Query order history. The endpoint only supports up to 30 days of queried records */\n  getHistoricOrders(\n    params: USDCOptionsHistoricOrdersRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-order-history',\n      params,\n    );\n  }\n\n  /**\n   * Query trade history.\n   * The endpoint only supports up to 30 days of queried records.\n   * An error will be returned if startTime is more than 30 days.\n   */\n  getOrderExecutionHistory(\n    params: USDCOptionsOrderExecutionRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/execution-list',\n      params,\n    );\n  }\n\n  /** -> Account API */\n\n  /** The endpoint only supports up to 30 days of queried records. An error will be returned if startTime is more than 30 days. */\n  getTransactionLog(\n    params: USDCTransactionLogRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-transaction-log',\n      params,\n    );\n  }\n\n  /** Wallet info for USDC account. */\n  getBalances(): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-wallet-balance',\n    );\n  }\n\n  /** Asset Info */\n  getAssetInfo(baseCoin?: string): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-asset-info',\n      { baseCoin },\n    );\n  }\n\n  /**\n   * If USDC derivatives account balance is greater than X, you can open PORTFOLIO_MARGIN,\n   * and if it is less than Y, it will automatically close PORTFOLIO_MARGIN and change back to REGULAR_MARGIN.\n   * X and Y will be adjusted according to operational requirements.\n   * Rest API returns the result of checking prerequisites. You could get the real status of margin mode change by subscribing margin mode.\n   */\n  setMarginMode(\n    newMarginMode: 'REGULAR_MARGIN' | 'PORTFOLIO_MARGIN',\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/private/asset/account/setMarginMode',\n      { setMarginMode: newMarginMode },\n    );\n  }\n\n  /** Query margin mode for USDC account. */\n  getMarginMode(): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-margin-info',\n    );\n  }\n\n  /** -> Positions API */\n\n  /** Query my positions */\n  getPositions(params: USDCPositionsRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-position',\n      params,\n    );\n  }\n\n  /** Query Delivery History */\n  getDeliveryHistory(\n    params: USDCOptionsDeliveryHistoryRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-delivery-list',\n      params,\n    );\n  }\n\n  /** Query Positions Info Upon Expiry */\n  getPositionsInfoUponExpiry(\n    params?: USDCOptionsPositionsInfoExpiryRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-position-exp-date',\n      params,\n    );\n  }\n\n  /** -> Market Maker Protection */\n\n  /** modifyMMP */\n  modifyMMP(params: USDCOptionsModifyMMPRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/mmp-modify',\n      params,\n    );\n  }\n\n  /** resetMMP */\n  resetMMP(currency: string): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/option/usdc/openapi/private/v1/mmp-reset', {\n      currency,\n    });\n  }\n\n  /** queryMMPState */\n  queryMMPState(baseCoin: string): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/option/usdc/openapi/private/v1/get-mmp-state', {\n      baseCoin,\n    });\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime> {\n    return this.get('/v2/public/time');\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  APIResponseV3,\n  APIResponseWithTime,\n  SymbolLimitParam,\n  SymbolPeriodLimitParam,\n  USDCKlineRequest,\n  USDCLast500TradesRequest,\n  USDCOpenInterestRequest,\n  USDCOrderFilter,\n  USDCPerpActiveOrdersRequest,\n  USDCPerpCancelOrderRequest,\n  USDCPerpHistoricOrdersRequest,\n  USDCPerpModifyOrderRequest,\n  USDCPerpOrderRequest,\n  USDCPositionsRequest,\n  USDCSymbolDirectionLimit,\n  USDCSymbolDirectionLimitCursor,\n  USDCTransactionLogRequest,\n} from './types';\nimport { REST_CLIENT_TYPE_ENUM } from './util';\nimport BaseRestClient from './util/BaseRestClient';\n\n/**\n * REST API client for USDC Perpetual APIs\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nexport class USDCPerpetualClient extends BaseRestClient {\n  getClientType() {\n    // Follows the same authentication mechanism as other v3 APIs (e.g. USDC)\n    return REST_CLIENT_TYPE_ENUM.v3;\n  }\n\n  async fetchServerTime(): Promise<number> {\n    const res = await this.getServerTime();\n    return Number(res.time_now);\n  }\n\n  /**\n   *\n   * Market Data Endpoints\n   *\n   */\n\n  getOrderBook(symbol: string): Promise<APIResponseV3<any>> {\n    return this.get('/perpetual/usdc/openapi/public/v1/order-book', { symbol });\n  }\n\n  /** Fetch trading rules (such as min/max qty). Query for all if blank. */\n  getContractInfo(\n    params?: USDCSymbolDirectionLimit,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/perpetual/usdc/openapi/public/v1/symbols', params);\n  }\n\n  /** Get a symbol price/statistics ticker */\n  getSymbolTicker(symbol: string): Promise<APIResponseV3<any>> {\n    return this.get('/perpetual/usdc/openapi/public/v1/tick', { symbol });\n  }\n\n  getCandles(params: USDCKlineRequest): Promise<APIResponseV3<any>> {\n    return this.get('/perpetual/usdc/openapi/public/v1/kline/list', params);\n  }\n\n  getMarkPrice(params: USDCKlineRequest): Promise<APIResponseV3<any>> {\n    return this.get(\n      '/perpetual/usdc/openapi/public/v1/mark-price-kline',\n      params,\n    );\n  }\n\n  getIndexPrice(params: USDCKlineRequest): Promise<APIResponseV3<any>> {\n    return this.get(\n      '/perpetual/usdc/openapi/public/v1/index-price-kline',\n      params,\n    );\n  }\n\n  getIndexPremium(params: USDCKlineRequest): Promise<APIResponseV3<any>> {\n    return this.get(\n      '/perpetual/usdc/openapi/public/v1/premium-index-kline',\n      params,\n    );\n  }\n\n  getOpenInterest(\n    params: USDCOpenInterestRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/perpetual/usdc/openapi/public/v1/open-interest', params);\n  }\n\n  getLargeOrders(\n    params: SymbolLimitParam<string>,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/perpetual/usdc/openapi/public/v1/big-deal', params);\n  }\n\n  getLongShortRatio(\n    params: SymbolPeriodLimitParam<string>,\n  ): Promise<APIResponseV3<any>> {\n    return this.get('/perpetual/usdc/openapi/public/v1/account-ratio', params);\n  }\n\n  getLast500Trades(\n    params: USDCLast500TradesRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.get(\n      '/option/usdc/openapi/public/v1/query-trade-latest',\n      params,\n    );\n  }\n\n  /**\n   *\n   * Account Data Endpoints\n   *\n   */\n\n  /** -> Order API */\n\n  /**\n   * Place an order using the USDC Derivatives Account.\n   * The request status can be queried in real-time.\n   * The response parameters must be queried through a query or a WebSocket response.\n   */\n  submitOrder(params: USDCPerpOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/perpetual/usdc/openapi/private/v1/place-order',\n      params,\n    );\n  }\n\n  /** Active order parameters (such as quantity, price) and stop order parameters cannot be modified in one request at the same time. Please request modification separately. */\n  modifyOrder(params: USDCPerpModifyOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/perpetual/usdc/openapi/private/v1/replace-order',\n      params,\n    );\n  }\n\n  /** Cancel order */\n  cancelOrder(params: USDCPerpCancelOrderRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/perpetual/usdc/openapi/private/v1/cancel-order',\n      params,\n    );\n  }\n\n  /** Cancel all active orders. The real-time response indicates whether the request is successful, depending on retCode. */\n  cancelActiveOrders(\n    symbol: string,\n    orderFilter: USDCOrderFilter,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate('/perpetual/usdc/openapi/private/v1/cancel-all', {\n      symbol,\n      orderFilter,\n    });\n  }\n\n  /** Query Unfilled/Partially Filled Orders */\n  getActiveOrders(\n    params: USDCPerpActiveOrdersRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-active-orders',\n      params,\n    );\n  }\n\n  /** Query order history. The endpoint only supports up to 30 days of queried records */\n  getHistoricOrders(\n    params: USDCPerpHistoricOrdersRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-order-history',\n      params,\n    );\n  }\n\n  /** Query trade history. The endpoint only supports up to 30 days of queried records. An error will be returned if startTime is more than 30 days. */\n  getOrderExecutionHistory(\n    params: USDCPerpActiveOrdersRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/execution-list',\n      params,\n    );\n  }\n\n  /** -> Account API */\n\n  /** The endpoint only supports up to 30 days of queried records. An error will be returned if startTime is more than 30 days. */\n  getTransactionLog(\n    params: USDCTransactionLogRequest,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-transaction-log',\n      params,\n    );\n  }\n\n  /** Wallet info for USDC account. */\n  getBalances(): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-wallet-balance',\n    );\n  }\n\n  /** Asset Info */\n  getAssetInfo(baseCoin?: string): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-asset-info',\n      { baseCoin },\n    );\n  }\n\n  /**\n   * If USDC derivatives account balance is greater than X, you can open PORTFOLIO_MARGIN,\n   * and if it is less than Y, it will automatically close PORTFOLIO_MARGIN and change back to REGULAR_MARGIN.\n   * X and Y will be adjusted according to operational requirements.\n   * Rest API returns the result of checking prerequisites. You could get the real status of margin mode change by subscribing margin mode.\n   */\n  setMarginMode(\n    newMarginMode: 'REGULAR_MARGIN' | 'PORTFOLIO_MARGIN',\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/private/asset/account/setMarginMode',\n      { setMarginMode: newMarginMode },\n    );\n  }\n\n  /** Query margin mode for USDC account. */\n  getMarginMode(): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-margin-info',\n    );\n  }\n\n  /** -> Positions API */\n\n  /** Query my positions */\n  getPositions(params: USDCPositionsRequest): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/query-position',\n      params,\n    );\n  }\n\n  /** Only for REGULAR_MARGIN */\n  setLeverage(symbol: string, leverage: string): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/perpetual/usdc/openapi/private/v1/position/leverage/save',\n      { symbol, leverage },\n    );\n  }\n\n  /** Query Settlement History */\n  getSettlementHistory(\n    params?: USDCSymbolDirectionLimitCursor,\n  ): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/option/usdc/openapi/private/v1/session-settlement',\n      params,\n    );\n  }\n\n  /** -> Risk Limit API */\n\n  /** Query risk limit */\n  getRiskLimit(symbol: string): Promise<APIResponseV3<any>> {\n    return this.getPrivate(\n      '/perpetual/usdc/openapi/public/v1/risk-limit/list',\n      {\n        symbol,\n      },\n    );\n  }\n\n  /** Set risk limit */\n  setRiskLimit(symbol: string, riskId: number): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/perpetual/usdc/openapi/private/v1/position/set-risk-limit',\n      { symbol, riskId },\n    );\n  }\n\n  /** -> Funding API */\n\n  /** Funding settlement occurs every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. The current interval's fund fee settlement is based on the previous interval's fund rate. For example, at 16:00, the settlement is based on the fund rate generated at 8:00. The fund rate generated at 16:00 will be used at 0:00 the next day. */\n  getLastFundingRate(symbol: string): Promise<APIResponseV3<any>> {\n    return this.get('/perpetual/usdc/openapi/public/v1/prev-funding-rate', {\n      symbol,\n    });\n  }\n\n  /** Get predicted funding rate and my predicted funding fee */\n  getPredictedFundingRate(symbol: string): Promise<APIResponseV3<any>> {\n    return this.postPrivate(\n      '/perpetual/usdc/openapi/private/v1/predicted-funding',\n      { symbol },\n    );\n  }\n\n  /**\n   *\n   * API Data Endpoints\n   *\n   */\n\n  getServerTime(): Promise<APIResponseWithTime> {\n    return this.get('/v2/public/time');\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosRequestConfig, AxiosResponse, Method } from 'axios';\n\nimport {\n  // APIID,\n  REST_CLIENT_TYPE_ENUM,\n  RestClientOptions,\n  RestClientType,\n  getRestBaseUrl,\n  parseRateLimitHeaders,\n  serializeParams,\n} from './requestUtils';\nimport { signMessage } from './node-support';\n\nconst ENABLE_HTTP_TRACE =\n  typeof process === 'object' &&\n  typeof process.env === 'object' &&\n  process.env.BYBITTRACE;\n\nif (ENABLE_HTTP_TRACE) {\n  // axios.interceptors.request.use((request) => {\n  //   console.log(\n  //     new Date(),\n  //     'Starting Request',\n  //     JSON.stringify(request, null, 2)\n  //   );\n  //   return request;\n  // });\n  axios.interceptors.response.use((response) => {\n    console.log(new Date(), 'Response:', {\n      request: {\n        url: response.config.url,\n        method: response.config.method,\n        data: response.config.data,\n        headers: response.config.headers,\n        params: response.config.params,\n      },\n      response: {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n        data: response.data,\n      },\n    });\n    return response;\n  });\n}\n\ninterface SignedRequestContext {\n  timestamp?: number;\n  api_key?: string;\n  recv_window?: number;\n  // spot v1 is diff from the rest...\n  recvWindow?: number;\n}\n\ninterface SignedRequest<T> {\n  originalParams: (T & SignedRequestContext) | SignedRequestContext;\n  paramsWithSign?: T & SignedRequestContext & { sign: string };\n  serializedParams: string;\n  sign: string;\n  timestamp: number;\n  recvWindow: number;\n}\n\ninterface UnsignedRequest<T> {\n  originalParams: T;\n  paramsWithSign: T;\n  sign?: string;\n  timestamp?: number;\n  recvWindow?: number;\n}\n\ntype SignMethod = 'v2auth' | 'v5auth';\n\nexport default abstract class BaseRestClient {\n  private timeOffset: number | null = null;\n\n  private syncTimePromise: null | Promise<any> = null;\n\n  private options: RestClientOptions;\n\n  private baseUrl: string;\n\n  private globalRequestOptions: AxiosRequestConfig;\n\n  private key: string | undefined;\n\n  private secret: string | undefined;\n\n  private clientType: RestClientType;\n\n  /**\n   * Function that calls exchange API to query & resolve server time, used by time sync, disabled by default.\n   *\n   * Note: this should always return server time in seconds\n   */\n  abstract fetchServerTime(): Promise<number>;\n\n  /** Defines the client type (affecting how requests & signatures behave) */\n  abstract getClientType(): RestClientType;\n\n  /**\n   * Create an instance of the REST client. Pass API credentials in the object in the first parameter.\n   * @param {RestClientOptions} [restOptions={}] options to configure REST API connectivity\n   * @param {AxiosRequestConfig} [networkOptions={}] HTTP networking options for axios\n   */\n  constructor(\n    restOptions: RestClientOptions = {},\n    networkOptions: AxiosRequestConfig = {},\n  ) {\n    this.clientType = this.getClientType();\n\n    this.options = {\n      recv_window: 5000,\n      /** Throw errors if any request params are empty */\n      strict_param_validation: false,\n      /** Disable time sync by default */\n      enable_time_sync: false,\n      /** How often to sync time drift with bybit servers (if time sync is enabled) */\n      sync_interval_ms: 3600000,\n      /** Determines whether to perform time synchronization before sending private requests */\n      syncTimeBeforePrivateRequests: false,\n      /** Request parameter values are now URI encoded by default during signing. Set to false to override this behaviour. */\n      encodeSerialisedValues: true,\n      ...restOptions,\n    };\n\n    this.globalRequestOptions = {\n      // in ms == 5 minutes by default\n      timeout: 1000 * 60 * 5,\n      // custom request options based on axios specs - see: https://github.com/axios/axios#request-config\n      ...networkOptions,\n      headers: {\n        // 'x-referer': APIID,\n      },\n    };\n\n    this.baseUrl = getRestBaseUrl(!!this.options.testnet, restOptions);\n    this.key = this.options.key;\n    this.secret = this.options.secret;\n\n    if (this.key && !this.secret) {\n      throw new Error(\n        'API Key & Secret are both required for private endpoints',\n      );\n    }\n\n    if (this.options.enable_time_sync) {\n      this.syncTime();\n      setInterval(this.syncTime.bind(this), +this.options.sync_interval_ms!);\n    }\n  }\n\n  private isSpotV1Client() {\n    return this.clientType === REST_CLIENT_TYPE_ENUM.spot;\n  }\n\n  get(endpoint: string, params?: any) {\n    return this._call('GET', endpoint, params, true);\n  }\n\n  getPrivate(endpoint: string, params?: any) {\n    return this._call('GET', endpoint, params, false);\n  }\n\n  post(endpoint: string, params?: any) {\n    return this._call('POST', endpoint, params, true);\n  }\n\n  postPrivate(endpoint: string, params?: any) {\n    return this._call('POST', endpoint, params, false);\n  }\n\n  deletePrivate(endpoint: string, params?: any) {\n    return this._call('DELETE', endpoint, params, false);\n  }\n\n  private async prepareSignParams<TParams = any>(\n    method: Method,\n    signMethod: SignMethod,\n    params?: TParams,\n    isPublicApi?: true,\n  ): Promise<UnsignedRequest<TParams>>;\n\n  private async prepareSignParams<TParams = any>(\n    method: Method,\n    signMethod: SignMethod,\n    params?: TParams,\n    isPublicApi?: false | undefined,\n  ): Promise<SignedRequest<TParams>>;\n\n  private async prepareSignParams<TParams extends SignedRequestContext = any>(\n    method: Method,\n    signMethod: SignMethod,\n    params?: TParams,\n    isPublicApi?: boolean,\n  ): Promise<SignedRequest<TParams> | UnsignedRequest<TParams>>;\n\n  private async prepareSignParams<TParams extends SignedRequestContext = any>(\n    method: Method,\n    signMethod: SignMethod,\n    params?: TParams,\n    isPublicApi?: boolean,\n  ) {\n    if (isPublicApi) {\n      return {\n        originalParams: params,\n        paramsWithSign: params,\n      };\n    }\n\n    if (!this.key || !this.secret) {\n      throw new Error('Private endpoints require api and private keys set');\n    }\n\n    if (this.timeOffset === null) {\n      await this.syncTime();\n    }\n\n    if (this.options.syncTimeBeforePrivateRequests) {\n      this.timeOffset = await this.fetchTimeOffset();\n    }\n\n    return this.signRequest(params || {}, method, signMethod);\n  }\n\n  /** Returns an axios request object. Handles signing process automatically if this is a private API call */\n  private async buildRequest(\n    method: Method,\n    url: string,\n    params?: any,\n    isPublicApi?: boolean,\n  ): Promise<AxiosRequestConfig> {\n    const options: AxiosRequestConfig = {\n      ...this.globalRequestOptions,\n      url: url,\n      method: method,\n    };\n\n    for (const key in params) {\n      if (typeof params[key] === 'undefined') {\n        delete params[key];\n      }\n    }\n\n    if (isPublicApi) {\n      return {\n        ...options,\n        params: params,\n      };\n    }\n\n    // USDC endpoints, unified margin and a few others use a different way of authenticating requests (headers instead of params)\n    if (this.clientType === REST_CLIENT_TYPE_ENUM.v3) {\n      const signResult = await this.prepareSignParams(\n        method,\n        'v5auth',\n        params,\n        isPublicApi,\n      );\n\n      const headers: AxiosRequestConfig['headers'] = {\n        'X-BAPI-SIGN-TYPE': 2,\n        'X-BAPI-API-KEY': this.key,\n        'X-BAPI-TIMESTAMP': signResult.timestamp,\n        'X-BAPI-SIGN': signResult.sign,\n        'X-BAPI-RECV-WINDOW': signResult.recvWindow,\n        ...options.headers,\n      };\n\n      if (method === 'GET') {\n        return {\n          ...options,\n          headers,\n          params: signResult.originalParams,\n        };\n      }\n\n      return {\n        ...options,\n        headers,\n        data: signResult.originalParams,\n      };\n    }\n\n    const signResult = await this.prepareSignParams(\n      method,\n      'v2auth',\n      params,\n      isPublicApi,\n    );\n\n    if (method === 'GET' || this.isSpotV1Client()) {\n      return {\n        ...options,\n        params: signResult.paramsWithSign,\n      };\n    }\n\n    return {\n      ...options,\n      data: signResult.paramsWithSign,\n    };\n  }\n\n  /**\n   * @private Make a HTTP request to a specific endpoint. Private endpoints are automatically signed.\n   */\n  private async _call(\n    method: Method,\n    endpoint: string,\n    params?: any,\n    isPublicApi?: boolean,\n  ): Promise<any> {\n    // Sanity check to make sure it's only ever prefixed by one forward slash\n    const requestUrl = [this.baseUrl, endpoint].join(\n      endpoint.startsWith('/') ? '' : '/',\n    );\n\n    // Build a request and handle signature process\n    const options = await this.buildRequest(\n      method,\n      requestUrl,\n      params,\n      isPublicApi,\n    );\n\n    if (ENABLE_HTTP_TRACE) {\n      console.log('full request: ', options);\n    }\n\n    // Dispatch request\n    return axios(options)\n      .then((response) => {\n        if (response.status == 200) {\n          const perAPIRateLimits = this.options.parseAPIRateLimits\n            ? parseRateLimitHeaders(\n                response.headers,\n                this.options.throwOnFailedRateLimitParse === true,\n              )\n            : undefined;\n\n          return {\n            rateLimitApi: perAPIRateLimits,\n            ...response.data,\n          };\n        }\n\n        throw response;\n      })\n      .catch((e) => this.parseException(e));\n  }\n\n  /**\n   * @private generic handler to parse request exceptions\n   */\n  parseException(e: any): unknown {\n    if (this.options.parse_exceptions === false) {\n      throw e;\n    }\n\n    // Something happened in setting up the request that triggered an Error\n    if (!e.response) {\n      if (!e.request) {\n        throw e.message;\n      }\n\n      // request made but no response received\n      throw e;\n    }\n\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    const response: AxiosResponse = e.response;\n    throw {\n      code: response.status,\n      message: response.statusText,\n      body: response.data,\n      headers: response.headers,\n      requestOptions: this.options,\n    };\n  }\n\n  /**\n   * @private sign request and set recv window\n   */\n  private async signRequest<T extends SignedRequestContext | {} = {}>(\n    data: T,\n    method: Method,\n    signMethod: SignMethod,\n  ): Promise<SignedRequest<T>> {\n    const timestamp = Date.now() + (this.timeOffset || 0);\n\n    const res: SignedRequest<T> = {\n      originalParams: {\n        ...data,\n      },\n      sign: '',\n      timestamp,\n      recvWindow: 0,\n      serializedParams: '',\n    };\n\n    if (!this.key || !this.secret) {\n      return res;\n    }\n    const key = this.key;\n    const recvWindow =\n      res.originalParams.recv_window || this.options.recv_window || 5000;\n    const strictParamValidation = this.options.strict_param_validation;\n    const encodeSerialisedValues = this.options.encodeSerialisedValues;\n\n    // In case the parent function needs it (e.g. USDC uses a header)\n    res.recvWindow = recvWindow;\n\n    // usdc is different for some reason\n    if (signMethod === 'v5auth') {\n      const sortProperties = false;\n      const signRequestParams =\n        method === 'GET'\n          ? serializeParams(\n              res.originalParams,\n              strictParamValidation,\n              sortProperties,\n              encodeSerialisedValues,\n            )\n          : JSON.stringify(res.originalParams);\n\n      const paramsStr = timestamp + key + recvWindow + signRequestParams;\n\n      res.sign = await signMessage(paramsStr, this.secret);\n      res.serializedParams = signRequestParams;\n\n      // console.log('sign req: ', {\n      //   req: paramsStr,\n      //   sign: res.sign,\n      // });\n      return res;\n    }\n\n    // spot/v2 derivatives\n    if (signMethod === 'v2auth') {\n      res.originalParams.api_key = key;\n      res.originalParams.timestamp = timestamp;\n\n      // Optional, set to 5000 by default. Increase if timestamp/recv_window errors are seen.\n      if (recvWindow) {\n        if (this.isSpotV1Client()) {\n          res.originalParams.recvWindow = recvWindow;\n        } else {\n          res.originalParams.recv_window = recvWindow;\n        }\n      }\n      const sortProperties = true;\n      const encodeValues = false;\n\n      res.serializedParams = serializeParams(\n        res.originalParams,\n        strictParamValidation,\n        sortProperties,\n        encodeValues,\n      );\n      res.sign = await signMessage(res.serializedParams, this.secret);\n\n      // @ts-ignore\n      res.paramsWithSign = {\n        ...res.originalParams,\n        sign: res.sign,\n      };\n\n      return res;\n    }\n\n    return res;\n  }\n\n  /**\n   * Trigger time sync and store promise. Use force: true, if automatic time sync is disabled\n   */\n  private syncTime(force?: boolean): Promise<any> {\n    if (!force && !this.options.enable_time_sync) {\n      this.timeOffset = 0;\n      return Promise.resolve(false);\n    }\n\n    if (this.syncTimePromise !== null) {\n      return this.syncTimePromise;\n    }\n\n    this.syncTimePromise = this.fetchTimeOffset().then((offset) => {\n      this.timeOffset = offset;\n      this.syncTimePromise = null;\n    });\n\n    return this.syncTimePromise;\n  }\n\n  /**\n   * Estimate drift based on client<->server latency\n   */\n  async fetchTimeOffset(): Promise<number> {\n    try {\n      const start = Date.now();\n      const serverTime = await this.fetchServerTime();\n\n      if (!serverTime || isNaN(serverTime)) {\n        throw new Error(\n          `fetchServerTime() returned non-number: \"${serverTime}\" typeof(${typeof serverTime})`,\n        );\n      }\n\n      const end = Date.now();\n      const severTimeMs = serverTime * 1000;\n\n      const avgDrift = (end - start) / 2;\n      return Math.ceil(severTimeMs - end + avgDrift);\n    } catch (e) {\n      console.error('Failed to fetch get time offset: ', e);\n      return 0;\n    }\n  }\n}\n","import WebSocket from 'isomorphic-ws';\nimport { WsKey } from '../types';\n\nimport { DefaultLogger } from './logger';\n\nexport enum WsConnectionStateEnum {\n  INITIAL = 0,\n  CONNECTING = 1,\n  CONNECTED = 2,\n  CLOSING = 3,\n  RECONNECTING = 4,\n  // ERROR = 5,\n}\n/** A \"topic\" is always a string */\ntype WsTopic = string;\n\n/**\n * A \"Set\" is used to ensure we only subscribe to a topic once (tracking a list of unique topics we're expected to be connected to)\n * Note: Accurate duplicate tracking only works for plaintext topics.\n * E.g. JSON objects may not be seen as duplicates if keys are in different orders. If that's needed, check the FTX implementation.\n */\ntype WsTopicList = Set<WsTopic>;\n\ninterface WsStoredState {\n  /** The currently active websocket connection */\n  ws?: WebSocket;\n  /** The current lifecycle state of the connection (enum) */\n  connectionState?: WsConnectionStateEnum;\n  /** A timer that will send an upstream heartbeat (ping) when it expires */\n  activePingTimer?: ReturnType<typeof setTimeout> | undefined;\n  /** A timer tracking that an upstream heartbeat was sent, expecting a reply before it expires */\n  activePongTimer?: ReturnType<typeof setTimeout> | undefined;\n  /** If a reconnection is in progress, this will have the timer for the delayed reconnect */\n  activeReconnectTimer?: ReturnType<typeof setTimeout> | undefined;\n  /**\n   * All the topics we are expected to be subscribed to (and we automatically resubscribe to if the connection drops)\n   */\n  subscribedTopics: WsTopicList;\n}\n\nexport default class WsStore {\n  private wsState: Record<string, WsStoredState>;\n\n  private logger: typeof DefaultLogger;\n\n  constructor(logger: typeof DefaultLogger) {\n    this.logger = logger || DefaultLogger;\n    this.wsState = {};\n  }\n\n  /** Get WS stored state for key, optionally create if missing */\n  get(key: WsKey, createIfMissing?: true): WsStoredState;\n\n  get(key: WsKey, createIfMissing?: false): WsStoredState | undefined;\n\n  get(key: WsKey, createIfMissing?: boolean): WsStoredState | undefined {\n    if (this.wsState[key]) {\n      return this.wsState[key];\n    }\n\n    if (createIfMissing) {\n      return this.create(key);\n    }\n  }\n\n  getKeys(): WsKey[] {\n    return Object.keys(this.wsState) as WsKey[];\n  }\n\n  create(key: WsKey): WsStoredState | undefined {\n    if (this.hasExistingActiveConnection(key)) {\n      this.logger.warning(\n        'WsStore setConnection() overwriting existing open connection: ',\n        this.getWs(key)\n      );\n    }\n    this.wsState[key] = {\n      subscribedTopics: new Set(),\n      connectionState: WsConnectionStateEnum.INITIAL,\n    };\n    return this.get(key);\n  }\n\n  delete(key: WsKey) {\n    if (this.hasExistingActiveConnection(key)) {\n      const ws = this.getWs(key);\n      this.logger.warning(\n        'WsStore deleting state for connection still open: ',\n        ws\n      );\n      ws?.close();\n    }\n    delete this.wsState[key];\n  }\n\n  /* connection websocket */\n\n  hasExistingActiveConnection(key: WsKey) {\n    return this.get(key) && this.isWsOpen(key);\n  }\n\n  getWs(key: WsKey): WebSocket | undefined {\n    return this.get(key)?.ws;\n  }\n\n  setWs(key: WsKey, wsConnection: WebSocket): WebSocket {\n    if (this.isWsOpen(key)) {\n      this.logger.warning(\n        'WsStore setConnection() overwriting existing open connection: ',\n        this.getWs(key)\n      );\n    }\n    this.get(key, true)!.ws = wsConnection;\n    return wsConnection;\n  }\n\n  /* connection state */\n\n  isWsOpen(key: WsKey): boolean {\n    const existingConnection = this.getWs(key);\n    return (\n      !!existingConnection &&\n      existingConnection.readyState === existingConnection.OPEN\n    );\n  }\n\n  getConnectionState(key: WsKey): WsConnectionStateEnum {\n    return this.get(key, true)!.connectionState!;\n  }\n\n  setConnectionState(key: WsKey, state: WsConnectionStateEnum) {\n    this.get(key, true)!.connectionState = state;\n  }\n\n  isConnectionState(key: WsKey, state: WsConnectionStateEnum): boolean {\n    return this.getConnectionState(key) === state;\n  }\n\n  /* subscribed topics */\n\n  getTopics(key: WsKey): WsTopicList {\n    return this.get(key, true).subscribedTopics;\n  }\n\n  getTopicsByKey(): Record<string, WsTopicList> {\n    const result = {};\n    for (const refKey in this.wsState) {\n      result[refKey] = this.getTopics(refKey as WsKey);\n    }\n    return result;\n  }\n\n  addTopic(key: WsKey, topic: WsTopic) {\n    return this.getTopics(key).add(topic);\n  }\n\n  deleteTopic(key: WsKey, topic: WsTopic) {\n    return this.getTopics(key).delete(topic);\n  }\n}\n","export async function signMessage(\n  message: string,\n  secret: string\n): Promise<string> {\n  const encoder = new TextEncoder();\n  // eslint-disable-next-line no-undef\n  const key = await window.crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: { name: 'SHA-256' } },\n    false,\n    ['sign']\n  );\n\n  // eslint-disable-next-line no-undef\n  const signature = await window.crypto.subtle.sign(\n    'HMAC',\n    key,\n    encoder.encode(message)\n  );\n\n  return Array.prototype.map\n    .call(\n      new Uint8Array(signature),\n      (x: { toString: (arg0: number) => string }) =>\n        ('00' + x.toString(16)).slice(-2)\n    )\n    .join('');\n}\n","export * from './BaseRestClient';\nexport * from './logger';\nexport * from './requestUtils';\nexport * from './typeGuards';\nexport * from './websocket-util';\nexport * from './WsStore';\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type LogParams = null | any;\n\nexport const DefaultLogger = {\n  /** Ping/pong events and other raw messages that might be noisy */\n  silly: (...params: LogParams): void => {\n    // console.log(params);\n  },\n  debug: (...params: LogParams): void => {\n    console.log(params);\n  },\n  notice: (...params: LogParams): void => {\n    console.log(params);\n  },\n  info: (...params: LogParams): void => {\n    console.info(params);\n  },\n  warning: (...params: LogParams): void => {\n    console.error(params);\n  },\n  error: (...params: LogParams): void => {\n    console.error(params);\n  },\n};\n","import { AxiosResponse } from 'axios';\nimport { APIRateLimit } from '../types';\nimport { WebsocketSucceededTopicSubscriptionConfirmationEvent } from '../types/ws-events/succeeded-topic-subscription-confirmation';\nimport { WebsocketTopicSubscriptionConfirmationEvent } from '../types/ws-events/topic-subscription-confirmation';\n\nexport interface RestClientOptions {\n  /** Your API key */\n  key?: string;\n\n  /** Your API secret */\n  secret?: string;\n\n  /** Set to `true` to connect to testnet. Uses the live environment by default. */\n  testnet?: boolean;\n\n  /** Override the max size of the request window (in ms) */\n  recv_window?: number;\n\n  /**\n   * Disabled by default.\n   * This can help on machines with consistent latency problems.\n   *\n   * Note: this feature is not recommended as one slow request can cause problems\n   */\n  enable_time_sync?: boolean;\n\n  /** How often to sync time drift with bybit servers */\n  sync_interval_ms?: number | string;\n\n  /** Determines whether to perform time synchronization before sending private requests */\n  syncTimeBeforePrivateRequests?: false;\n\n  /** Default: false. If true, we'll throw errors if any params are undefined */\n  strict_param_validation?: boolean;\n\n  /**\n   * Default: true.\n   * If true, request parameters will be URI encoded during the signing process.\n   * New behaviour introduced in v3.2.1 to fix rare parameter-driven sign errors with unified margin cursors containing \"%\".\n   */\n  encodeSerialisedValues?: boolean;\n\n  /**\n   * Optionally override API protocol + domain\n   * e.g baseUrl: 'https://api.bytick.com'\n   **/\n  baseUrl?: string;\n\n  /** Default: true. whether to try and post-process request exceptions. */\n  parse_exceptions?: boolean;\n\n  /** Default: false. Enable to parse/include per-API/endpoint rate limits in responses. */\n  parseAPIRateLimits?: boolean;\n\n  /** Default: false. Enable to throw error if rate limit parser fails */\n  throwOnFailedRateLimitParse?: boolean;\n}\n\n/**\n * Serialise a (flat) object into a query string\n * @param params the object to serialise\n * @param strict_validation throw if any properties are undefined\n * @param sortProperties sort properties alphabetically before building a query string\n * @param encodeSerialisedValues URL encode value before serialising\n * @returns the params object as a serialised string key1=value1&key2=value2&etc\n */\nexport function serializeParams(\n  params: object = {},\n  strict_validation = false,\n  sortProperties = true,\n  encodeSerialisedValues = true,\n): string {\n  const properties = sortProperties\n    ? Object.keys(params).sort()\n    : Object.keys(params);\n\n  return properties\n    .map((key) => {\n      const value = encodeSerialisedValues\n        ? encodeURIComponent(params[key])\n        : params[key];\n\n      if (strict_validation === true && typeof value === 'undefined') {\n        throw new Error(\n          'Failed to sign API request due to undefined parameter',\n        );\n      }\n      return `${key}=${value}`;\n    })\n    .join('&');\n}\n\nexport function getRestBaseUrl(\n  useTestnet: boolean,\n  restInverseOptions: RestClientOptions,\n): string {\n  const exchangeBaseUrls = {\n    livenet: 'https://api.bybit.com',\n    testnet: 'https://api-testnet.bybit.com',\n  };\n\n  if (restInverseOptions.baseUrl) {\n    return restInverseOptions.baseUrl;\n  }\n\n  if (useTestnet) {\n    return exchangeBaseUrls.testnet;\n  }\n\n  return exchangeBaseUrls.livenet;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isWsPong(msg: any): boolean {\n  if (!msg) {\n    return false;\n  }\n  if (msg.pong || msg.ping) {\n    return true;\n  }\n\n  if (msg['op'] === 'pong') {\n    return true;\n  }\n\n  if (msg['ret_msg'] === 'pong') {\n    return true;\n  }\n\n  return (\n    msg.request &&\n    msg.request.op === 'ping' &&\n    msg.ret_msg === 'pong' &&\n    msg.success === true\n  );\n}\n\nexport function isTopicSubscriptionConfirmation(\n  msg: unknown,\n): msg is WebsocketTopicSubscriptionConfirmationEvent {\n  if (typeof msg !== 'object') {\n    return false;\n  }\n  if (!msg) {\n    return false;\n  }\n  if (typeof msg['op'] !== 'string') {\n    return false;\n  }\n  if (msg['op'] !== 'subscribe') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTopicSubscriptionSuccess(\n  msg: unknown,\n): msg is WebsocketSucceededTopicSubscriptionConfirmationEvent {\n  if (!isTopicSubscriptionConfirmation(msg)) return false;\n  return msg.success === true;\n}\n\n// export const APIID = 'bybitapinode';\n\n/**\n * Used to switch how authentication/requests work under the hood (primarily for SPOT since it's different there)\n */\nexport const REST_CLIENT_TYPE_ENUM = {\n  accountAsset: 'accountAsset',\n  inverse: 'inverse',\n  inverseFutures: 'inverseFutures',\n  linear: 'linear',\n  spot: 'spot',\n  v3: 'v3',\n} as const;\n\nexport type RestClientType =\n  (typeof REST_CLIENT_TYPE_ENUM)[keyof typeof REST_CLIENT_TYPE_ENUM];\n\n/** Parse V5 rate limit response headers, if enabled */\nexport function parseRateLimitHeaders(\n  headers: AxiosResponse['headers'] | undefined,\n  throwOnFailedRateLimitParse: boolean,\n): APIRateLimit | undefined {\n  try {\n    if (!headers || typeof headers !== 'object') {\n      return;\n    }\n    const remaining = headers['x-bapi-limit-status'];\n    const max = headers['x-bapi-limit'];\n    const resetAt = headers['x-bapi-limit-reset-timestamp'];\n\n    if (\n      typeof remaining === 'undefined' ||\n      typeof max === 'undefined' ||\n      typeof resetAt === 'undefined'\n    ) {\n      return;\n    }\n\n    const result: APIRateLimit = {\n      remainingRequests: Number(remaining),\n      maxRequests: Number(max),\n      resetAtTimestamp: Number(resetAt),\n    };\n\n    if (\n      isNaN(result.remainingRequests) ||\n      isNaN(result.maxRequests) ||\n      isNaN(result.resetAtTimestamp)\n    ) {\n      return;\n    }\n\n    return result;\n  } catch (e) {\n    if (throwOnFailedRateLimitParse) {\n      console.log(\n        new Date(),\n        'parseRateLimitHeaders()',\n        'Failed to parse rate limit headers',\n        {\n          headers,\n          exception: e,\n        },\n      );\n      throw e;\n    }\n  }\n\n  return undefined;\n}\n","/**\n * Use type guards to narrow down types with minimal efforts.\n */\n\nimport { WSOrderbookEventV5 } from '../types/websocket.events';\n\n/**\n * Type guard to detect a V5 orderbook event (delta & snapshots)\n *\n * @param event\n * @returns\n */\nexport function isWsOrderbookEventV5(\n  event: unknown,\n): event is WSOrderbookEventV5 {\n  if (\n    typeof event !== 'object' ||\n    !event ||\n    typeof event['topic'] !== 'string' ||\n    typeof event['type'] !== 'string'\n  ) {\n    return false;\n  }\n\n  return (\n    ['delta', 'snapshot'].includes(event['type']) &&\n    event['topic'].startsWith('orderbook')\n  );\n}\n","import WebSocket from 'isomorphic-ws';\n\nimport { APIMarket, CategoryV5, WsKey } from '../types';\nimport { DefaultLogger } from './logger';\n\ninterface NetworkMapV3 {\n  livenet: string;\n  livenet2?: string;\n  testnet: string;\n  testnet2?: string;\n}\n\ntype PublicPrivateNetwork = 'public' | 'private';\n\n/**\n * The following WS keys are logical.\n *\n * They're not directly used as a market. They usually have one private endpoint but many public ones,\n * so they need a bit of extra handling for seamless messaging between endpoints.\n *\n * For the unified keys, the \"split\" happens using the symbol. Symbols suffixed with USDT are obviously USDT topics.\n * For the v5 endpoints, the subscribe/unsubscribe call must specify the category the subscription should route to.\n */\ntype PublicOnlyWsKeys =\n  | 'unifiedPerpUSDT'\n  | 'unifiedPerpUSDC'\n  | 'v5SpotPublic'\n  | 'v5LinearPublic'\n  | 'v5InversePublic'\n  | 'v5OptionPublic';\n\nexport const WS_BASE_URL_MAP: Record<\n  APIMarket,\n  Record<PublicPrivateNetwork, NetworkMapV3>\n> &\n  Record<PublicOnlyWsKeys, Record<'public', NetworkMapV3>> = {\n  inverse: {\n    public: {\n      livenet: 'wss://stream.bybit.com/realtime',\n      testnet: 'wss://stream-testnet.bybit.com/realtime',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/realtime',\n      testnet: 'wss://stream-testnet.bybit.com/realtime',\n    },\n  },\n  linear: {\n    public: {\n      livenet: 'wss://stream.bybit.com/realtime_public',\n      livenet2: 'wss://stream.bytick.com/realtime_public',\n      testnet: 'wss://stream-testnet.bybit.com/realtime_public',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/realtime_private',\n      livenet2: 'wss://stream.bytick.com/realtime_private',\n      testnet: 'wss://stream-testnet.bybit.com/realtime_private',\n    },\n  },\n  spot: {\n    public: {\n      livenet: 'wss://stream.bybit.com/spot/quote/ws/v1',\n      livenet2: 'wss://stream.bybit.com/spot/quote/ws/v2',\n      testnet: 'wss://stream-testnet.bybit.com/spot/quote/ws/v1',\n      testnet2: 'wss://stream-testnet.bybit.com/spot/quote/ws/v2',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/spot/ws',\n      testnet: 'wss://stream-testnet.bybit.com/spot/ws',\n    },\n  },\n  spotv3: {\n    public: {\n      livenet: 'wss://stream.bybit.com/spot/public/v3',\n      testnet: 'wss://stream-testnet.bybit.com/spot/public/v3',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/spot/private/v3',\n      testnet: 'wss://stream-testnet.bybit.com/spot/private/v3',\n    },\n  },\n  usdcOption: {\n    public: {\n      livenet: 'wss://stream.bybit.com/trade/option/usdc/public/v1',\n      livenet2: 'wss://stream.bytick.com/trade/option/usdc/public/v1',\n      testnet: 'wss://stream-testnet.bybit.com/trade/option/usdc/public/v1',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/trade/option/usdc/private/v1',\n      livenet2: 'wss://stream.bytick.com/trade/option/usdc/private/v1',\n      testnet: 'wss://stream-testnet.bybit.com/trade/option/usdc/private/v1',\n    },\n  },\n  usdcPerp: {\n    public: {\n      livenet: 'wss://stream.bybit.com/perpetual/ws/v1/realtime_public',\n      livenet2: 'wss://stream.bytick.com/perpetual/ws/v1/realtime_public',\n      testnet: 'wss://stream-testnet.bybit.com/perpetual/ws/v1/realtime_public',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/trade/option/usdc/private/v1',\n      livenet2: 'wss://stream.bytick.com/trade/option/usdc/private/v1',\n      testnet: 'wss://stream-testnet.bybit.com/trade/option/usdc/private/v1',\n    },\n  },\n  unifiedOption: {\n    public: {\n      livenet: 'wss://stream.bybit.com/option/usdc/public/v3',\n      testnet: 'wss://stream-testnet.bybit.com/option/usdc/public/v3',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/unified/private/v3',\n      testnet: 'wss://stream-testnet.bybit.com/unified/private/v3',\n    },\n  },\n  unifiedPerp: {\n    public: {\n      livenet: 'useBaseSpecificEndpoint',\n      testnet: 'useBaseSpecificEndpoint',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/unified/private/v3',\n      testnet: 'wss://stream-testnet.bybit.com/unified/private/v3',\n    },\n  },\n  unifiedPerpUSDT: {\n    public: {\n      livenet: 'wss://stream.bybit.com/contract/usdt/public/v3',\n      testnet: 'wss://stream-testnet.bybit.com/contract/usdt/public/v3',\n    },\n  },\n  unifiedPerpUSDC: {\n    public: {\n      livenet: 'wss://stream.bybit.com/contract/usdc/public/v3',\n      testnet: 'wss://stream-testnet.bybit.com/contract/usdc/public/v3',\n    },\n  },\n  contractUSDT: {\n    public: {\n      livenet: 'wss://stream.bybit.com/contract/usdt/public/v3',\n      testnet: 'wss://stream-testnet.bybit.com/contract/usdt/public/v3',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/contract/private/v3',\n      testnet: 'wss://stream-testnet.bybit.com/contract/private/v3',\n    },\n  },\n  contractInverse: {\n    public: {\n      livenet: 'wss://stream.bybit.com/contract/inverse/public/v3',\n      testnet: 'wss://stream-testnet.bybit.com/contract/inverse/public/v3',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/contract/private/v3',\n      testnet: 'wss://stream-testnet.bybit.com/contract/private/v3',\n    },\n  },\n  v5: {\n    public: {\n      livenet: 'public topics are routed internally via the public wskeys',\n      testnet: 'public topics are routed internally via the public wskeys',\n    },\n    private: {\n      livenet: 'wss://stream.bybit.com/v5/private',\n      testnet: 'wss://stream-testnet.bybit.com/v5/private',\n    },\n  },\n  v5SpotPublic: {\n    public: {\n      livenet: 'wss://stream.bybit.com/v5/public/spot',\n      testnet: 'wss://stream-testnet.bybit.com/v5/public/spot',\n    },\n  },\n  v5LinearPublic: {\n    public: {\n      livenet: 'wss://stream.bybit.com/v5/public/linear',\n      testnet: 'wss://stream-testnet.bybit.com/v5/public/linear',\n    },\n  },\n  v5InversePublic: {\n    public: {\n      livenet: 'wss://stream.bybit.com/v5/public/inverse',\n      testnet: 'wss://stream-testnet.bybit.com/v5/public/inverse',\n    },\n  },\n  v5OptionPublic: {\n    public: {\n      livenet: 'wss://stream.bybit.com/v5/public/option',\n      testnet: 'wss://stream-testnet.bybit.com/v5/public/option',\n    },\n  },\n};\n\nexport const WS_KEY_MAP = {\n  inverse: 'inverse',\n  linearPrivate: 'linearPrivate',\n  linearPublic: 'linearPublic',\n  spotPrivate: 'spotPrivate',\n  spotPublic: 'spotPublic',\n  spotV3Private: 'spotV3Private',\n  spotV3Public: 'spotV3Public',\n  usdcOptionPrivate: 'usdcOptionPrivate',\n  usdcOptionPublic: 'usdcOptionPublic',\n  usdcPerpPrivate: 'usdcPerpPrivate',\n  usdcPerpPublic: 'usdcPerpPublic',\n  unifiedPrivate: 'unifiedPrivate',\n  unifiedOptionPublic: 'unifiedOptionPublic',\n  unifiedPerpUSDTPublic: 'unifiedPerpUSDTPublic',\n  unifiedPerpUSDCPublic: 'unifiedPerpUSDCPublic',\n  contractUSDTPublic: 'contractUSDTPublic',\n  contractUSDTPrivate: 'contractUSDTPrivate',\n  contractInversePublic: 'contractInversePublic',\n  contractInversePrivate: 'contractInversePrivate',\n  v5SpotPublic: 'v5SpotPublic',\n  v5LinearPublic: 'v5LinearPublic',\n  v5InversePublic: 'v5InversePublic',\n  v5OptionPublic: 'v5OptionPublic',\n  v5Private: 'v5Private',\n} as const;\n\nexport const WS_AUTH_ON_CONNECT_KEYS: WsKey[] = [\n  WS_KEY_MAP.spotV3Private,\n  WS_KEY_MAP.usdcOptionPrivate,\n  WS_KEY_MAP.usdcPerpPrivate,\n  WS_KEY_MAP.unifiedPrivate,\n  WS_KEY_MAP.contractUSDTPrivate,\n  WS_KEY_MAP.contractInversePrivate,\n  WS_KEY_MAP.v5Private,\n];\n\nexport const PUBLIC_WS_KEYS = [\n  WS_KEY_MAP.linearPublic,\n  WS_KEY_MAP.spotPublic,\n  WS_KEY_MAP.spotV3Public,\n  WS_KEY_MAP.usdcOptionPublic,\n  WS_KEY_MAP.usdcPerpPublic,\n  WS_KEY_MAP.unifiedOptionPublic,\n  WS_KEY_MAP.unifiedPerpUSDTPublic,\n  WS_KEY_MAP.unifiedPerpUSDCPublic,\n  WS_KEY_MAP.contractUSDTPublic,\n  WS_KEY_MAP.contractInversePublic,\n  WS_KEY_MAP.v5SpotPublic,\n  WS_KEY_MAP.v5LinearPublic,\n  WS_KEY_MAP.v5InversePublic,\n  WS_KEY_MAP.v5OptionPublic,\n] as string[];\n\n/** Used to automatically determine if a sub request should be to the public or private ws (when there's two) */\nconst PRIVATE_TOPICS = [\n  'stop_order',\n  'outboundAccountInfo',\n  'executionReport',\n  'ticketInfo',\n  // copy trading apis\n  'copyTradePosition',\n  'copyTradeOrder',\n  'copyTradeExecution',\n  'copyTradeWallet',\n  // usdc options\n  'user.openapi.option.position',\n  'user.openapi.option.trade',\n  'user.order',\n  'user.openapi.option.order',\n  'user.service',\n  'user.openapi.greeks',\n  'user.mmp.event',\n  // usdc perps\n  'user.openapi.perp.position',\n  'user.openapi.perp.trade',\n  'user.openapi.perp.order',\n  'user.service',\n  // unified margin\n  'user.position.unifiedAccount',\n  'user.execution.unifiedAccount',\n  'user.order.unifiedAccount',\n  'user.wallet.unifiedAccount',\n  'user.greeks.unifiedAccount',\n  // contract v3\n  'user.position.contractAccount',\n  'user.execution.contractAccount',\n  'user.order.contractAccount',\n  'user.wallet.contractAccount',\n  // v5\n  'position',\n  'execution',\n  'order',\n  'wallet',\n  'greeks',\n];\n\nexport function isPrivateWsTopic(topic: string): boolean {\n  return PRIVATE_TOPICS.includes(topic);\n}\n\nexport function getWsKeyForTopic(\n  market: APIMarket,\n  topic: string,\n  isPrivate?: boolean,\n  category?: CategoryV5,\n): WsKey {\n  const isPrivateTopic = isPrivate === true || PRIVATE_TOPICS.includes(topic);\n  switch (market) {\n    case 'inverse': {\n      return WS_KEY_MAP.inverse;\n    }\n    case 'linear': {\n      return isPrivateTopic\n        ? WS_KEY_MAP.linearPrivate\n        : WS_KEY_MAP.linearPublic;\n    }\n    case 'spot': {\n      return isPrivateTopic ? WS_KEY_MAP.spotPrivate : WS_KEY_MAP.spotPublic;\n    }\n    case 'spotv3': {\n      return isPrivateTopic\n        ? WS_KEY_MAP.spotV3Private\n        : WS_KEY_MAP.spotV3Public;\n    }\n    case 'usdcOption': {\n      return isPrivateTopic\n        ? WS_KEY_MAP.usdcOptionPrivate\n        : WS_KEY_MAP.usdcOptionPublic;\n    }\n    case 'usdcPerp': {\n      return isPrivateTopic\n        ? WS_KEY_MAP.usdcPerpPrivate\n        : WS_KEY_MAP.usdcPerpPublic;\n    }\n    case 'unifiedOption': {\n      return isPrivateTopic\n        ? WS_KEY_MAP.unifiedPrivate\n        : WS_KEY_MAP.unifiedOptionPublic;\n    }\n    case 'unifiedPerp': {\n      if (isPrivateTopic) {\n        return WS_KEY_MAP.unifiedPrivate;\n      }\n\n      const upperTopic = topic.toUpperCase();\n      if (upperTopic.indexOf('USDT') !== -1) {\n        return WS_KEY_MAP.unifiedPerpUSDTPublic;\n      }\n\n      if (\n        upperTopic.indexOf('USDC') !== -1 ||\n        upperTopic.indexOf('PERP') !== -1\n      ) {\n        return WS_KEY_MAP.unifiedPerpUSDCPublic;\n      }\n\n      throw new Error(\n        `Failed to determine wskey for unified perps topic: \"${topic}\"`,\n      );\n    }\n    case 'contractInverse': {\n      return isPrivateTopic\n        ? WS_KEY_MAP.contractInversePrivate\n        : WS_KEY_MAP.contractInversePublic;\n    }\n    case 'contractUSDT': {\n      return isPrivateTopic\n        ? WS_KEY_MAP.contractUSDTPrivate\n        : WS_KEY_MAP.contractUSDTPublic;\n    }\n    case 'v5': {\n      if (isPrivateTopic) {\n        return WS_KEY_MAP.v5Private;\n      }\n\n      switch (category) {\n        case 'spot': {\n          return WS_KEY_MAP.v5SpotPublic;\n        }\n        case 'linear': {\n          return WS_KEY_MAP.v5LinearPublic;\n        }\n        case 'inverse': {\n          return WS_KEY_MAP.v5InversePublic;\n        }\n        case 'option': {\n          return WS_KEY_MAP.v5OptionPublic;\n        }\n        case undefined: {\n          throw new Error('Category cannot be undefined');\n        }\n        default: {\n          throw neverGuard(\n            category,\n            'getWsKeyForTopic(v5): Unhandled v5 category',\n          );\n        }\n      }\n    }\n    default: {\n      throw neverGuard(market, 'getWsKeyForTopic(): Unhandled market');\n    }\n  }\n}\n\nexport function getWsUrl(\n  wsKey: WsKey,\n  wsUrl: string | undefined,\n  isTestnet: boolean,\n  logger: typeof DefaultLogger,\n): string {\n  if (wsUrl) {\n    return wsUrl;\n  }\n\n  const networkKey = isTestnet ? 'testnet' : 'livenet';\n\n  switch (wsKey) {\n    case WS_KEY_MAP.linearPublic: {\n      return WS_BASE_URL_MAP.linear.public[networkKey];\n    }\n    case WS_KEY_MAP.linearPrivate: {\n      return WS_BASE_URL_MAP.linear.private[networkKey];\n    }\n    case WS_KEY_MAP.spotPublic: {\n      return WS_BASE_URL_MAP.spot.public[networkKey];\n    }\n    case WS_KEY_MAP.spotPrivate: {\n      return WS_BASE_URL_MAP.spot.private[networkKey];\n    }\n    case WS_KEY_MAP.spotV3Public: {\n      return WS_BASE_URL_MAP.spotv3.public[networkKey];\n    }\n    case WS_KEY_MAP.spotV3Private: {\n      return WS_BASE_URL_MAP.spotv3.private[networkKey];\n    }\n    case WS_KEY_MAP.inverse: {\n      // private and public are on the same WS connection\n      return WS_BASE_URL_MAP.inverse.public[networkKey];\n    }\n    case WS_KEY_MAP.usdcOptionPublic: {\n      return WS_BASE_URL_MAP.usdcOption.public[networkKey];\n    }\n    case WS_KEY_MAP.usdcOptionPrivate: {\n      return WS_BASE_URL_MAP.usdcOption.private[networkKey];\n    }\n    case WS_KEY_MAP.usdcPerpPublic: {\n      return WS_BASE_URL_MAP.usdcPerp.public[networkKey];\n    }\n    case WS_KEY_MAP.usdcPerpPrivate: {\n      return WS_BASE_URL_MAP.usdcPerp.private[networkKey];\n    }\n    case WS_KEY_MAP.unifiedOptionPublic: {\n      return WS_BASE_URL_MAP.unifiedOption.public[networkKey];\n    }\n    case WS_KEY_MAP.unifiedPerpUSDTPublic: {\n      return WS_BASE_URL_MAP.unifiedPerpUSDT.public[networkKey];\n    }\n    case WS_KEY_MAP.unifiedPerpUSDCPublic: {\n      return WS_BASE_URL_MAP.unifiedPerpUSDC.public[networkKey];\n    }\n    case WS_KEY_MAP.unifiedPrivate: {\n      return WS_BASE_URL_MAP.unifiedPerp.private[networkKey];\n    }\n    case WS_KEY_MAP.contractInversePrivate: {\n      return WS_BASE_URL_MAP.contractInverse.private[networkKey];\n    }\n    case WS_KEY_MAP.contractInversePublic: {\n      return WS_BASE_URL_MAP.contractInverse.public[networkKey];\n    }\n    case WS_KEY_MAP.contractUSDTPrivate: {\n      return WS_BASE_URL_MAP.contractUSDT.private[networkKey];\n    }\n    case WS_KEY_MAP.contractUSDTPublic: {\n      return WS_BASE_URL_MAP.contractUSDT.public[networkKey];\n    }\n    case WS_KEY_MAP.v5Private: {\n      return WS_BASE_URL_MAP.v5.private[networkKey];\n    }\n    case WS_KEY_MAP.v5SpotPublic: {\n      return WS_BASE_URL_MAP.v5SpotPublic.public[networkKey];\n    }\n    case WS_KEY_MAP.v5LinearPublic: {\n      return WS_BASE_URL_MAP.v5LinearPublic.public[networkKey];\n    }\n    case WS_KEY_MAP.v5InversePublic: {\n      return WS_BASE_URL_MAP.v5InversePublic.public[networkKey];\n    }\n    case WS_KEY_MAP.v5OptionPublic: {\n      return WS_BASE_URL_MAP.v5OptionPublic.public[networkKey];\n    }\n    default: {\n      logger.error('getWsUrl(): Unhandled wsKey: ', {\n        category: 'bybit-ws',\n        wsKey,\n      });\n      throw neverGuard(wsKey, 'getWsUrl(): Unhandled wsKey');\n    }\n  }\n}\n\nexport function getMaxTopicsPerSubscribeEvent(\n  market: APIMarket,\n  wsKey: WsKey,\n): number | null {\n  const topicsPerEventSpot = 10;\n  switch (market) {\n    case 'inverse':\n    case 'linear':\n    case 'usdcOption':\n    case 'usdcPerp':\n    case 'unifiedOption':\n    case 'unifiedPerp':\n    case 'spot':\n    case 'contractInverse':\n    case 'contractUSDT':\n    case 'v5': {\n      if (wsKey === WS_KEY_MAP.v5SpotPublic) {\n        return topicsPerEventSpot;\n      }\n      return null;\n    }\n    case 'spotv3': {\n      return topicsPerEventSpot;\n    }\n    default: {\n      throw neverGuard(market, 'getWsKeyForTopic(): Unhandled market');\n    }\n  }\n}\n\nexport function getUsdcWsKeyForTopic(\n  topic: string,\n  subGroup: 'option' | 'perp',\n): WsKey {\n  const isPrivateTopic = PRIVATE_TOPICS.includes(topic);\n  if (subGroup === 'option') {\n    return isPrivateTopic\n      ? WS_KEY_MAP.usdcOptionPrivate\n      : WS_KEY_MAP.usdcOptionPublic;\n  }\n  return isPrivateTopic\n    ? WS_KEY_MAP.usdcOptionPrivate\n    : WS_KEY_MAP.usdcOptionPublic;\n  // return isPrivateTopic\n  //   ? WS_KEY_MAP.usdcPerpPrivate\n  //   : WS_KEY_MAP.usdcPerpPublic;\n}\n\nexport const WS_ERROR_ENUM = {\n  NOT_AUTHENTICATED_SPOT_V3: '-1004',\n  API_ERROR_GENERIC: '10001',\n  API_SIGN_AUTH_FAILED: '10003',\n  USDC_OPTION_AUTH_FAILED: '3303006',\n};\n\nexport function neverGuard(x: never, msg: string): Error {\n  return new Error(`Unhandled value exception \"x\", ${msg}`);\n}\n\n/**\n * #305: ws.terminate() is undefined in browsers.\n * This only works in node.js, not in browsers.\n * Does nothing if `ws` is undefined.\n */\nexport function safeTerminateWs(ws?: WebSocket | unknown) {\n  // #305: ws.terminate() undefined in browsers\n  if (ws && typeof ws['terminate'] === 'function') {\n    ws.terminate();\n  }\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { EventEmitter } from 'events';\nimport WebSocket from 'isomorphic-ws';\n\nimport { InverseClient } from './inverse-client';\nimport { LinearClient } from './linear-client';\nimport { SpotClientV3 } from './spot-client-v3';\nimport { SpotClient } from './spot-client';\nimport { USDCOptionClient } from './usdc-option-client';\nimport { USDCPerpetualClient } from './usdc-perpetual-client';\nimport { UnifiedMarginClient } from './unified-margin-client';\nimport { ContractClient } from './contract-client';\n\nimport { signMessage } from './util/node-support';\nimport WsStore from './util/WsStore';\n\nimport {\n  APIMarket,\n  CategoryV5,\n  KlineInterval,\n  RESTClient,\n  WSClientConfigurableOptions,\n  WebsocketClientOptions,\n  WsKey,\n  WsTopic,\n} from './types';\n\nimport {\n  DefaultLogger,\n  PUBLIC_WS_KEYS,\n  WS_AUTH_ON_CONNECT_KEYS,\n  WS_KEY_MAP,\n  WsConnectionStateEnum,\n  getMaxTopicsPerSubscribeEvent,\n  getWsKeyForTopic,\n  getWsUrl,\n  isPrivateWsTopic,\n  isTopicSubscriptionConfirmation,\n  isTopicSubscriptionSuccess,\n  isWsPong,\n  neverGuard,\n  safeTerminateWs,\n  serializeParams,\n} from './util';\nimport { RestClientV5 } from './rest-client-v5';\nimport { WebsocketTopicSubscriptionConfirmationEvent } from './types/ws-events/topic-subscription-confirmation';\n\nconst loggerCategory = { category: 'bybit-ws' };\n\nexport type WsClientEvent =\n  | 'open'\n  | 'update'\n  | 'close'\n  | 'error'\n  | 'reconnect'\n  | 'reconnected'\n  | 'response';\n\ninterface WebsocketClientEvents {\n  /** Connection opened. If this connection was previously opened and reconnected, expect the reconnected event instead */\n  open: (evt: { wsKey: WsKey; event: any }) => void;\n  /** Reconnecting a dropped connection */\n  reconnect: (evt: { wsKey: WsKey; event: any }) => void;\n  /** Successfully reconnected a connection that dropped */\n  reconnected: (evt: { wsKey: WsKey; event: any }) => void;\n  /** Connection closed */\n  close: (evt: { wsKey: WsKey; event: any }) => void;\n  /** Received reply to websocket command (e.g. after subscribing to topics) */\n  response: (response: any) => void;\n  /** Received data for topic */\n  update: (response: any) => void;\n  /** Exception from ws client OR custom listeners */\n  error: (response: any) => void;\n}\n\ntype TopicsPendingSubscriptionsResolver = () => void;\ntype TopicsPendingSubscriptionsRejector = (reason: string) => void;\n\ninterface TopicsPendingSubscriptions {\n  wsKey: string;\n  failedTopicsSubscriptions: Set<string>;\n  pendingTopicsSubscriptions: Set<string>;\n  resolver: TopicsPendingSubscriptionsResolver;\n  rejector: TopicsPendingSubscriptionsRejector;\n}\n\n// Type safety for on and emit handlers: https://stackoverflow.com/a/61609010/880837\nexport declare interface WebsocketClient {\n  on<U extends keyof WebsocketClientEvents>(\n    event: U,\n    listener: WebsocketClientEvents[U],\n  ): this;\n\n  emit<U extends keyof WebsocketClientEvents>(\n    event: U,\n    ...args: Parameters<WebsocketClientEvents[U]>\n  ): boolean;\n}\n\n// eslint-disable-next-line no-redeclare\nexport class WebsocketClient extends EventEmitter {\n  private logger: typeof DefaultLogger;\n\n  private restClient?: RESTClient;\n\n  private options: WebsocketClientOptions;\n\n  private wsStore: WsStore;\n\n  private pendingTopicsSubscriptions: TopicsPendingSubscriptions[] = [];\n\n  constructor(\n    options: WSClientConfigurableOptions,\n    logger?: typeof DefaultLogger,\n  ) {\n    super();\n\n    this.logger = logger || DefaultLogger;\n    this.wsStore = new WsStore(this.logger);\n\n    this.options = {\n      testnet: false,\n      pongTimeout: 1000,\n      pingInterval: 10000,\n      reconnectTimeout: 500,\n      recvWindow: 5000,\n      fetchTimeOffsetBeforeAuth: false,\n      ...options,\n    };\n    this.options.restOptions = {\n      ...this.options.restOptions,\n      testnet: this.options.testnet,\n    };\n\n    this.prepareRESTClient();\n\n    // add default error handling so this doesn't crash node (if the user didn't set a handler)\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this.on('error', () => {});\n  }\n\n  /** Get the WsStore that tracks websockets & topics */\n  public getWsStore(): WsStore {\n    return this.wsStore;\n  }\n\n  public isTestnet(): boolean {\n    return this.options.testnet === true;\n  }\n\n  /**\n   * Subscribe to V5 topics & track/persist them.\n   * @param wsTopics - topic or list of topics\n   * @param category - the API category this topic is for (e.g. \"linear\"). The value is only important when connecting to public topics and will be ignored for private topics.\n   * @param isPrivateTopic - optional - the library will try to detect private topics, you can use this to mark a topic as private (if the topic isn't recognised yet)\n   */\n  public subscribeV5(\n    wsTopics: WsTopic[] | WsTopic,\n    category: CategoryV5,\n    isPrivateTopic?: boolean,\n  ) {\n    const topics = Array.isArray(wsTopics) ? wsTopics : [wsTopics];\n\n    return new Promise<void>((resolver, rejector) => {\n      topics.forEach((topic) => {\n        const wsKey = getWsKeyForTopic(\n          this.options.market,\n          topic,\n          isPrivateTopic,\n          category,\n        );\n\n        // Persist topic for reconnects\n        this.wsStore.addTopic(wsKey, topic);\n        this.upsertPendingTopicsSubscriptions(wsKey, topic, resolver, rejector);\n\n        // if connected, send subscription request\n        if (\n          this.wsStore.isConnectionState(wsKey, WsConnectionStateEnum.CONNECTED)\n        ) {\n          return this.requestSubscribeTopics(wsKey, [topic]);\n        }\n\n        // start connection process if it hasn't yet begun. Topics are automatically subscribed to on-connect\n        if (\n          !this.wsStore.isConnectionState(\n            wsKey,\n            WsConnectionStateEnum.CONNECTING,\n          ) &&\n          !this.wsStore.isConnectionState(\n            wsKey,\n            WsConnectionStateEnum.RECONNECTING,\n          )\n        ) {\n          return this.connect(wsKey);\n        }\n      });\n    });\n  }\n\n  /**\n   * Subscribe to V1-V3 topics & track/persist them.\n   *\n   * Note: for public V5 topics use the `subscribeV5()` method.\n   *\n   * Topics will be automatically resubscribed to if the connection resets/drops/reconnects.\n   * @param wsTopics - topic or list of topics\n   * @param isPrivateTopic optional - the library will try to detect private topics, you can use this to mark a topic as private (if the topic isn't recognised yet)\n   */\n  public subscribe(\n    wsTopics: WsTopic[] | WsTopic,\n    isPrivateTopic?: boolean,\n  ): Promise<void> {\n    const topics = Array.isArray(wsTopics) ? wsTopics : [wsTopics];\n    if (this.options.market === 'v5') {\n      topics.forEach((topic) => {\n        if (!isPrivateWsTopic(topic)) {\n          throw new Error(\n            'For public \"v5\" websocket topics, use the subscribeV5() method & provide the category parameter',\n          );\n        }\n      });\n    }\n\n    return new Promise<void>((resolver, rejector) => {\n      topics.forEach((topic) => {\n        const wsKey = getWsKeyForTopic(\n          this.options.market,\n          topic,\n          isPrivateTopic,\n        );\n\n        // Persist topic for reconnects\n        this.wsStore.addTopic(wsKey, topic);\n        this.upsertPendingTopicsSubscriptions(wsKey, topic, resolver, rejector);\n\n        // if connected, send subscription request\n        if (\n          this.wsStore.isConnectionState(wsKey, WsConnectionStateEnum.CONNECTED)\n        ) {\n          return this.requestSubscribeTopics(wsKey, [topic]);\n        }\n\n        // start connection process if it hasn't yet begun. Topics are automatically subscribed to on-connect\n        if (\n          !this.wsStore.isConnectionState(\n            wsKey,\n            WsConnectionStateEnum.CONNECTING,\n          ) &&\n          !this.wsStore.isConnectionState(\n            wsKey,\n            WsConnectionStateEnum.RECONNECTING,\n          )\n        ) {\n          return this.connect(wsKey);\n        }\n      });\n    });\n  }\n\n  private upsertPendingTopicsSubscriptions(\n    wsKey: string,\n    topic: string,\n    resolver: TopicsPendingSubscriptionsResolver,\n    rejector: TopicsPendingSubscriptionsRejector,\n  ) {\n    const existingWsKeyPendingSubscriptions =\n      this.pendingTopicsSubscriptions.find((s) => s.wsKey === wsKey);\n    if (!existingWsKeyPendingSubscriptions) {\n      this.pendingTopicsSubscriptions.push({\n        wsKey,\n        resolver,\n        rejector,\n        failedTopicsSubscriptions: new Set(),\n        pendingTopicsSubscriptions: new Set([topic]),\n      });\n      return;\n    }\n\n    existingWsKeyPendingSubscriptions.pendingTopicsSubscriptions.add(topic);\n  }\n\n  /**\n   * Unsubscribe from V5 topics & remove them from memory. They won't be re-subscribed to if the connection reconnects.\n   * @param wsTopics - topic or list of topics\n   * @param category - the API category this topic is for (e.g. \"linear\"). The value is only important when connecting to public topics and will be ignored for private topics.\n   * @param isPrivateTopic - optional - the library will try to detect private topics, you can use this to mark a topic as private (if the topic isn't recognised yet)\n   */\n  public unsubscribeV5(\n    wsTopics: WsTopic[] | WsTopic,\n    category: CategoryV5,\n    isPrivateTopic?: boolean,\n  ) {\n    const topics = Array.isArray(wsTopics) ? wsTopics : [wsTopics];\n    topics.forEach((topic) => {\n      const wsKey = getWsKeyForTopic(\n        this.options.market,\n        topic,\n        isPrivateTopic,\n        category,\n      );\n\n      // Remove topic from persistence for reconnects\n      this.wsStore.deleteTopic(wsKey, topic);\n      this.removeTopicPendingSubscription(wsKey, topic);\n\n      // unsubscribe request only necessary if active connection exists\n      if (\n        this.wsStore.isConnectionState(wsKey, WsConnectionStateEnum.CONNECTED)\n      ) {\n        this.requestUnsubscribeTopics(wsKey, [topic]);\n      }\n    });\n  }\n\n  private removeTopicPendingSubscription(wsKey: string, topic: string) {\n    const existingWsKeyPendingSubscriptions =\n      this.pendingTopicsSubscriptions.find((s) => s.wsKey === wsKey);\n    if (existingWsKeyPendingSubscriptions) {\n      existingWsKeyPendingSubscriptions.pendingTopicsSubscriptions.delete(\n        topic,\n      );\n      if (!existingWsKeyPendingSubscriptions.pendingTopicsSubscriptions.size) {\n        this.pendingTopicsSubscriptions =\n          this.pendingTopicsSubscriptions.filter((s) => s.wsKey !== wsKey);\n      }\n    }\n  }\n\n  private clearTopicsPendingSubscriptions(wsKey: string) {\n    this.pendingTopicsSubscriptions = this.pendingTopicsSubscriptions.filter(\n      (s) => s.wsKey !== wsKey,\n    );\n  }\n\n  /**\n   * Unsubscribe from V1-V3 topics & remove them from memory. They won't be re-subscribed to if the connection reconnects.\n   *\n   * Note: For public V5 topics, use `unsubscribeV5()` instead!\n   *\n   * @param wsTopics topic or list of topics\n   * @param isPrivateTopic optional - the library will try to detect private topics, you can use this to mark a topic as private (if the topic isn't recognised yet)\n   */\n  public unsubscribe(wsTopics: WsTopic[] | WsTopic, isPrivateTopic?: boolean) {\n    const topics = Array.isArray(wsTopics) ? wsTopics : [wsTopics];\n    if (this.options.market === 'v5') {\n      topics.forEach((topic) => {\n        if (!isPrivateWsTopic(topic)) {\n          throw new Error(\n            'For public \"v5\" websocket topics, use the unsubscribeV5() method & provide the category parameter',\n          );\n        }\n      });\n    }\n\n    topics.forEach((topic) => {\n      const wsKey = getWsKeyForTopic(\n        this.options.market,\n        topic,\n        isPrivateTopic,\n      );\n\n      // Remove topic from persistence for reconnects\n      this.wsStore.deleteTopic(wsKey, topic);\n      this.removeTopicPendingSubscription(wsKey, topic);\n\n      // unsubscribe request only necessary if active connection exists\n      if (\n        this.wsStore.isConnectionState(wsKey, WsConnectionStateEnum.CONNECTED)\n      ) {\n        this.requestUnsubscribeTopics(wsKey, [topic]);\n      }\n    });\n  }\n\n  /**\n   * @private Only used if we fetch exchange time before attempting auth. Disabled by default.\n   * I've removed this for ftx and it's working great, tempted to remove this here\n   */\n  private prepareRESTClient(): void {\n    switch (this.options.market) {\n      case 'inverse': {\n        this.restClient = new InverseClient(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        break;\n      }\n      case 'linear': {\n        this.restClient = new LinearClient(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        break;\n      }\n      case 'spot': {\n        this.restClient = new SpotClient(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        this.connectPublic();\n        break;\n      }\n      case 'spotv3': {\n        this.restClient = new SpotClientV3(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        break;\n      }\n      case 'usdcOption': {\n        this.restClient = new USDCOptionClient(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        break;\n      }\n      case 'usdcPerp': {\n        this.restClient = new USDCPerpetualClient(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        break;\n      }\n      case 'unifiedOption':\n      case 'unifiedPerp': {\n        this.restClient = new UnifiedMarginClient(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        break;\n      }\n      case 'contractInverse':\n      case 'contractUSDT': {\n        this.restClient = new ContractClient(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        break;\n      }\n      case 'v5': {\n        this.restClient = new RestClientV5(\n          this.options.restOptions,\n          this.options.requestOptions,\n        );\n        break;\n      }\n      default: {\n        throw neverGuard(\n          this.options.market,\n          'prepareRESTClient(): Unhandled market',\n        );\n      }\n    }\n  }\n\n  public close(wsKey: WsKey, force?: boolean) {\n    this.logger.info('Closing connection', { ...loggerCategory, wsKey });\n    this.setWsState(wsKey, WsConnectionStateEnum.CLOSING);\n    this.clearTimers(wsKey);\n\n    const ws = this.getWs(wsKey);\n    ws?.close();\n    if (force) {\n      safeTerminateWs(ws);\n    }\n  }\n\n  public closeAll(force?: boolean) {\n    const keys = this.wsStore.getKeys();\n    this.logger.info(`Closing all ws connections: ${keys}`);\n    keys.forEach((key) => {\n      this.close(key, force);\n    });\n  }\n\n  /**\n   * Request connection of all dependent (public & private) websockets, instead of waiting for automatic connection by library\n   */\n  public connectAll(): Promise<WebSocket | undefined>[] {\n    switch (this.options.market) {\n      case 'inverse': {\n        // only one for inverse\n        return [...this.connectPublic()];\n      }\n      // these all have separate public & private ws endpoints\n      case 'linear':\n      case 'spot':\n      case 'spotv3':\n      case 'usdcOption':\n      case 'usdcPerp':\n      case 'unifiedPerp':\n      case 'unifiedOption':\n      case 'contractUSDT':\n      case 'contractInverse': {\n        return [...this.connectPublic(), this.connectPrivate()];\n      }\n      case 'v5': {\n        return [this.connectPrivate()];\n      }\n      default: {\n        throw neverGuard(this.options.market, 'connectAll(): Unhandled market');\n      }\n    }\n  }\n\n  public connectPublic(): Promise<WebSocket | undefined>[] {\n    switch (this.options.market) {\n      case 'inverse': {\n        return [this.connect(WS_KEY_MAP.inverse)];\n      }\n      case 'linear': {\n        return [this.connect(WS_KEY_MAP.linearPublic)];\n      }\n      case 'spot': {\n        return [this.connect(WS_KEY_MAP.spotPublic)];\n      }\n      case 'spotv3': {\n        return [this.connect(WS_KEY_MAP.spotV3Public)];\n      }\n      case 'usdcOption': {\n        return [this.connect(WS_KEY_MAP.usdcOptionPublic)];\n      }\n      case 'usdcPerp': {\n        return [this.connect(WS_KEY_MAP.usdcPerpPublic)];\n      }\n      case 'unifiedOption': {\n        return [this.connect(WS_KEY_MAP.unifiedOptionPublic)];\n      }\n      case 'unifiedPerp': {\n        return [\n          this.connect(WS_KEY_MAP.unifiedPerpUSDTPublic),\n          this.connect(WS_KEY_MAP.unifiedPerpUSDCPublic),\n        ];\n      }\n      case 'contractUSDT':\n        return [this.connect(WS_KEY_MAP.contractUSDTPublic)];\n      case 'contractInverse':\n        return [this.connect(WS_KEY_MAP.contractInversePublic)];\n      case 'v5': {\n        return [\n          this.connect(WS_KEY_MAP.v5SpotPublic),\n          this.connect(WS_KEY_MAP.v5LinearPublic),\n          this.connect(WS_KEY_MAP.v5InversePublic),\n          this.connect(WS_KEY_MAP.v5OptionPublic),\n        ];\n      }\n      default: {\n        throw neverGuard(\n          this.options.market,\n          'connectPublic(): Unhandled market',\n        );\n      }\n    }\n  }\n\n  public connectPrivate(): Promise<WebSocket | undefined> {\n    switch (this.options.market) {\n      case 'inverse': {\n        return this.connect(WS_KEY_MAP.inverse);\n      }\n      case 'linear': {\n        return this.connect(WS_KEY_MAP.linearPrivate);\n      }\n      case 'spot': {\n        return this.connect(WS_KEY_MAP.spotPrivate);\n      }\n      case 'spotv3': {\n        return this.connect(WS_KEY_MAP.spotV3Private);\n      }\n      case 'usdcOption': {\n        return this.connect(WS_KEY_MAP.usdcOptionPrivate);\n      }\n      case 'usdcPerp': {\n        return this.connect(WS_KEY_MAP.usdcPerpPrivate);\n      }\n      case 'unifiedPerp':\n      case 'unifiedOption': {\n        return this.connect(WS_KEY_MAP.unifiedPrivate);\n      }\n      case 'contractUSDT':\n        return this.connect(WS_KEY_MAP.contractUSDTPrivate);\n      case 'contractInverse':\n        return this.connect(WS_KEY_MAP.contractInversePrivate);\n      case 'v5': {\n        return this.connect(WS_KEY_MAP.v5Private);\n      }\n      default: {\n        throw neverGuard(\n          this.options.market,\n          'connectPrivate(): Unhandled market',\n        );\n      }\n    }\n  }\n\n  private async connect(wsKey: WsKey): Promise<WebSocket | undefined> {\n    try {\n      if (this.wsStore.isWsOpen(wsKey)) {\n        this.logger.error(\n          'Refused to connect to ws with existing active connection',\n          { ...loggerCategory, wsKey },\n        );\n        return this.wsStore.getWs(wsKey);\n      }\n\n      if (\n        this.wsStore.isConnectionState(wsKey, WsConnectionStateEnum.CONNECTING)\n      ) {\n        this.logger.error(\n          'Refused to connect to ws, connection attempt already active',\n          { ...loggerCategory, wsKey },\n        );\n        return;\n      }\n\n      if (\n        !this.wsStore.getConnectionState(wsKey) ||\n        this.wsStore.isConnectionState(wsKey, WsConnectionStateEnum.INITIAL)\n      ) {\n        this.setWsState(wsKey, WsConnectionStateEnum.CONNECTING);\n      }\n\n      const authParams = await this.getAuthParams(wsKey);\n      const url = getWsUrl(\n        wsKey,\n        this.options.wsUrl,\n        this.isTestnet(),\n        this.logger,\n      );\n      const ws = this.connectToWsUrl(url + authParams, wsKey);\n\n      return this.wsStore.setWs(wsKey, ws);\n    } catch (err) {\n      this.parseWsError('Connection failed', err, wsKey);\n      this.reconnectWithDelay(wsKey, this.options.reconnectTimeout);\n    }\n  }\n\n  private parseWsError(context: string, error: any, wsKey: WsKey) {\n    if (!error.message) {\n      this.logger.error(`${context} due to unexpected error: `, error);\n      this.emit('error', error);\n      return;\n    }\n\n    switch (error.message) {\n      case 'Unexpected server response: 401':\n        this.logger.error(`${context} due to 401 authorization failure.`, {\n          ...loggerCategory,\n          wsKey,\n        });\n        break;\n\n      default:\n        if (\n          this.wsStore.getConnectionState(wsKey) !==\n          WsConnectionStateEnum.CLOSING\n        ) {\n          this.logger.error(\n            `${context} due to unexpected response error: \"${\n              error?.msg || error?.message || error\n            }\"`,\n            { ...loggerCategory, wsKey, error },\n          );\n          this.executeReconnectableClose(wsKey, 'unhandled onWsError');\n        } else {\n          this.logger.info(\n            `${wsKey} socket forcefully closed. Will not reconnect.`,\n          );\n        }\n        break;\n    }\n    this.emit('error', error);\n  }\n\n  /**\n   * Return params required to make authorized request\n   */\n  private async getAuthParams(wsKey: WsKey): Promise<string> {\n    if (PUBLIC_WS_KEYS.includes(wsKey)) {\n      this.logger.debug('Starting public only websocket client.', {\n        ...loggerCategory,\n        wsKey,\n      });\n      return '';\n    }\n\n    try {\n      const { signature, expiresAt } = await this.getWsAuthSignature(wsKey);\n\n      const authParams = {\n        api_key: this.options.key,\n        expires: expiresAt,\n        signature,\n      };\n\n      return '?' + serializeParams(authParams);\n    } catch (e) {\n      this.logger.error(e, { ...loggerCategory, wsKey });\n      return '';\n    }\n  }\n\n  private async sendAuthRequest(wsKey: WsKey): Promise<void> {\n    try {\n      const { signature, expiresAt } = await this.getWsAuthSignature(wsKey);\n\n      const request = {\n        op: 'auth',\n        args: [this.options.key, expiresAt, signature],\n        req_id: `${wsKey}-auth`,\n      };\n\n      return this.tryWsSend(wsKey, JSON.stringify(request));\n    } catch (e) {\n      this.logger.error(e, { ...loggerCategory, wsKey });\n    }\n  }\n\n  private async getWsAuthSignature(\n    wsKey: WsKey,\n  ): Promise<{ expiresAt: number; signature: string }> {\n    const { key, secret } = this.options;\n\n    if (!key || !secret) {\n      this.logger.warning(\n        'Cannot authenticate websocket, either api or private keys missing.',\n        { ...loggerCategory, wsKey },\n      );\n      throw new Error('Cannot auth - missing api or secret in config');\n    }\n\n    this.logger.debug(\"Getting auth'd request params\", {\n      ...loggerCategory,\n      wsKey,\n    });\n\n    const timeOffset = this.options.fetchTimeOffsetBeforeAuth\n      ? (await this.restClient?.fetchTimeOffset()) || 0\n      : 0;\n\n    const recvWindow = this.options.recvWindow || 5000;\n\n    const signatureExpiresAt = Date.now() + timeOffset + recvWindow;\n\n    const signature = await signMessage(\n      'GET/realtime' + signatureExpiresAt,\n      secret,\n    );\n\n    return {\n      expiresAt: signatureExpiresAt,\n      signature,\n    };\n  }\n\n  private reconnectWithDelay(wsKey: WsKey, connectionDelayMs: number) {\n    this.clearTimers(wsKey);\n\n    if (\n      this.wsStore.getConnectionState(wsKey) !==\n      WsConnectionStateEnum.CONNECTING\n    ) {\n      this.setWsState(wsKey, WsConnectionStateEnum.RECONNECTING);\n    }\n\n    if (this.wsStore.get(wsKey)?.activeReconnectTimer) {\n      this.clearReconnectTimer(wsKey);\n    }\n\n    this.wsStore.get(wsKey, true).activeReconnectTimer = setTimeout(() => {\n      this.logger.info('Reconnecting to websocket', {\n        ...loggerCategory,\n        wsKey,\n      });\n      this.clearReconnectTimer(wsKey);\n      this.connect(wsKey);\n    }, connectionDelayMs);\n  }\n\n  private ping(wsKey: WsKey) {\n    if (this.wsStore.get(wsKey, true).activePongTimer) {\n      return;\n    }\n\n    this.clearPongTimer(wsKey);\n\n    this.logger.silly('Sending ping', { ...loggerCategory, wsKey });\n    this.tryWsSend(wsKey, JSON.stringify({ op: 'ping' }));\n\n    this.wsStore.get(wsKey, true).activePongTimer = setTimeout(\n      () => this.executeReconnectableClose(wsKey, 'Pong timeout'),\n      this.options.pongTimeout,\n    );\n  }\n\n  /**\n   * Closes a connection, if it's even open. If open, this will trigger a reconnect asynchronously.\n   * If closed, trigger a reconnect immediately\n   */\n  private executeReconnectableClose(wsKey: WsKey, reason: string) {\n    this.logger.info(`${reason} - closing socket to reconnect`, {\n      ...loggerCategory,\n      wsKey,\n      reason,\n    });\n\n    const wasOpen = this.wsStore.isWsOpen(wsKey);\n\n    this.clearPingTimer(wsKey);\n    this.clearPongTimer(wsKey);\n\n    const ws = this.getWs(wsKey);\n\n    if (ws) {\n      ws.close();\n      safeTerminateWs(ws);\n    }\n\n    if (!wasOpen) {\n      this.logger.info(\n        `${reason} - socket already closed - trigger immediate reconnect`,\n        {\n          ...loggerCategory,\n          wsKey,\n          reason,\n        },\n      );\n      this.reconnectWithDelay(wsKey, this.options.reconnectTimeout);\n    }\n  }\n\n  private clearTimers(wsKey: WsKey) {\n    this.clearPingTimer(wsKey);\n    this.clearPongTimer(wsKey);\n    this.clearReconnectTimer(wsKey);\n  }\n\n  // Send a ping at intervals\n  private clearPingTimer(wsKey: WsKey) {\n    const wsState = this.wsStore.get(wsKey);\n    if (wsState?.activePingTimer) {\n      clearInterval(wsState.activePingTimer);\n      wsState.activePingTimer = undefined;\n    }\n  }\n\n  // Expect a pong within a time limit\n  private clearPongTimer(wsKey: WsKey) {\n    const wsState = this.wsStore.get(wsKey);\n    if (wsState?.activePongTimer) {\n      clearTimeout(wsState.activePongTimer);\n      wsState.activePongTimer = undefined;\n    }\n  }\n\n  private clearReconnectTimer(wsKey: WsKey) {\n    const wsState = this.wsStore.get(wsKey);\n    if (wsState?.activeReconnectTimer) {\n      clearTimeout(wsState.activeReconnectTimer);\n      wsState.activeReconnectTimer = undefined;\n    }\n  }\n\n  /**\n   * @private Use the `subscribe(topics)` method to subscribe to topics. Send WS message to subscribe to topics.\n   */\n  private requestSubscribeTopics(wsKey: WsKey, topics: string[]) {\n    if (!topics.length) {\n      return;\n    }\n\n    const maxTopicsPerEvent = getMaxTopicsPerSubscribeEvent(\n      this.options.market,\n      wsKey,\n    );\n    if (maxTopicsPerEvent && topics.length > maxTopicsPerEvent) {\n      this.logger.silly(\n        `Subscribing to topics in batches of ${maxTopicsPerEvent}`,\n      );\n      for (let i = 0; i < topics.length; i += maxTopicsPerEvent) {\n        const batch = topics.slice(i, i + maxTopicsPerEvent);\n        this.logger.silly(`Subscribing to batch of ${batch.length}`);\n        this.requestSubscribeTopics(wsKey, batch);\n      }\n      this.logger.silly(\n        `Finished batch subscribing to ${topics.length} topics`,\n      );\n      return;\n    }\n\n    const wsMessage = JSON.stringify({\n      req_id: topics.join(','),\n      op: 'subscribe',\n      args: topics,\n    });\n\n    this.tryWsSend(wsKey, wsMessage);\n  }\n\n  /**\n   * @private Use the `unsubscribe(topics)` method to unsubscribe from topics. Send WS message to unsubscribe from topics.\n   */\n  private requestUnsubscribeTopics(wsKey: WsKey, topics: string[]) {\n    if (!topics.length) {\n      return;\n    }\n\n    const maxTopicsPerEvent = getMaxTopicsPerSubscribeEvent(\n      this.options.market,\n      wsKey,\n    );\n    if (maxTopicsPerEvent && topics.length > maxTopicsPerEvent) {\n      this.logger.silly(\n        `Unsubscribing to topics in batches of ${maxTopicsPerEvent}`,\n      );\n      for (let i = 0; i < topics.length; i += maxTopicsPerEvent) {\n        const batch = topics.slice(i, i + maxTopicsPerEvent);\n        this.logger.silly(`Unsubscribing to batch of ${batch.length}`);\n        this.requestUnsubscribeTopics(wsKey, batch);\n      }\n      this.logger.silly(\n        `Finished batch unsubscribing to ${topics.length} topics`,\n      );\n      return;\n    }\n\n    const wsMessage = JSON.stringify({\n      op: 'unsubscribe',\n      args: topics,\n    });\n\n    this.tryWsSend(wsKey, wsMessage);\n  }\n\n  public tryWsSend(wsKey: WsKey, wsMessage: string) {\n    try {\n      this.logger.silly('Sending upstream ws message: ', {\n        ...loggerCategory,\n        wsMessage,\n        wsKey,\n      });\n      if (!wsKey) {\n        throw new Error(\n          'Cannot send message due to no known websocket for this wsKey',\n        );\n      }\n      const ws = this.getWs(wsKey);\n      if (!ws) {\n        throw new Error(\n          `${wsKey} socket not connected yet, call \"connect(${wsKey}) first then try again when the \"open\" event arrives`,\n        );\n      }\n      ws.send(wsMessage);\n    } catch (e) {\n      this.logger.error('Failed to send WS message', {\n        ...loggerCategory,\n        wsMessage,\n        wsKey,\n        exception: e,\n      });\n    }\n  }\n\n  private connectToWsUrl(url: string, wsKey: WsKey): WebSocket {\n    this.logger.silly(`Opening WS connection to URL: ${url}`, {\n      ...loggerCategory,\n      wsKey,\n    });\n\n    const agent = this.options.requestOptions?.agent;\n    const ws = new WebSocket(url, undefined, agent ? { agent } : undefined);\n    ws.onopen = (event) => this.onWsOpen(event, wsKey);\n    ws.onmessage = (event) => this.onWsMessage(event, wsKey);\n    ws.onerror = (event) =>\n      this.parseWsError('Websocket onWsError', event, wsKey);\n    ws.onclose = (event) => this.onWsClose(event, wsKey);\n\n    return ws;\n  }\n\n  private async onWsOpen(event, wsKey: WsKey) {\n    if (\n      this.wsStore.isConnectionState(wsKey, WsConnectionStateEnum.CONNECTING)\n    ) {\n      this.logger.info('Websocket connected', {\n        ...loggerCategory,\n        wsKey,\n        testnet: this.isTestnet(),\n        market: this.options.market,\n      });\n      this.emit('open', { wsKey, event });\n    } else if (\n      this.wsStore.isConnectionState(wsKey, WsConnectionStateEnum.RECONNECTING)\n    ) {\n      this.logger.info('Websocket reconnected', { ...loggerCategory, wsKey });\n      this.emit('reconnected', { wsKey, event });\n    }\n\n    this.setWsState(wsKey, WsConnectionStateEnum.CONNECTED);\n\n    // Some websockets require an auth packet to be sent after opening the connection\n    if (WS_AUTH_ON_CONNECT_KEYS.includes(wsKey)) {\n      this.logger.info('Sending auth request...');\n      await this.sendAuthRequest(wsKey);\n    }\n\n    // TODO: persistence not working yet for spot v1 topics\n    if (wsKey !== WS_KEY_MAP.spotPublic && wsKey !== WS_KEY_MAP.spotPrivate) {\n      const topics = [...this.wsStore.getTopics(wsKey)];\n      this.logger.info('Subscribing to topics', {\n        ...loggerCategory,\n        wsKey,\n        topics,\n      });\n      this.requestSubscribeTopics(wsKey, topics);\n    }\n\n    this.wsStore.get(wsKey, true)!.activePingTimer = setInterval(\n      () => this.ping(wsKey),\n      this.options.pingInterval,\n    );\n  }\n\n  private onWsMessage(event, wsKey: WsKey) {\n    try {\n      // any message can clear the pong timer - wouldn't get a message if the ws dropped\n      this.clearPongTimer(wsKey);\n\n      const msg = JSON.parse((event && event.data) || event);\n      // this.logger.silly('Received event', {\n      //   ...loggerCategory,\n      //   wsKey,\n      //   msg: JSON.stringify(msg),\n      // });\n\n      if (isTopicSubscriptionConfirmation(msg)) {\n        this.updatePendingTopicSubscriptionStatus(wsKey, msg);\n      }\n\n      // TODO: cleanme\n      if (msg['success'] || msg?.pong || isWsPong(msg)) {\n        if (isWsPong(msg)) {\n          this.logger.silly('Received pong', { ...loggerCategory, wsKey });\n        } else {\n          this.emit('response', { ...msg, wsKey });\n        }\n        return;\n      }\n\n      if (msg['finalFragment']) {\n        return this.emit('response', { ...msg, wsKey });\n      }\n      if (msg?.topic) {\n        return this.emit('update', { ...msg, wsKey });\n      }\n\n      if (\n        // spot v1\n        msg?.code ||\n        // spot v3\n        msg?.type === 'error' ||\n        // usdc options\n        msg?.success === false\n      ) {\n        return this.emit('error', { ...msg, wsKey });\n      }\n\n      this.logger.warning('Unhandled/unrecognised ws event message', {\n        ...loggerCategory,\n        message: msg,\n        event,\n        wsKey,\n      });\n    } catch (e) {\n      this.logger.error('Failed to parse ws event message', {\n        ...loggerCategory,\n        error: e,\n        event,\n        wsKey,\n      });\n    }\n  }\n\n  private updatePendingTopicSubscriptionStatus(\n    wsKey: string,\n    msg: WebsocketTopicSubscriptionConfirmationEvent,\n  ) {\n    const requestsIds = msg.req_id as string;\n    const pendingTopicsSubscriptions = this.pendingTopicsSubscriptions.find(\n      (s) => s.wsKey === wsKey,\n    );\n\n    if (!pendingTopicsSubscriptions) return;\n\n    const splitRequestsIds = requestsIds.split(',');\n    if (!isTopicSubscriptionSuccess(msg)) {\n      splitRequestsIds.forEach((req_id) =>\n        pendingTopicsSubscriptions.failedTopicsSubscriptions.add(req_id),\n      );\n    }\n\n    splitRequestsIds.forEach((req_id) => {\n      this.removeTopicPendingSubscription(wsKey, req_id);\n\n      if (\n        !pendingTopicsSubscriptions.pendingTopicsSubscriptions.size &&\n        !pendingTopicsSubscriptions.failedTopicsSubscriptions.size\n      ) {\n        // all topics have been subscribed successfully, so we can resolve the subscription request\n        pendingTopicsSubscriptions.resolver();\n        this.clearTopicsPendingSubscriptions(wsKey);\n      }\n\n      if (\n        !pendingTopicsSubscriptions.pendingTopicsSubscriptions.size &&\n        pendingTopicsSubscriptions.failedTopicsSubscriptions.size\n      ) {\n        // not all topics have been subscribed successfully, so we reject the subscription request\n        // and let the caller handle the situation by providing the list of failed subscriptions requests\n        const failedSubscriptionsMessage = `(${[\n          ...pendingTopicsSubscriptions.failedTopicsSubscriptions,\n        ].toString()}) failed to subscribe`;\n        pendingTopicsSubscriptions.rejector(failedSubscriptionsMessage);\n        this.clearTopicsPendingSubscriptions(wsKey);\n      }\n    });\n  }\n\n  private onWsClose(event, wsKey: WsKey) {\n    this.logger.info('Websocket connection closed', {\n      ...loggerCategory,\n      wsKey,\n    });\n\n    if (\n      this.wsStore.getConnectionState(wsKey) !== WsConnectionStateEnum.CLOSING\n    ) {\n      this.reconnectWithDelay(wsKey, this.options.reconnectTimeout);\n      this.emit('reconnect', { wsKey, event });\n    } else {\n      this.setWsState(wsKey, WsConnectionStateEnum.INITIAL);\n      this.emit('close', { wsKey, event });\n    }\n  }\n\n  private getWs(wsKey: WsKey) {\n    return this.wsStore.getWs(wsKey);\n  }\n\n  private setWsState(wsKey: WsKey, state: WsConnectionStateEnum) {\n    this.wsStore.setConnectionState(wsKey, state);\n  }\n\n  private wrongMarketError(market: APIMarket) {\n    return new Error(\n      `This WS client was instanced for the ${this.options.market} market. Make another WebsocketClient instance with \"market: '${market}'\" to listen to ${market} topics`,\n    );\n  }\n\n  /** @deprecated use \"market: 'spotv3\" client */\n  public subscribePublicSpotTrades(symbol: string, binary?: boolean) {\n    if (this.options.market !== 'spot') {\n      throw this.wrongMarketError('spot');\n    }\n\n    return this.tryWsSend(\n      WS_KEY_MAP.spotPublic,\n      JSON.stringify({\n        topic: 'trade',\n        event: 'sub',\n        symbol,\n        params: {\n          binary: !!binary,\n        },\n      }),\n    );\n  }\n\n  /** @deprecated use \"market: 'spotv3\" client */\n  public subscribePublicSpotTradingPair(symbol: string, binary?: boolean) {\n    if (this.options.market !== 'spot') {\n      throw this.wrongMarketError('spot');\n    }\n\n    return this.tryWsSend(\n      WS_KEY_MAP.spotPublic,\n      JSON.stringify({\n        symbol,\n        topic: 'realtimes',\n        event: 'sub',\n        params: {\n          binary: !!binary,\n        },\n      }),\n    );\n  }\n\n  /** @deprecated use \"market: 'spotv3\" client */\n  public subscribePublicSpotV1Kline(\n    symbol: string,\n    candleSize: KlineInterval,\n    binary?: boolean,\n  ) {\n    if (this.options.market !== 'spot') {\n      throw this.wrongMarketError('spot');\n    }\n\n    return this.tryWsSend(\n      WS_KEY_MAP.spotPublic,\n      JSON.stringify({\n        symbol,\n        topic: 'kline_' + candleSize,\n        event: 'sub',\n        params: {\n          binary: !!binary,\n        },\n      }),\n    );\n  }\n\n  //ws.send('{\"symbol\":\"BTCUSDT\",\"topic\":\"depth\",\"event\":\"sub\",\"params\":{\"binary\":false}}');\n  //ws.send('{\"symbol\":\"BTCUSDT\",\"topic\":\"mergedDepth\",\"event\":\"sub\",\"params\":{\"binary\":false,\"dumpScale\":1}}');\n  //ws.send('{\"symbol\":\"BTCUSDT\",\"topic\":\"diffDepth\",\"event\":\"sub\",\"params\":{\"binary\":false}}');\n\n  /** @deprecated use \"market: 'spotv3\" client */\n  public subscribePublicSpotOrderbook(\n    symbol: string,\n    depth: 'full' | 'merge' | 'delta',\n    dumpScale?: number,\n    binary?: boolean,\n  ) {\n    if (this.options.market !== 'spot') {\n      throw this.wrongMarketError('spot');\n    }\n\n    let topic: string;\n    switch (depth) {\n      case 'full': {\n        topic = 'depth';\n        break;\n      }\n      case 'merge': {\n        topic = 'mergedDepth';\n        if (!dumpScale) {\n          throw new Error('Dumpscale must be provided for merged orderbooks');\n        }\n        break;\n      }\n      case 'delta': {\n        topic = 'diffDepth';\n        break;\n      }\n    }\n\n    const msg: any = {\n      symbol,\n      topic,\n      event: 'sub',\n      params: {\n        binary: !!binary,\n      },\n    };\n    if (dumpScale) {\n      msg.params.dumpScale = dumpScale;\n    }\n    return this.tryWsSend(WS_KEY_MAP.spotPublic, JSON.stringify(msg));\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","// Axios v1.6.8 Copyright (c) 2024 Matt Zabriskie and contributors\n'use strict';\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n};\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n};\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0];\n  }\n\n  return str;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nvar utils$1 = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hasBrowserEnv: hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv: hasStandardBrowserEnv\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils$1.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders$1.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils$1.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils$1.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nconst VERSION = \"1.6.8\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n\n        if (!err.stack) {\n          err.stack = stack;\n          // match without the 2 top stack lines\n        } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n          err.stack += '\\n' + stack;\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3867);\n"],"names":["root","factory","exports","module","define","amd","self","AccountAssetClientV3","getClientType","REST_CLIENT_TYPE_ENUM","v3","fetchServerTime","res","this","getServerTime","Number","time","get","createInternalTransfer","params","postPrivate","getInternalTransfers","getPrivate","createSubAccountTransfer","getSubAccountTransfers","getSubAccounts","enableUniversalTransfer","createUniversalTransfer","getUniversalTransfers","getTransferableCoinList","getAccountCoinBalance","getAccountCoinBalances","getAssetInfo","getSupportedDepositList","getDepositRecords","getSubDepositRecords","getWithdrawRecords","getCoinInformation","coin","submitWithdrawal","cancelWithdrawal","withdrawalId","getMasterAccountDepositAddress","getSubAccountDepositAddress","createSubMember","createSubAPIKey","getSubMembers","freezeSubMember","subuid","frozenStatus","frozen","getAPIKeyInformation","modifyMasterAPIKey","modifySubAPIKey","deleteMasterAPIKey","deleteSubAPIKey","AccountAssetClient","accountAsset","time_now","getAssetInformation","id","getDepositAddress","getApiAnnouncements","LinearPositionIdx","linearPositionModeEnum","OneWayMode","HedgeMode","positionTpSlModeEnum","Full","Partial","API_ERROR_CODE","BALANCE_INSUFFICIENT_SPOT","ORDER_NOT_FOUND_OR_TOO_LATE_SPOT","SUCCESS","PARAMS_MISSING_OR_WRONG","INVALID_API_KEY_OR_PERMISSIONS","SIGNATURE_NOT_VALID","INCORRECT_API_KEY_PERMISSIONS","INCORRECT_API_REQUEST_IP","DB_ERROR_WRONG_CURSOR","ACCOUNT_NOT_UNIFIED","UNKNOWN_ERROR","BALANCE_INSUFFICIENT_SPOT_V3","ORDER_NOT_FOUND_SPOT_V3","ORDER_NOT_FOUND_LEVERAGED_TOKEN","EXCEEDED_UPPER_LIMIT_LEVERAGED_TOKEN","QUERY_ACCOUNT_INFO_ERROR","CROSS_MARGIN_USER_NOT_FOUND","CROSS_MARGIN_REPAYMENT_NOT_REQUIRED","CROSS_MARGIN_NOT_ENABLED","ORDER_NOT_FOUND_OR_TOO_LATE","POSITION_STATUS_NOT_NORMAL","CANNOT_SET_TRADING_STOP_FOR_ZERO_POS","INSUFFICIENT_BALANCE_FOR_ORDER_COST","POSITION_IDX_NOT_MATCH_POSITION_MODE","INSUFFICIENT_BALANCE","POSITION_IS_CROSS_MARGIN","POSITION_MODE_NOT_MODIFIED","ISOLATED_NOT_MODIFIED","RISK_LIMIT_NOT_EXISTS","SUB_USER_ALREADY_EXISTS","LEVERAGE_NOT_MODIFIED","SAME_SLTP_MODE","COPY_TRADE_NOT_OPEN_ORDER","V5_ORDER_NOT_FOUND","V5_INSUFFICIENT_BALANCE","V5_API_KEY_PERMISSION_DENIED","V5_CROSS_ISOLATED_MARGIN_NOT_CHANGED","V5_LEVERAGE_NOT_CHANGED","V5_MARGIN_MODE_NOT_CHANGED","V5_TPSL_NOT_CHANGED","V5_RISK_ID_NOT_CHANGED","V5_AUTO_ADD_MARGIN_NOT_CHANGED","V5_TPSL_ERROR_NO_POSITION","V5_RISK_ID_NOT_MODIFIED","QTY_EXCEEDS_MAX_LIMIT","ORDER_NOT_FOUND_OR_TOO_LATE_LINEAR","ORDER_COST_NOT_AVAILABLE","CANNOT_SET_LINEAR_TRADING_STOP_FOR_ZERO_POS","ISOLATED_NOT_MODIFIED_LINEAR","POSITION_SIZE_IS_ZERO","AUTO_ADD_MARGIN_NOT_MODIFIED","INSUFFICIENT_BALANCE_FOR_ORDER_COST_LINEAR","SAME_SLTP_MODE_LINEAR","NOT_SUPPORTED_FOR_SUBACCOUNTS","TRANSFER_ID_EXISTS","RISK_ID_NOT_MODIFIED","CONTRACT_ORDER_NOT_EXISTS","CONTRACT_INSUFFICIENT_BALANCE","CONTRACT_POSITION_MODE_NOT_MODIFIED","CONTRACT_MARGIN_MODE_NOT_MODIFIED","CONTRACT_RISK_LIMIT_INFO_NOT_EXISTS","CONTRACT_SET_LEVERAGE_NOT_MODIFIED","SUB_USER_NOT_FOUND","SPOT_LEVERAGE_TOKEN_INSUFFICIENT_BALANCE","SPOT_LEVERAGE_TOKEN_ORDER_NOT_FOUND","SPOT_LEVERAGE_QUIZ_REQUIRED","SPOT_MARGIN_NOT_ENABLED","SPOT_MARGIN_QUESTIONNAIRE_NOT_SUBMIT","CONTRACT_NAME_NOT_EXIST","ORDER_NOT_EXIST","NO_ACTIVE_ORDER","ACCOUNT_NOT_EXIST","INCORRECT_PRIVATE_OPERATIONS","SET_MARGIN_MODE_FAILED_USDC","INCORRECT_MMP_PARAMETERS","INSTITION_MMP_PROFILE_NOT_FOUND","ContractClient","getOrderBook","symbol","category","limit","getCandles","getSymbolTicker","getInstrumentInfo","getMarkPriceCandles","getIndexPriceCandles","getFundingRateHistory","getRiskLimit","getOptionDeliveryPrice","getTrades","getOpenInterest","submitOrder","getHistoricOrders","cancelOrder","cancelAllOrders","modifyOrder","getActiveOrders","getPositions","setAutoAddMargin","setMarginSwitch","setPositionMode","setTPSLMode","tpSlMode","setLeverage","buyLeverage","sellLeverage","setTPSL","setRiskLimit","riskId","positionIdx","getUserExecutionHistory","getClosedProfitAndLoss","getOpenInterestLimitInfo","getBalances","getTradingFeeRate","getWalletFundRecords","CopyTradingClient","getSymbols","setTradingStop","closeOrder","closePosition","transfer","getAnnouncements","InverseClient","inverse","getKline","getTickers","getMarkPriceKline","getIndexPriceKline","getPremiumIndexKline","getLatestBigDeal","getLongShortRatio","getApiKeyInfo","getWalletBalance","getAssetExchangeRecords","placeActiveOrder","orderRequest","getActiveOrderList","cancelActiveOrder","cancelAllActiveOrders","replaceActiveOrder","queryActiveOrder","placeConditionalOrder","getConditionalOrder","cancelConditionalOrder","cancelAllConditionalOrders","replaceConditionalOrder","queryConditionalOrder","getPosition","changePositionMargin","setUserLeverage","getTradeRecords","getClosedPnl","setSlTpPositionMode","setMarginType","getLastFundingRate","getMyLastFundingFee","getPredictedFunding","getLcpInfo","InverseFuturesClient","inverseFutures","LinearClient","linear","timeRes","setPositionTpSlMode","setAddReduceMargin","getHistoryTradeRecords","getRiskLimitList","getPredictedFundingFee","getLastFundingFee","RestClientV5","getPremiumIndexPriceKline","getInstrumentsInfo","getOrderbook","getPublicTradingHistory","getHistoricalVolatility","getInsurance","getDeliveryPrice","amendOrder","batchSubmitOrders","orders","request","batchAmendOrders","batchCancelOrders","getSpotBorrowCheck","side","setDisconnectCancelAllWindow","timeWindow","getPositionInfo","switchIsolatedMargin","switchPositionMode","addOrReduceMargin","getExecutionList","getClosedPnL","getPreUpgradeOrderHistory","getPreUpgradeTradeHistory","getPreUpgradeClosedPnl","upgradeToUnifiedAccount","getBorrowHistory","repayLiability","setCollateralCoin","batchSetCollateralCoin","getCollateralInfo","currency","getCoinGreeks","baseCoin","undefined","getFeeRate","getAccountInfo","getTransactionLog","setMarginMode","marginMode","setMMP","resetMMP","getMMPState","getCoinExchangeRecords","getDeliveryRecord","getSettlementRecords","getAllCoinsBalance","getCoinBalance","fromAccountType","toAccountType","transferId","amount","getInternalTransferRecords","getSubUID","enableUniversalTransferForSubUIDs","subMemberIds","getUniversalTransferRecords","getAllowedDepositCoinInfo","setDepositAccount","getSubAccountDepositRecords","getInternalDepositRecords","getMasterDepositAddress","chainType","getSubDepositAddress","subMemberId","querySubMemberAddress","getCoinInfo","getWithdrawalRecords","getWithdrawableAmount","createSubUIDAPIKey","getSubUIDList","setSubUIDFrozenState","getQueryApiKey","updateMasterApiKey","updateSubApiKey","deleteMasterApiKey","deleteSubApiKey","deleteSubMember","getLeveragedTokenInfo","ltCoin","getLeveragedTokenMarket","purchaseSpotLeveragedToken","redeemSpotLeveragedToken","getSpotLeveragedTokenOrderHistory","toggleSpotMarginTrade","spotMarginMode","setSpotMarginLeverage","leverage","getSpotMarginCoinInfo","getSpotMarginBorrowableCoinInfo","getSpotMarginInterestAndQuota","getSpotMarginLoanAccountInfo","spotMarginBorrow","spotMarginRepay","getSpotMarginBorrowOrderDetail","getSpotMarginRepaymentOrderDetail","toggleSpotCrossMarginTrade","getInstitutionalLendingProductInfo","productId","getInstitutionalLendingMarginCoinInfo","getInstitutionalLendingMarginCoinInfoWithConversionRate","getInstitutionalLendingLoanOrders","getInstitutionalLendingRepayOrders","getInstitutionalLendingLTV","getInstitutionalLendingLTVWithLadderConversionRate","SpotClientV3","getMergedOrderBook","scale","interval","startTime","endTime","get24hrTicker","getLastTradedPrice","getBestBidAskPrice","getOrder","cancelOrderBatch","orderTypes","join","cancelOrderBatchIDs","orderIds","orderIdsCsv","getOpenOrders","orderId","orderCategory","getPastOrders","getMyTrades","getLeveragedTokenAssetInfos","ltCode","getLeveragedTokenMarketInfo","purchaseLeveragedToken","ltAmount","serialNo","redeemLeveragedToken","getLeveragedTokenPRHistory","borrowCrossMarginLoan","qty","repayCrossMarginLoan","getCrossMarginBorrowingInfo","getCrossMarginAccountInfo","getCrossMarginInterestQuota","getCrossMarginRepaymentHistory","SpotClient","spot","result","serverTime","deletePrivate","fromId","toId","UnifiedMarginClient","batchReplaceOrders","get7DayTradingHistory","getOptionsSettlementHistory","getUSDCPerpetualSettlementHistory","upgradeToUnifiedMargin","transferFunds","getCoinExchangeHistory","getBorrowRate","USDCOptionClient","getContractInfo","getLast500Trades","batchModifyOrders","replaceOrderRequest","cancelRequest","cancelActiveOrders","getActiveRealtimeOrders","getOrderExecutionHistory","newMarginMode","getMarginMode","getDeliveryHistory","getPositionsInfoUponExpiry","modifyMMP","queryMMPState","USDCPerpetualClient","getMarkPrice","getIndexPrice","getIndexPremium","getLargeOrders","orderFilter","getSettlementHistory","getPredictedFundingRate","ENABLE_HTTP_TRACE","process","env","BYBITTRACE","interceptors","response","use","console","log","Date","url","config","method","data","headers","status","statusText","constructor","restOptions","networkOptions","timeOffset","syncTimePromise","clientType","options","recv_window","strict_param_validation","enable_time_sync","sync_interval_ms","syncTimeBeforePrivateRequests","encodeSerialisedValues","globalRequestOptions","timeout","baseUrl","getRestBaseUrl","testnet","key","secret","Error","syncTime","setInterval","bind","isSpotV1Client","endpoint","_call","post","prepareSignParams","signMethod","isPublicApi","originalParams","paramsWithSign","fetchTimeOffset","signRequest","buildRequest","signResult","timestamp","sign","recvWindow","requestUrl","startsWith","then","perAPIRateLimits","parseAPIRateLimits","parseRateLimitHeaders","throwOnFailedRateLimitParse","rateLimitApi","catch","e","parseException","parse_exceptions","message","code","body","requestOptions","now","serializedParams","strictParamValidation","sortProperties","signRequestParams","serializeParams","JSON","stringify","paramsStr","signMessage","api_key","encodeValues","force","offset","Promise","resolve","start","isNaN","end","severTimeMs","avgDrift","Math","ceil","error","WsConnectionStateEnum","logger","DefaultLogger","wsState","createIfMissing","create","getKeys","Object","keys","hasExistingActiveConnection","warning","getWs","subscribedTopics","Set","connectionState","INITIAL","ws","close","isWsOpen","setWs","wsConnection","existingConnection","readyState","OPEN","getConnectionState","setConnectionState","state","isConnectionState","getTopics","getTopicsByKey","refKey","addTopic","topic","add","deleteTopic","delete","encoder","TextEncoder","window","crypto","subtle","importKey","encode","name","hash","signature","Array","prototype","map","call","Uint8Array","x","toString","slice","silly","debug","notice","info","isTopicSubscriptionConfirmation","msg","strict_validation","sort","value","encodeURIComponent","useTestnet","restInverseOptions","pong","ping","op","ret_msg","success","remaining","max","resetAt","remainingRequests","maxRequests","resetAtTimestamp","exception","event","includes","WS_BASE_URL_MAP","public","livenet","private","livenet2","testnet2","spotv3","usdcOption","usdcPerp","unifiedOption","unifiedPerp","unifiedPerpUSDT","unifiedPerpUSDC","contractUSDT","contractInverse","v5","v5SpotPublic","v5LinearPublic","v5InversePublic","v5OptionPublic","WS_KEY_MAP","linearPrivate","linearPublic","spotPrivate","spotPublic","spotV3Private","spotV3Public","usdcOptionPrivate","usdcOptionPublic","usdcPerpPrivate","usdcPerpPublic","unifiedPrivate","unifiedOptionPublic","unifiedPerpUSDTPublic","unifiedPerpUSDCPublic","contractUSDTPublic","contractUSDTPrivate","contractInversePublic","contractInversePrivate","v5Private","WS_AUTH_ON_CONNECT_KEYS","PUBLIC_WS_KEYS","PRIVATE_TOPICS","neverGuard","market","isPrivate","isPrivateTopic","upperTopic","toUpperCase","indexOf","wsKey","wsUrl","isTestnet","networkKey","subGroup","WS_ERROR_ENUM","NOT_AUTHENTICATED_SPOT_V3","API_ERROR_GENERIC","API_SIGN_AUTH_FAILED","USDC_OPTION_AUTH_FAILED","terminate","loggerCategory","WebsocketClient","EventEmitter","super","pendingTopicsSubscriptions","wsStore","pongTimeout","pingInterval","reconnectTimeout","fetchTimeOffsetBeforeAuth","prepareRESTClient","on","getWsStore","subscribeV5","wsTopics","topics","isArray","resolver","rejector","forEach","getWsKeyForTopic","upsertPendingTopicsSubscriptions","CONNECTED","requestSubscribeTopics","CONNECTING","RECONNECTING","connect","subscribe","isPrivateWsTopic","existingWsKeyPendingSubscriptions","find","s","push","failedTopicsSubscriptions","unsubscribeV5","removeTopicPendingSubscription","requestUnsubscribeTopics","size","filter","clearTopicsPendingSubscriptions","unsubscribe","restClient","connectPublic","setWsState","CLOSING","clearTimers","safeTerminateWs","closeAll","connectAll","connectPrivate","authParams","getAuthParams","getWsUrl","connectToWsUrl","err","parseWsError","reconnectWithDelay","context","emit","executeReconnectableClose","expiresAt","getWsAuthSignature","expires","sendAuthRequest","args","req_id","tryWsSend","signatureExpiresAt","connectionDelayMs","activeReconnectTimer","clearReconnectTimer","setTimeout","activePongTimer","clearPongTimer","reason","wasOpen","clearPingTimer","activePingTimer","clearInterval","clearTimeout","length","maxTopicsPerEvent","getMaxTopicsPerSubscribeEvent","i","batch","wsMessage","send","agent","onopen","onWsOpen","onmessage","onWsMessage","onerror","onclose","onWsClose","parse","updatePendingTopicSubscriptionStatus","isWsPong","type","requestsIds","splitRequestsIds","split","isTopicSubscriptionSuccess","failedSubscriptionsMessage","wrongMarketError","subscribePublicSpotTrades","binary","subscribePublicSpotTradingPair","subscribePublicSpotV1Kline","candleSize","subscribePublicSpotOrderbook","depth","dumpScale","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","init","once","emitter","reject","errorListener","removeListener","arguments","eventTargetAgnosticAddListener","handler","flags","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","prepend","m","events","existing","newListener","unshift","warned","w","String","count","warn","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","rawListeners","eventNames","WebSocket","MozWebSocket","g","fn","thisArg","kindOf","cache","thing","str","toLowerCase","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","obj","allOwnKeys","l","findKey","_key","_global","globalThis","isContextDefined","isTypedArray","TypedArray","isHTMLForm","hasOwnProperty","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isAsyncFn","utils$1","isBuffer","isFormData","kind","FormData","append","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","extend","a","b","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","assign","toFlatObject","sourceObj","destObj","propFilter","merged","endsWith","searchString","lastIndex","toArray","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","writable","toObjectSet","arrayOrString","delimiter","toCamelCase","p1","p2","noop","toFiniteNumber","defaultValue","isFinite","global","generateString","alphabet","random","isSpecCompliantForm","toJSONObject","stack","visit","source","reducedValue","isThenable","AxiosError","captureStackTrace","toJSON","description","number","fileName","lineNumber","columnNumber","prototype$1","isVisitable","removeBrackets","renderKey","path","dots","token","from","customProps","axiosError","cause","predicates","test","toFormData","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","some","isFlatArray","el","exposedHelpers","build","encode$1","charMap","match","AxiosURLSearchParams","_pairs","buildURL","_encode","serializeFn","serialize","hashmarkIndex","InterceptorManager$1","handlers","fulfilled","rejected","synchronous","runWhen","eject","clear","h","transitionalDefaults","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","platform$1","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","hasStandardBrowserEnv","product","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","freeze","__proto__","formDataToJSON","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","defaults$1","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","normalized","char","formatHeader","targets","asStrings","first","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","AxiosHeaders$1","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","cookies","write","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","isURLSameOrigin","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","protocol","host","search","hostname","port","pathname","charAt","location","requestURL","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","knownAdapters","http","xhr","XMLHttpRequest","requestData","requestHeaders","onCanceled","withXSRFToken","cancelToken","signal","Boolean","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","ERR_BAD_REQUEST","floor","settle","responseText","open","paramsSerializer","onreadystatechange","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","setRequestHeader","withCredentials","onDownloadProgress","onUploadProgress","upload","cancel","abort","aborted","parseProtocol","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","validators$1","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","validators","Axios","instanceConfig","configOrUrl","_request","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","Axios$1","CancelToken","executor","resolvePromise","onfulfilled","_resolve","splice","c","CancelToken$1","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","HttpStatusCode$1","axios","createInstance","defaultConfig","instance","VERSION","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}